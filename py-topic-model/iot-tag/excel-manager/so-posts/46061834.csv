thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
46061834,46061834,null,1,0,Tue Sep 05 19:12:00 EDT 2017,8441464,"<p>This is a controller code of an Azure Web App that handles a device notification logic. What I'm doing is invoking the code shown below from a ASP MVC Controller. But when I run it I get an ever-pending request from the browser(it hangs).	I have a button on view, when clicked, it invokes Wakeup method in the controller.</p>		<p>The code is not different from the one on <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-csharp-csharp-c2d" rel="nofollow noreferrer">MSDN</a> for a console application. What am I missing?</p>		<pre><code>using System.Text;	using Microsoft.Azure.Devices;		 public class MyTemplate2Controller : Controller	    {	        static ServiceClient serviceClient;	        static string connectionString = "HostName=azure-devices.net;SharedAccessKeyName=iothub;SharedAccessKey=mrUPt*2318C18K3LUk+oFarkNQ4vRvHrOa/eg=";		        private AsyncController Task SendCloudToDeviceMessageAsync()	        {	            var asd = "{13A20041677B0,4,15,0}";	            var commandMessage = new Message(Encoding.ASCII.GetBytes(asd));	          return  await serviceClient.SendAsync("Test_Comp_Dev_1", commandMessage).ConfigureAwait(continueOnCapturedContext: false);	        }	        public void Wakeup()	        {		            serviceClient = ServiceClient.CreateFromConnectionString(connectionString);		            SendCloudToDeviceMessageAsync().Wait();	        }	</code></pre>	"
46061834,79088945,46061834,3,0,Tue Sep 05 22:11:00 EDT 2017,3919502,"This question is too general, I recommend you try and do a remote debugging session to see where exactly your code is failing. https://docs.microsoft.com/en-us/visualstudio/debugger/remote-debugging-azure"
46061834,46068449,46061834,2,1,Wed Sep 06 06:40:00 EDT 2017,8084828,"<p>try the following:</p>		<pre><code>    public void Wakeup()	    {	        serviceClient = ServiceClient.CreateFromConnectionString(connectionString);		        System.Threading.ThreadPool.QueueUserWorkItem(a =&gt; SendCloudToDeviceMessageAsync().Wait());	    }	</code></pre>	"
46061834,79123186,46068449,3,0,Wed Sep 06 17:06:00 EDT 2017,8084828,"The problem was in the await deadlock inside of the sync method. Using the ThreadPool.QueueUserWorkItem was a quick workaround to yield the method. The better solution is to use an Asynchronous Controller, see more details: https://msdn.microsoft.com/en-us/library/ee728598%28v=vs.100%29.aspx,  https://stackoverflow.com/questions/20227401/using-await-taskt-async-hangs-controller-in-mvc-app"
46061834,79111314,46068449,3,0,Wed Sep 06 12:27:00 EDT 2017,8441464,"Its working. Can you explain what the problem was?"
