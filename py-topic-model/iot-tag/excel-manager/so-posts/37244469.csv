thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
37244469,37244469,null,1,1,Sun May 15 22:42:00 EDT 2016,555447,"<p>I am new to this paradigm so please bear with my stupidity. I started reading about this topic since I am building an IoT System that will use message queues to allow devices to communicate with each other. </p>		<p>I am currently using Azure's Service Bus, However I believe that my question applies to this paradigm in general. </p>		<p>So on to my question... My devices have inputs and outputs, with my current level of knowledge, the obvious thing to do is to create a topic per input or output, it feels much cleaner this way and I avoid unnecessary filtering. However, I am not sure whether this would create performance issues or any other issues which I cannot foresee. </p>		<ul>	<li>Should I create a topic per input/output or should I create a topic per device and then use filters to get the required information?</li>	<li>Is it bad practice to have a lot of topics? </li>	</ul>	"
37244469,62017939,37244469,3,1,Sun May 15 22:54:00 EDT 2016,59563,"Don't forget about ASB quotas. If you'll have more devices than allowed max number of topics, your topology won't work."
37244469,62018044,37244469,3,0,Sun May 15 23:02:00 EDT 2016,555447,"hmm... that is certainly something to consider"
37244469,62022939,37244469,3,0,Mon May 16 05:30:00 EDT 2016,59563,"Have you considered EvenHubs for this rather than Service Bus?"
37244469,37249858,37244469,2,2,Mon May 16 08:41:00 EDT 2016,1963868,"<p>For the IoT projects, there are two more... "suitable" services that were developed especially for the IoT:</p>		<p>1) Event Hubs</p>		<p>2) IoT Hubs</p>		<p>The first one is for scenarios that are more events-oriented. What i mean - to implement the management of the device from the backend will be more complex with the Event Hubs and less complex with the IoT Hubs.</p>		<p>I would highly recommend you to take a look at these services, because Service Bus is the great service, but the listed services are more IoT-oriented.</p>		<p>From the architecture standpoint, recently Microsoft published the IoT Reference Architecture whitepaper that you may download <a href="https://azure.microsoft.com/en-us/updates/microsoft-azure-iot-reference-architecture-available/" rel="nofollow">here</a>. It has the recommendations, services, best practices etc that may be used for the Azure + IoT projects from the Microsoft point of view. </p>		<p>Another helpful resource could be <a href="http://azureiotsuite.com" rel="nofollow">http://azureiotsuite.com</a> . It is the reference IoT architecture <strong>implemented</strong>. So, if you click on the Create, you will have one of two reference architectures (remote monitoring or predictive maintenance) in your Azure subscription and you will be able to review all of the flows.</p>		<p>So, i would recommend to consider to use IoT/Event Hubs instead of the SB Topics/Queues because in the IoT field, the service that is optimized for these workloads should perform better than non-optimized initially.</p>	"
