thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
37726329,37726329,null,1,0,Thu Jun 09 12:42:00 EDT 2016,6445395,"<p>I'm working on a project that involves some connected objects.</p>		<p>The devices will have an "alert" button if the owner has a problem. When the alert button is pressed, the web application is informed (owner, GPS position...), and looks for someone to handle the alert (can take a few minutes). When someone is found, the app sends a signal to the device to say "OK, we will take care of you".</p>		<p>The device will communicate through GPRS. </p>		<p>My question is : what architecture do I need to handle that?</p>		<p>Of course, I need :	- the device	- a web server running the web app (probably a PHP app)</p>		<p>Do I need something else, like a middleware? Can the device communicate directly with the server? What are the best practices? Any pieces of advice?</p>		<p>Regards</p>	"
37726329,62924241,37726329,3,0,Thu Jun 09 12:50:00 EDT 2016,4974662,"please read http://stackoverflow.com/tour. Questions regarding software or hardware recommendations are not for SO."
37726329,62925178,37726329,3,0,Thu Jun 09 13:10:00 EDT 2016,6445395,"Sorry, didn't know. Where do you suggest me to post? Web applications? Regards"
37726329,37738348,37726329,2,0,Fri Jun 10 00:45:00 EDT 2016,6447623,"<p>At its simplest all you need is an API.  What language you use doesn't really matter but I would recommend communicating via JSON over SOAP or another  format if for no other reason than it is fairly standard and easy to implement in any language.	If you find yourself with tons of APIs it may be worthwhile to look into a middleware app but if its just a few (say less than 10 to throw out a number at random) you should probably just connect directly. You can always grow into a middleware app later if you need it.</p>	"
37726329,37761742,37726329,2,0,Sat Jun 11 08:40:00 EDT 2016,371933,"<p>Make sure to use the AMQP protocol, or MQTT so you have bi-directional "low overhead" support to avoid polling. I know Azure IoT Hub supports both, from there it's just a matter of handling incoming messages on your device, and outgoing messages on your PHP backend. </p>	"
