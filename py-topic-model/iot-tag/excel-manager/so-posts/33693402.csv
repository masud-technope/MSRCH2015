thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33693402,33693402,null,1,8,Fri Nov 13 13:05:00 EST 2015,771271,"<p>I have a backend device with MQTT client connected to opensource MQTT broker (Mosquitto). On the other hand I have many frontend devices (PC, Tablet, Mobile) with GUI application also connected to the broker. So here Mosquitto works as a communication point between backend device and frontend devices and just forwards messages between them. Sometimes amount of data transferred can be quite high (e.g. 1 MB / min).</p>		<p>One backend device + many frontend devices is one installation. I need to prepare infrastructure for thousands of such installations working simultaneously. So my service needs to be very scallable. My company uses Azure cloud solutions, so I've started learning of this solution and I must admit that I am a little bit confused. I've read that I need to use IoT Hub, but it would need MQTT Gateway to be able to speak with MQTT devices. On the other hand, if I understand it well, the Gateway needs to be running on some VM, so here I lose scalability of my solution. Am I right? Now if I will need to support 100k or 500k devices then I will need another VM? One more thing is that I need to integrate all of this with some webservice (for management of backend and frontend devices), so I need some connection between webservice and the MQTT broker...</p>		<p>Before I started to play with Azure, I imagined, that I will simply start an MQTT broker service and magically it will be highly scallable and will be able to provide service for thousands of devices. </p>		<p>Can anybody explain me how to bite that?</p>	"
33693402,33696808,33693402,2,3,Fri Nov 13 15:57:00 EST 2015,2210944,"<p>Today there isn't an official support for MQTT protocol in Azure but only the public preview of IoT Hub that supports AMQP and HTTP.	To connect MQTT devices to the IoT Hub, Microsoft provides a "framework" named IoT Protocol Gateway (<a href="https://github.com/Azure/azure-iot-protocol-gateway" rel="nofollow noreferrer">https://github.com/Azure/azure-iot-protocol-gateway</a>) that executes a protocol translation between MQTT and AMQP.	The IoT Protocol Gateway can be installed on premise or in the cloud as an Azure Worker Role. In the second scenario you have the scalability offered by Azure and related to worker role instances.	This solution is absolutely new due to the short life of IoT Hub (still in public preview) and the IoT Protocol Gateway itself.</p>		<p>Your first solution is based on using a third-party MQTT broker (like mosquitto) that you should install in a VM. AFAIK mosquitto doesn't support clustering like HiveMQ broker (see another reply here : <a href="https://stackoverflow.com/questions/26280208/cluster-forming-with-mosquitto-broker">Cluster forming with Mosquitto broker</a>).</p>		<p>Last thing about the connection between your web service and the MQTT broker.	In this case the web service should translate calls to him (from front end) to published message on the MQTT broker using an MQTT client that you need to include inside the web service itself.</p>		<p>Even if using AWS, the following link could be useful too :	<a href="https://groups.google.com/forum/#!topic/mqtt/19jqofoPLro" rel="nofollow noreferrer">https://groups.google.com/forum/#!topic/mqtt/19jqofoPLro</a></p>		<p>Paolo.</p>	"
33693402,55230662,33696808,3,0,Mon Nov 16 08:18:00 EST 2015,771271,"Thank you, that was really helpful. It looks like Azure Worker Role is a solution for me. Additionally, if I understand it correctly, IoT Protocol Gateway will allow me to access some DB shared with my web service."
33693402,35244670,33693402,2,12,Sat Feb 06 18:19:00 EST 2016,4148708,"<p>Azure IoT Hub now talks MQTT natively. A protocol gateway is no longer required.	<a href="https://azure.microsoft.com/en-us/documentation/articles/iot-hub-mqtt-support/" rel="noreferrer">https://azure.microsoft.com/en-us/documentation/articles/iot-hub-mqtt-support/</a></p>		<p>This is going to help you a lot if you've just spent the last hour trying to form the MQTT username and password:	<a href="https://github.com/Azure/azure-content/blob/master/articles/iot-hub/iot-hub-devguide.md#example" rel="noreferrer">https://github.com/Azure/azure-content/blob/master/articles/iot-hub/iot-hub-devguide.md#example</a></p>		<blockquote>	  <h3>Example:</h3>	  	  <p>Username (DeviceId is case sensitive): <code>iothubname.azure-devices.net/DeviceId</code></p>	  	  <p>Password (Generate SAS with Device Explorer): <code>SharedAccessSignature sr=iothubname.azure-devices.net%2fdevices%2fDeviceId&amp;sig=kPszxZZZZZZZZZZZZZZZZZAhLT%2bV7o%3d&amp;se=1487709501</code></p>	</blockquote>		<p>Tested with <strong>Paho</strong> and <strong>MQTT.fx</strong> on Windows. I could not make it authenticate with <strong>mosquitto</strong>, and i've put in reasonable effort, even tried using <strong>stunnel</strong> just in case mosquitto's TLS support wasn't cutting it. Mosquitto probably doesn't handle the long password correctly or something along those lines. It throws an authentication error. Escaping <code>%</code> and <code>&amp;</code> didn't help.</p>		<p>If someone gets Mosquitto to work with Azure IoT Hub, please open my eyes.</p>	"
33693402,91293452,35244670,3,0,Tue Sep 04 17:35:00 EDT 2018,2055989,"Just adding: IoT Hub REQUIRES TLS. Not every device/firmware support it."
33693402,100075517,35244670,3,1,Tue Jun 25 17:11:00 EDT 2019,1246117,"Mosquitto_pub works, I verified by monitoring with Device Explorer Twin. Example:	mosquitto_pub -h IOTHubACMxxx.azure-devices.net -p 8883 --cafile "C:\Users\jlaird\Documents\dev\azureca.crt" -t devices/eACM1/messages/events/ -m "john says hello to azure from mosquitto" -i eACM1 -u IOTHubACMxxx.azure-devices.net/eACM1/?api-version=2018-06-30 -P "SharedAccessSignature sr=IOTHubACMxxx.azure-devices.net&sig=obfuscate&se=1593013589&skn=device""
