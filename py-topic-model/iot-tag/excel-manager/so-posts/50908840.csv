thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
50908840,50908840,null,1,0,Mon Jun 18 11:47:00 EDT 2018,5585819,"<p>Asume the following code snippet:</p>		<pre><code>TStream&lt;Integer&gt; stream = top.generate(() -&gt; {            	  try{	    Thread.sleep(1500);	  }catch(InterruptedException ex){	    //DO NOTHING	  }	  return (int)(Math.random() * 100);	});		TWindow&lt;Integer, Integer&gt; window = stream.last(5, TimeUnit.SECONDS, zero());		TStream&lt;Double&gt; average = window.batch((values, key) -&gt; {	  int sum = values.stream().mapToInt(Integer::intValue).sum();	  return (double)sum / values.size();	});		average.peek(average1 -&gt; LOGGER.info("Calculated average : " + average1));	job = dp.submit(top);	</code></pre>		<p>After calling <code>job = dp.submit(top)</code>, the threads executing the topology will continu to run in the background until the JVM is stopped. </p>		<p>How can I stop this background process programmatically? This is specifically usefull when an Edgent topology is running as a separate process with other tasks in the same JVM. I tried to call <code>job.cancel(true)</code>, but this does not solve the problem. The task keeps on running...</p>	"
50908840,51065561,50908840,2,1,Wed Jun 27 14:37:00 EDT 2018,6013902,"<p>Try closing the job via <code>Job.stateChange(Job.Action.CLOSE)</code></p>		<p>See a sample use here:	<a href="https://github.com/apache/incubator-edgent-samples/blob/develop/topology/src/main/java/org/apache/edgent/samples/topology/JobExecution.java" rel="nofollow noreferrer">https://github.com/apache/incubator-edgent-samples/blob/develop/topology/src/main/java/org/apache/edgent/samples/topology/JobExecution.java</a></p>	"
