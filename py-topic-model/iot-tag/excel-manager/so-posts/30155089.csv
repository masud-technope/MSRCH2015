thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
30155089,30155089,null,1,0,Sun May 10 18:27:00 EDT 2015,2111690,"<p>I have a MQTT broker and need to consume this information via REST with azure mobile services, is this possible? am I missing something in the way?</p>	"
30155089,30155154,30155089,2,0,Sun May 10 18:32:00 EDT 2015,504554,"<p>Assuming I've understood what you're describing, you will have to write a MQTT client that would subscribe to the topics you are interested in on the broker and then submit them to the REST interface.</p>		<p>EDIT:</p>		<p>If on the other hand you want to read the data from the MQTT broker via a REST call from a mobile client then you probably haven't understood how pub/sub works and should look at the architecture of your solutions.</p>	"
30155089,48445009,30155154,3,0,Mon May 11 13:52:00 EDT 2015,2111690,"ppatierno, I've been thinking and my first idea was use a client MQTT (node js) connect to the Azure Service Bus and consume the information via Azure Mobile Services (REST API) on the mobile devices, it's a good/workable approach?"
30155089,48435107,30155154,3,0,Mon May 11 09:41:00 EDT 2015,2210944,"To strongly decoupled sender in MQTT from application that reads using REST, persist MQTT messages could be a good choice. If you want to emulate the "push" pattern from MQTT to REST you could use "long polling" on HTTP side. The client executes a REST request (ex. GET) on a resource that correspond to a topic on MQTT side (same hierarchy) but the server doesn't send data but leave connection open )(I don't know if you can do this on Mobile Services). When a MQTT message is sent to the related topic, the server resplies to the client and sends the message and finally close connection."
30155089,48421266,30155154,3,0,Sun May 10 22:01:00 EDT 2015,2111690,"hardillb, sorry for my bad english and thanks for the help.		My doubt sits on REST and MQTT relationship, the client will probably have to persitir the information obtained in real time via subscriber so I can transform the data on results of my REST endpoints, right?"
