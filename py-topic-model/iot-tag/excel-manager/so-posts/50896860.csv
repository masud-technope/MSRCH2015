thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
50896860,50896860,null,1,1,Sun Jun 17 12:52:00 EDT 2018,2330192,"<p>I am working on an automation project using Raspberry pi and Windows IoT. Is it possible to broadcast to a web page, similar to Server-Send-Event? I am monitoring certain events and instead of calling server every few seconds for updates, I would like server to send the alert to web page direct. Any help would be greatly appreciated.</p>	"
50896860,88793440,50896860,3,0,Sun Jun 17 12:54:00 EDT 2018,8041461,"By send an alert to the web page do you mean sending an event to the browser?"
50896860,88801038,50896860,3,0,Sun Jun 17 21:23:00 EDT 2018,2330192,"yes. It is Server-Sent-Event I am looking for. There is a typo in my query."
50896860,50901846,50896860,2,0,Mon Jun 18 01:57:00 EDT 2018,8546089,"<p>I think you can use WebSockets. WebSockets are an advanced technology that makes it possible to open an interactive communication session between the user's browser and a server. You can refer to this <a href="https://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/WebSocket" rel="nofollow noreferrer">sample</a>. Or you can use <a href="https://www.nuget.org/packages/IotWeb" rel="nofollow noreferrer">IoTWeb</a>  to embed a simple HTTP and WebSocket server into your application.</p>		<p><strong><em>Update:</em></strong></p>		<p>WebSockets are a great addition to the HTTP protocol suite, but there are numerous situations where they cannot be used.</p>		<ul>	<li>Some companies have firewalls that will prevent WebSockets from	working.</li>	<li>If you are deploying software in a shared hosting	environment, you may not be permitted to use WebSockets.</li>	<li>If you are	behind a reverse proxy that isn’t configured or the software doesn’t	support pass-through of WebSocket protocol, WebSockets won’t work.</li>	</ul>		<p>Another option is long polling,the browser does an XHR request and the server simply doesn’t respond until it has something to send. But in this way, if you want to do 2-way communications with the server, you are effectively using 2 sockets. One is tied up hanging/waiting for the long poll response, and the other is sent by the client to send new information to the server. Long polling is also problematic because the client has to be able to handle XHR errors, some of which are tricky to handle or even impossible to handle. You can search more differences and disadvantages from internet.</p>	"
50896860,88807465,50901846,3,0,Mon Jun 18 06:42:00 EDT 2018,2330192,"WebSocket service will listen to a port and post replies. I am already using this service. GET / POST will work. But if a server wants to send a broadcast to a webpage, it will not work. The easy workaround for this is to trigger a GET response from client to server at frequent intervals. I wanted to avoid that. Server-Sent-Events is the best method, possible with php server or asp.net. As for IoTWeb, it is a third party tool which I did look into it, but without any documentation or developmental work, I would steer clear"
50896860,88809768,50901846,3,0,Mon Jun 18 08:02:00 EDT 2018,8546089,"Even though websockets don't support multicast, it looks like the 'ws' module maintains a list of connected clients for you, so it's pretty easy to iterate through them.You can refer to this [document](https://github.com/websockets/ws#server-broadcast)."
50896860,88842078,50901846,3,0,Tue Jun 19 05:46:00 EDT 2018,8546089,"@user2330192, you are welcome. I am little confused about that, did you use the Pi as a web server? In another word, is the simple HTML page you wanted to send event to requested from the Pi?"
50896860,88812309,50901846,3,0,Mon Jun 18 09:20:00 EDT 2018,2330192,"I forgot to add. I use DatagramSocket for UDP communication too. I am developing intruder detection module, which will send real time data to Pi. Pi will then forward this to a web client. I have the option to use MQTT through Azure or other such services or more easier and clumsier is webpage requesting for data every few seconds and refreshing the page."
50896860,88812468,50901846,3,0,Mon Jun 18 09:25:00 EDT 2018,2330192,"ws Module is a Node.js. I did explore this. But for my need this wouldn't work. I want a simple HTML interface as client which will work across browsers and devices."
50896860,88813025,50901846,3,0,Mon Jun 18 09:40:00 EDT 2018,2330192,"Michael, I appreciate your responses. Thanks mate."
50896860,88880981,50901846,3,0,Wed Jun 20 06:35:00 EDT 2018,2330192,"I used the listensocket service to act as a web server. Pi will provide the webpages for browser clients. GET / POST will work without issues. The server can send request back to Web pages as replies. However connections are initiated by the web client and not by pi. When pi server wants to send a message back to web client, it will need to broadcast message. It is knows as Server-sent-Event which the JQuery or Java script on web page can interpretate. My project will soon be published in Hackster.io. I will send the link"
