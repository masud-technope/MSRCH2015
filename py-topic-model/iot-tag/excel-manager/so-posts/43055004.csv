thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43055004,43055004,null,1,0,Mon Mar 27 19:36:00 EDT 2017,3109390,"<p>I'm develop a pulse counter(coin counter) in raspberry pi with windows 10 iot core, and i need to count pulses that have a interval time of 25 miliseconds like this:</p>		<p>0,05€ - 1 pulse	0,10€ - 2 pulses	0,20€ - 4 pulses	0,50€ - 10 pulses	1€ - 20 pulses	2€ - 40 pulses</p>		<p>like this image: <a href="https://i.stack.imgur.com/i1erO.png" rel="nofollow noreferrer">pulses</a></p>		<p>I need to print the number of pulses(to have the value inserted) when the interval time is diferent of 25 miliseconds.</p>		<p>I have this code:</p>		<pre><code>public MainPage()	    {	        this.InitializeComponent();	        InitGPIO();	    }		    private void InitGPIO()	    {	        var gpio = GpioController.GetDefault();		        if (gpio == null)	        {	            GpioStatus.Text = "There is no GPIO controller on this device.";	        }		        coinPin = gpio.OpenPin(coin_Pin);		        if (coinPin.IsDriveModeSupported(GpioPinDriveMode.InputPullUp))	        {	            coinPin.SetDriveMode(GpioPinDriveMode.InputPullUp);	        } else	        {	            coinPin.SetDriveMode(GpioPinDriveMode.Input);	        }		        coinPin.DebounceTimeout = TimeSpan.FromMilliseconds(25);		        coinPin.ValueChanged += coinPin_ValueChanged;		        GpioStatus.Text = "GPIO pins initialized correctly.";	    }		    private void coinPin_ValueChanged(GpioPin sender, GpioPinValueChangedEventArgs e)	    {	        if (e.Edge == GpioPinEdge.FallingEdge)	        {	            counter++;	        }		        var task = Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () =&gt;	        {	            if (e.Edge == GpioPinEdge.FallingEdge)	            {	                //counter++;	                var time = PulseIn(coinPin, e.Edge);	                value = (counter * 5);	                value100 = value / 100;	                //money.Text = "Eur: " + (decimal)value100 + " €";		                if (time != 25)	                {	                    money.Text = "Eur: " + (decimal)value100 + " €";	                    GpioStatus.Text = "" + time;	                } else	                {	                    GpioStatus.IsEnabled = false;	                }	                //GpioStatus.Text = "" + time + "";	            } else	            {	                ///GpioStatus.Text = "" + coinPin.DebounceTimeout;	            }			        });	    }		    private double PulseIn(GpioPin pin, GpioPinEdge edge)	    {	        var sw = new Stopwatch();		        while (edge.Equals(GpioPinEdge.RisingEdge))	        {	            //sw.Start();	        }		        sw.Start();		        if (!edge.Equals(GpioPinEdge.RisingEdge))	        {	            //sw.Stop();	        }		        sw.Stop();		        return sw.Elapsed.TotalMilliseconds;	    }			    private const int coin_Pin = 24;	    private int counter = 0;	    private double value = 0;	    private double value100 = 0;	    private GpioPin coinPin;	</code></pre>		<p>Can you help me please?	Thank you very much.</p>	"
43055004,43088547,43055004,2,0,Wed Mar 29 08:43:00 EDT 2017,6601582,"<p>From your code, </p>		<pre><code>    sw.Start();		    if (!edge.Equals(GpioPinEdge.RisingEdge))	    {	        //sw.Stop();	    }		    sw.Stop();	</code></pre>		<p>it actually measures the execute time of the <code>if</code> statement that between <code>sw.Start()</code> and <code>sw.Stop()</code>. This does not make sense. Record the <code>watch.Elapsed.TotalMilliseconds</code> when the falling edge arrived and restart the stopwatch to measure the pulse interval time. To do this, I add the following two code lines under <code>counter++</code>, remove <code>var time = PulseIn(coinPin, e.Edge)</code> and use <code>timeinterval</code> in <code>GpioStatus.Text = "" + timeinterval</code> instead.</p>		<pre><code>            timeinterval = watch.Elapsed.TotalMilliseconds;	            watch.Restart();	</code></pre>		<p>The following is complete code piece:</p>		<pre><code>    private Stopwatch watch = new Stopwatch();	    private void coinPin_ValueChanged(GpioPin sender, GpioPinValueChangedEventArgs e)	    {	        double timeinterval = 0;	        if (e.Edge == GpioPinEdge.FallingEdge)	        {	            counter++;	            timeinterval = watch.Elapsed.TotalMilliseconds;	            watch.Restart();	        }		        var task = Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () =&gt;	        {	            if (e.Edge == GpioPinEdge.FallingEdge)	            {	                //var time = PulseIn(coinPin, e.Edge);	                value = (counter * 5);	                value100 = value / 100;		                if (timeinterval != 25)	                {	                    money.Text = "Eur: " + (decimal)value100 + " €";	                    GpioStatus.Text = "" + timeinterval;	                }	                //...	            }	        });	    }	</code></pre>		<p>You can try above code piece to see if it meets your accuracy requirement.</p>		<p>Note: It is not suitable to measure hardware pulse interval in software level because the software jitter is always unpredictable.  </p>	"
43055004,73388468,43088547,3,0,Sat Apr 01 11:57:00 EDT 2017,3109390,"I have updated the question with an example input of 2 coins (0,2€ and 0,05€) the result should be 0,20€ and 0,25€, and now show "0,05 0,1 0,15 0,20 0,25"... i'm only need to show the total value."
43055004,73424745,43088547,3,0,Mon Apr 03 01:50:00 EDT 2017,6601582,"How do you input of 0,2€? Doesn't it have four pulses?"
