thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44460700,44460700,null,1,6,Fri Jun 09 14:45:00 EDT 2017,877747,"<p>I am running Android Things 0.4 on a Raspberry Pi.  I was following this tutorial to the letter:</p>		<p><a href="https://developer.android.com/things/training/first-device/peripherals.html" rel="noreferrer">https://developer.android.com/things/training/first-device/peripherals.html</a></p>		<p>Once I go the first button working, I decided I wanted to add a second button prior to continuing to the led portion of the tutorial.  I know the hardware set up was correct for the first button, so I duplicated it for the second, but for a reason I cannot understand the buttons do not behave as expected.  The first button triggers the event listener for both buttons.  The second button will on trigger one direction and will not trigger again until the first button is pressed after the second button is pressed.</p>		<p>I am an experienced Android developer but very new to IoT and Things.  Here is my code:</p>		<pre><code>public class MainActivity extends Activity {	private static final String TAG = "ButtonActivity";	private static final String INC_BUTTON_PIN_NAME = "BCM4"; // GPIO port wired to the button	private static final String DEC_BUTTON_PIN_NAME = "BCM17"; // GPIO port wired to the button		private Gpio mIncButtonGpio;	private Gpio mDecButtonGpio;		Handler mHandler = new Handler(Looper.getMainLooper());		@Override	protected void onCreate(Bundle savedInstanceState) {	    super.onCreate(savedInstanceState);	    PeripheralManagerService service = new PeripheralManagerService();	    try {	        // Step 1. Create GPIO connection.	        mIncButtonGpio = service.openGpio(INC_BUTTON_PIN_NAME);	        mDecButtonGpio = service.openGpio(DEC_BUTTON_PIN_NAME);	        // Step 2. Configure as an input.	        mIncButtonGpio.setDirection(Gpio.DIRECTION_IN);	        mDecButtonGpio.setDirection(Gpio.DIRECTION_IN);	        // Step 3. Enable edge trigger events.	        mIncButtonGpio.setEdgeTriggerType(Gpio.EDGE_FALLING);	        mDecButtonGpio.setEdgeTriggerType(Gpio.EDGE_FALLING);	        // Step 4. Register an event callback.	        mIncButtonGpio.registerGpioCallback(mIncCallback);	        mDecButtonGpio.registerGpioCallback(mDecCallback);	    } catch (IOException e) {	        Log.e(TAG, "Error on PeripheralIO API", e);	    }	}		// Step 4. Register an event callback.	private GpioCallback mIncCallback = new GpioCallback() {	    @Override	    public boolean onGpioEdge(Gpio gpio) {	        Log.i(TAG, "GPIO changed, INC button pressed");		        // Step 5. Return true to keep callback active.	        return true;	    }	};		private GpioCallback mDecCallback = new GpioCallback() {	    @Override	    public boolean onGpioEdge(Gpio gpio) {	        Log.i(TAG, "GPIO changed, DEC button pressed");		        // Step 5. Return true to keep callback active.	        return true;	    }	};		@Override	protected void onDestroy() {	    super.onDestroy();		    // Step 6. Close the resource	    if (mIncButtonGpio != null) {	        mIncButtonGpio.unregisterGpioCallback(mIncCallback);	        try {	            mIncButtonGpio.close();	        } catch (IOException e) {	            Log.e(TAG, "Error on PeripheralIO API", e);	        }	    }	    if (mDecButtonGpio != null) {	        mDecButtonGpio.unregisterGpioCallback(mDecCallback);	        try {	            mDecButtonGpio.close();	        } catch (IOException e) {	            Log.e(TAG, "Error on PeripheralIO API", e);	        }	    }	}	}	</code></pre>		<p><a href="https://i.stack.imgur.com/hQJqW.jpg" rel="noreferrer"><img src="https://i.stack.imgur.com/hQJqW.jpg" alt="Hardware Config"></a>	Here is my logcat after  pressing the first button 1 time:</p>		<pre><code>06-09 14:33:21.717 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, INC button pressed	06-09 14:33:21.718 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, DEC button pressed	</code></pre>		<p>Here it is after pressing the second button right after the first:</p>		<pre><code>06-09 14:33:21.717 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, INC button pressed	06-09 14:33:21.718 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, DEC button pressed	06-09 14:33:58.047 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, DEC button pressed	</code></pre>		<p>Here is what it looks like if I press the first button, then press the second 4 times, then press the first again:</p>		<pre><code>06-09 14:39:06.804 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, INC button pressed	06-09 14:39:06.804 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, DEC button pressed	06-09 14:39:08.846 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, DEC button pressed	06-09 14:39:11.377 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, INC button pressed	06-09 14:39:11.377 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, DEC button pressed	06-09 14:39:11.510 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, INC button pressed	06-09 14:39:11.510 1393-1393/com.maddesa.iottest I/ButtonActivity: GPIO changed, DEC button pressed	</code></pre>		<p>Like I said I am very new to IoT and things, but I just want to have two separate buttons that consistently trigger separate handlers.</p>		<p>Thanks.</p>	"
44460700,75929551,44460700,3,0,Fri Jun 09 20:40:00 EDT 2017,413127,"Nothing wrong with the code as far as I can see, check the wiring again https://github.com/androidthings/sample-button/raw/master/rpi3_schematics.png"
44460700,75935066,44460700,3,0,Sat Jun 10 04:24:00 EDT 2017,246461,"What size are those resistors? One looks like 10k possibly? I can't make out the colors of the other one."
44460700,75935114,44460700,3,0,Sat Jun 10 04:29:00 EDT 2017,877747,"One is 10k and one is 1k initially they were both 10k. I switched the resistor on the second button to 1k to see if it made any difference. It did not."
44460700,75935169,44460700,3,0,Sat Jun 10 04:35:00 EDT 2017,877747,"The only difference between the way my button is wired and this drawing is that I used an additional jumper with from the power source to the row with the resistor for the button. I think there is no difference"
44460700,75937149,44460700,3,0,Sat Jun 10 07:22:00 EDT 2017,539171,"Both the code and the wiring looks good to me. Maybe try using a Button Driver, or even a ButtonInputDriver. They are slightly more elaborated that just detecting edges (i.e. debouncing)"
44460700,75951658,44460700,3,0,Sat Jun 10 21:31:00 EDT 2017,877747,"I tried used the button driver from: https://github.com/androidthings/contrib-drivers/tree/master/button and got the same result."
44460700,76049998,44460700,3,0,Tue Jun 13 18:37:00 EDT 2017,17034,"That doesn't look like a 10K or 1K resistor to me.  I see brown, red, black, 12 ohm.  Enough to draw too much current from the power supply and cause both inputs to change."
44460700,76169147,44460700,3,0,Fri Jun 16 13:44:00 EDT 2017,877747,"@Hans Passant I have replaced both resistors with 2k.  No change in the results."
44460700,76169767,44460700,3,0,Fri Jun 16 13:56:00 EDT 2017,17034,"http://www.hobby-hour.com/electronics/resistorcalculator.php"
44460700,44529270,44460700,2,1,Tue Jun 13 18:46:00 EDT 2017,1245894,"<p>You need to put some diode on your wires going to the ground to prevent the signal from traveling backward. When you press one of the button, the ground short the other button.</p>		<p><a href="https://i.stack.imgur.com/vRAoT.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/vRAoT.jpg" alt="See this diagram"></a></p>		<p>When you press your top button, the current is going to the ground line (red wire) down to your white wire of the down button. From the white it goes through your resistor, then through your orange wire back to your gpio 7.</p>	"
44460700,76168458,44529270,3,0,Fri Jun 16 13:27:00 EDT 2017,877747,"I have replaced the top ground line with an LED.  When I do that, the button no longer works.  clicking it gives no results at all."
44460700,44633910,44460700,2,0,Mon Jun 19 14:59:00 EDT 2017,6950238,"<p>This probably happens because RPi input receiving noise highs/lows which the code picking up. Seems You need debounce circuit (at least RC like <a href="https://developer.android.com/things/images/hardware-debounce.png" rel="nofollow noreferrer">this</a> from <a href="https://developer.android.com/things/hardware/hardware-101.html" rel="nofollow noreferrer">Official Documentation</a> and <a href="http://www.electronics-tutorials.ws/io/input-interfacing-circuits.html" rel="nofollow noreferrer">tutorial</a>). Or try to connect buttons to separate DC sources (one for 3.3V other for 5V). Also take look at <a href="https://www.raspberrypi.org/forums/viewtopic.php?f=44&amp;t=46525" rel="nofollow noreferrer">this</a> discussion. May be You need adjust pull-up resistors values. And try schematics with pull-down (not pull-up) like <a href="https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/robot/buttons_and_switches/" rel="nofollow noreferrer">here</a>.</p>	"
44460700,76305740,44633910,3,0,Tue Jun 20 18:11:00 EDT 2017,877747,"The wires are good.  I have read up on the different GPIO pins and have tried many different combinations.  I have not tried the bottom button only.  I will try that next."
44460700,76305783,44633910,3,0,Tue Jun 20 18:12:00 EDT 2017,6950238,"I'm try on weekend too - it's very strange..."
44460700,76264217,44633910,3,0,Mon Jun 19 20:12:00 EDT 2017,877747,"You link [here](https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/robot/buttons_and_switches/) was helpful for part of the problem.  I copied the wiring in the picture from the sample circuit with the 1K and 10k resistors.  That made the first button stop calling both listeners in the code.  I repeated these steps for the second button, but it doesn't work at all.  It does not fire it's own code for the listener."
44460700,76278575,44633910,3,0,Tue Jun 20 07:38:00 EDT 2017,6950238,"Wires? Did it all connected good? Try with only second button. And try change GPIOs: BCM 22 & BCM 27 instead of BCM 4 (there is remark in [Release Notes](https://developer.android.com/things/preview/releases.html#developer_preview_4) I/O: GPIO pins `BCM4`, `BCM5`, and `BCM6` are internally pulled up to 3.3V when used as inputs)."
44460700,46686137,44460700,2,0,Wed Oct 11 10:40:00 EDT 2017,8758351,"<p>Try enable pull-up for each pin or adding physical pull-up resistors. Say 1K ohm resistor attached between the pin and the 3.3V supply.</p>	"
44460700,80320941,46686137,3,0,Wed Oct 11 11:12:00 EDT 2017,1531124,"Rather sounds like a shot-in-the-dark comment - not an answer."
