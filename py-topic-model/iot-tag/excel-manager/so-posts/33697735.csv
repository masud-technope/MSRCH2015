thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33697735,33697735,null,1,2,Fri Nov 13 16:46:00 EST 2015,5559578,"<p>I would like to make a Webcam Broadcast app on my Raspberry pi 2 running Windows IOT.</p>		<p>As we see in the Windows <a href="https://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/CameraStarterKit" rel="nofollow">IOT samples</a>, you can record video but you can't</p>		<p>broadcast the video on network (as wifi).	In this code, I use the MediaCapture class to get the video stream.</p>		<pre><code>            // this._mediaCapture is a MediaCapture variable, initialized	        // there is a MediaElement item to see the video	        InMemoryRandomAccessStream stream = new InMemoryRandomAccessStream();	        MediaEncodingProfile profile = MediaEncodingProfile.CreateMp4(VideoEncodingQuality.Auto);		        // starting recording to stream	        await this._mediaCapture.StartRecordToStreamAsync(profile,stream);	        // stopping recording to access the stream	        await this._mediaCapture.StopRecordAsync();	        //linking the stream to a MediaElement item to see the video	        await stream.FlushAsync();	        MediaElement.SetSource(stream, "video / mp4");	        MediaElement.Play();	        return stream;	</code></pre>		<p>The problem is that we have to call the StopRecordAsync method to access the stream.	With a timer, we  can record a 5s (for example) vid√©o, call the StopRecordAsync method, flush the stream and do it in a loop but.</p>	"
33697735,55725411,33697735,3,0,Sun Nov 29 16:21:00 EST 2015,89558,"I am just wondering, are you able to use any other USB UVC cameras other than those receommended by Microsoft?"
33697735,33920537,33697735,2,0,Wed Nov 25 15:36:00 EST 2015,3421405,"<p>I don't have detailed solution but a hint. I think recording is not what you want. You just want to grab and upload the preview stream from veiwfinder. For that you need to send the preview stream to a customized sink. In your case that will be a cyclic buffer receiving from media capture and sending them to server.</p>		<p>You should check the method:</p>		<pre><code>MediaCapture.StartPreviewToCustomSinkAsync()	</code></pre>	"
