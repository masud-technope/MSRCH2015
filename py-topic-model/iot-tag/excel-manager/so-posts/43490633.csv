thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43490633,43490633,null,1,0,Wed Apr 19 08:40:00 EDT 2017,7394651,"<p>I have an Azure IoT hub that I connect devices to. I want to enable monitoring to monitor devices connecting and disconnecting from the hub. </p>		<p>I've enabled Verbose on Connections in the monitoring categories for my Iot hub:</p>		<p><a href="https://i.stack.imgur.com/fzFIO.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/fzFIO.png" alt="enter image description here"></a></p>		<p>My devices connect to my Hub and show in Device Explorer:</p>		<p><a href="https://i.stack.imgur.com/9WLuj.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/9WLuj.png" alt="enter image description here"></a></p>		<p>I then have an Azure Function set to log my data from the Operations Monitoring to an Azure SQL db:</p>		<pre><code>using System;	using System.Configuration;	using System.Data.SqlClient;	using Newtonsoft.Json;		public static void Run(string myEventHubMessage, TraceWriter log)	{	    log.Info(myEventHubMessage);		    try	    {	        var connectionString = ConfigurationManager.ConnectionStrings["iotAzureSQLDb"].ConnectionString;		        log.Info(connectionString);	        var message = JsonConvert.DeserializeObject&lt;MonitoringMessage&gt;(myEventHubMessage);		        using (var connection = new SqlConnection(connectionString))	        {	            var sqlStatement = "insert into [dbo].[DeviceStatuses] " +	                                "(DeviceId, ConnectionStatus, ConnectionUpdateTime)" +	                                "values " +	                                "(@DeviceId, @ConnectionStatus, @ConnectionUpdateTime)";	            using (var dataCommand = new SqlCommand(sqlStatement, connection))	            {	                dataCommand.Parameters.AddWithValue("@ConnectionStatus", message.operationName);	                dataCommand.Parameters.AddWithValue("@DeviceId", message.deviceId);	                dataCommand.Parameters.AddWithValue("@ConnectionUpdateTime", message.time);		                connection.Open();	                dataCommand.ExecuteNonQuery();	                connection.Close();		                log.Info($"Device {message.deviceId} changed state: {message.operationName}");	            }	        }	    }	    catch (Exception ex)	    {	        log.Info(ex.Message);	    }	}		public class MonitoringMessage	{	    public string deviceId { get; set; }	    public string operationName { get; set; }	    public int? durationMs { get; set; }	    public string authType { get; set; }	    public string protocol { get; set; }	    public DateTimeOffset? time { get; set; }	    public string category { get; set; }	    public string level { get; set; }	    public int? statusCode { get; set; }	    public int? statusType { get; set; }	    public string statusDescription { get; set; }	}	</code></pre>		<p>If I enable Device Identity Operations in Operations Monitoring, I get create events being logged. So I'm confident the inputs to the function is correct. However, nothing is ever created for Connections???</p>		<p>I can also send messages to my connected devices fine. I'm just seeing no events for connections / disconnections.</p>		<p>I've also tried creating a Stream Analytics and sampling the input for a period where I know I have connections / disconnections and nothing is being found.</p>	"
43490633,74078581,43490633,3,0,Thu Apr 20 07:01:00 EDT 2017,7394651,"That's what I'm using an alternative, the problem is you have to poll it every 'x' minutes to get what's connected / disconnected. Whereas if the IoT Monitoring worked properly, I would receive events when a device disconnects."
43490633,74073336,43490633,3,1,Thu Apr 20 03:10:00 EDT 2017,6601582,"Can you [use iothub-explorer tool to catch connection/disconnection events](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-operations-monitoring#view-events)?"
43490633,43513171,43490633,2,0,Thu Apr 20 07:41:00 EDT 2017,7394651,"<p>I have resolved this by forcing my device to connect over MQTT in the dev environment and now I see it connecting and disconnecting.</p>		<p>Unfortunately I can't use MQTT in production.</p>		<p>Does anyone know if Connection / Disconnection events are only possible in MQTT as opposed to AMQP?</p>	"
43490633,74082769,43513171,3,0,Thu Apr 20 08:54:00 EDT 2017,6601582,"What about HTTP?"
43490633,74084257,43513171,3,0,Thu Apr 20 09:29:00 EDT 2017,7394651,"HTTP doesnt show connection status at all, if I connect a device over HTTP device explorer always shows it as disconnected."
43490633,74125393,43513171,3,0,Fri Apr 21 07:35:00 EDT 2017,6601582,"HTTP exactly doesn't show connection/connection status at all. But AMQP and MQTT works for me...What kind of your IoT Hub pricing tier? And what location did you select when creating the hub?"
43490633,74126129,43513171,3,0,Fri Apr 21 07:55:00 EDT 2017,7394651,"Hub is Western Europe, tier is free as we are still in the development stage."
43490633,74127097,43513171,3,0,Fri Apr 21 08:23:00 EDT 2017,6601582,"Mine is S1 tier. Based on your comment, I also tried on free tier but I can't even save Monitoring categories settings successfully. I'll report this issue to internal related team."
43490633,43676131,43490633,2,0,Fri Apr 28 08:58:00 EDT 2017,2956469,"<p>If you just would like to get devices connection states, use REST instead.</p>		<p><a href="https://docs.microsoft.com/en-us/rest/api/iothub/deviceapi#DeviceApi_GetDevices" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/rest/api/iothub/deviceapi#DeviceApi_GetDevices</a></p>		<p>Also, here's an online tool to monitor devices connection state.</p>		<p><a href="https://iotdevtool.com/registry/" rel="nofollow noreferrer">https://iotdevtool.com/registry/</a>	<a href="https://i.stack.imgur.com/nzpzY.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/nzpzY.png" alt="enter image description here"></a></p>	"
43490633,44684494,43490633,2,0,Wed Jun 21 19:14:00 EDT 2017,66780,"<p>We invented a data flow to determine "device state".  We created a Stream Analytics Job, wired to the <code>Operations monitoring</code> (that's the <code>Endpoint</code> type in the IOT Input definition).  We have the Stream Analytics query  <code>SELECT INTO</code> a ServiceBus queue . We have a WebJob processing that queue and updating a persistent store (SQL Table, Azure Table, your pick) where we write down the status.  A UI (or WebAPI Controller) can then inspect that persistent store.</p>		<p>So far we have all the <code>Monitoring categories</code> (in the IOT Hub Portal blade) set to <code>Verbose</code> but may dial it down later.</p>		<p>We do get data.</p>	"
