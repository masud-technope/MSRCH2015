thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
32167934,32167934,null,1,0,Sun Aug 23 14:48:00 EDT 2015,4956456,"<p>I have implemented HttpUrlConnection to send a request to a local http server (common LAN,Wifi,WifiAP). The code works perfectly fine for normal web servers (www.xyz.com), but fails to do so for local servers (192.168.x.y:z). </p>		<p>The code:</p>		<p>1) The function which makes the request</p>		<pre><code>public static String getDef(String urlInput) {	        URL url = null;	        try {	            url = new URL("http://" + urlInput);	            Log.d("http", "calling " + url.toString());	        } catch (MalformedURLException e) {	            e.printStackTrace();	        }	        try {	            HttpURLConnection conn  = (HttpURLConnection) url.openConnection();	            conn.setRequestProperty("Connection", "close");	            conn.setRequestMethod("GET");	            conn.setDoInput(true);	            conn.setReadTimeout(10000 /* milliseconds */);	            conn.setConnectTimeout(15000 /* milliseconds */);	            conn.connect();	            InputStream in = null;	            in = (conn.getInputStream());	            String response =readIt(in,5) ;	            //response = org.apache.commons.io.IOUtils.toString(in, "UTF-8");	            return response;	        } catch (IOException e) {	            Log.e("http","Error");	            e.printStackTrace();	        }	        return "LocalClient didnt work";	    }	</code></pre>		<p>2) The function which calls the above function.</p>		<pre><code>new AsyncTask&lt;String, Void, String&gt;(){	    @Override	    protected String doInBackground(String... params){	    try {	        return LocalClient.getDef(URL);	    } catch (Exception e){	        e.printStackTrace();			    }	    return "Didnt work";	}	@Override	protected void onPostExecute(String string) {	    message.append(string);	}	}.execute();	</code></pre>		<p>3)The request is received at the server with the following headers.</p>		<pre><code>GET / HTTP/1.1	Connection: close	User-Agent: Dalvik/2.1.0 (Linux; U; Android 5.1.1; Nexus 5 Build/LYZ28E)	Host: 192.168.0.101	Accept-Encoding: gzip	</code></pre>		<p>It would be wonderful if someone could point me in the right direction.</p>		<p>I have also tried OkHttp,</p>		<pre><code>public static String get(String url) throws IOException {	        OkHttpClient client = new OkHttpClient();	        try {	            Request request = new Request.Builder()	                    .url(url)	                    .build();	            Response response = client.newCall(request).execute();	            resp= response.body().string();	        } catch (IOException e) {	            e.printStackTrace();	        }	        return resp;	    }	</code></pre>		<p>On using a normal webserver the response is properly returned (source) but while using a local server I get the following error</p>		<pre><code>java.io.EOFException	         W/System.err﹕ at com.android.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:95)	         W/System.err﹕ at com.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:179)	         W/System.err﹕ at com.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:101)	         W/System.err﹕ at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:628)	         W/System.err﹕ at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:388)	         W/System.err﹕ at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:332)	         W/System.err﹕ at com.android.okhttp.internal.http.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:199)	         W/System.err﹕ at com.demo.demo.http.LocalClient.getDef(LocalClient.java:56)	         W/System.err﹕ at com.demo.demo.wifi.connector$2$2.doInBackground(connector.java:109)	         W/System.err﹕ at com.demo.demo.wifi.connector$2$2.doInBackground(connector.java:105)	         W/System.err﹕ at android.os.AsyncTask$2.call(AsyncTask.java:292)	         W/System.err﹕ at java.util.concurrent.FutureTask.run(FutureTask.java:237)	         W/System.err﹕ at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)	         W/System.err﹕ at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)	         W/System.err﹕ at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)	         W/System.err﹕ at java.lang.Thread.run(Thread.java:818)	</code></pre>	"
32167934,52222622,32167934,3,0,Sun Aug 23 14:53:00 EDT 2015,4694985,"Hey there! I've also been facing a similar issue. It would be great if someone could point out what we're doing wrong."
32167934,52222590,32167934,3,0,Sun Aug 23 14:52:00 EDT 2015,481528,""fails to do so"? What happens? What is different between the result with a local and a remote server?"
32167934,52222694,32167934,3,0,Sun Aug 23 14:56:00 EDT 2015,4328123,"How do you set urlInput for local server? "localhost"?"
32167934,52222778,32167934,3,0,Sun Aug 23 15:00:00 EDT 2015,4956456,"@selalerer I have edited my question. Remote server returns the source of the webpage while local server throws an error; but the request is received at the local server."
32167934,52222812,32167934,3,0,Sun Aug 23 15:02:00 EDT 2015,4956456,"@BNK I have tried  http://192.168.0.101, http://192.168.0.101:80 and http://192.168.0.101:80//"
32167934,52222861,32167934,3,0,Sun Aug 23 15:04:00 EDT 2015,481528,"Maybe the problem is with the server, not writing the correct Content-Length thus making the client read after the response ended."
32167934,52222862,32167934,3,1,Sun Aug 23 15:04:00 EDT 2015,210504,"to me it looks like the local server is terminating the tcp connection"
32167934,52222965,32167934,3,0,Sun Aug 23 15:10:00 EDT 2015,4328123,"EOFException, IMO you should check response code first. If 200(OK), getInputStream(). If others(error), getErrorStream() instead. Hope this helps"
32167934,52223668,32167934,3,0,Sun Aug 23 15:47:00 EDT 2015,4956456,"@selalerer You are right. The code works for local Mercury server's page. ( OkHttp doesn't work for that too).		Can you shed some light on the issue? On how the response headers are supposed to be set in the text. I am using Lua and I am not aware of any functions to do so."
32167934,52224088,32167934,3,0,Sun Aug 23 16:09:00 EDT 2015,4328123,"Hi! As I commented above, you should use getErrorStream() to get detail error message from the local web server."
32167934,32168386,32167934,2,0,Sun Aug 23 15:35:00 EDT 2015,481528,"<p>It seems there's an open bug about this issue:	<a href="https://github.com/square/okhttp/issues/1518" rel="nofollow">https://github.com/square/okhttp/issues/1518</a></p>		<p>They suggest adding <code>android:vmSafeMode="true"</code> to the manifest file.</p>	"
32167934,32169012,32167934,2,1,Sun Aug 23 16:42:00 EDT 2015,4956456,"<p>The problem was server-side and was resolved by using appropriate headers.	OkHttp still doesn't seem to work and the function "public static String getDef(String urlInput)" mentioned above works flawlessly. </p>	"
