thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
46905201,46905201,null,1,-1,Tue Oct 24 08:02:00 EDT 2017,3470406,"<p>I'm an newbie to build a secure connection between python server and raspberry pi.	I have a python server, and a raspberry pi at home.	Currently, pi is using socket to listen a specific port when the python server is trying connect to pi. 	It's a low level networking interface. It's a simple but not secure method.	Could anyone tell or point out a way to build a secure communication between python server and raspberry pi. It should be able to do following basic requirements. 	1. Password check	2. When python server want some information from Pi, it connect to pi. After python server gets what it wanted, it disconnect to pi.</p>		<p>Thanks!! </p>	"
46905201,80760363,46905201,3,0,Tue Oct 24 09:28:00 EDT 2017,3470406,"The basic idea is that. The python server send a command to the raspberry pi to collect information. For example, python server wants to know the temperature sensor's data, then send a command to raspberry pi. Then raspberry pi reply the data to python server."
46905201,80757130,46905201,3,1,Tue Oct 24 08:05:00 EDT 2017,2133240,"Use `SSH` , don't waste your time !"
46905201,80757168,46905201,3,1,Tue Oct 24 08:05:00 EDT 2017,5612096,"You should define "secure". Are you talking about authentification? Authorization? Encryption?"
46905201,80757195,46905201,3,0,Tue Oct 24 08:06:00 EDT 2017,5612096,"@dsgdfg Secure != Encrypted access to the console"
46905201,80757378,46905201,3,0,Tue Oct 24 08:12:00 EDT 2017,4303196,"You could have a simple flask application on the pi exposing some endpoints implementing a simple authentication, and authorization."
46905201,80757464,46905201,3,1,Tue Oct 24 08:15:00 EDT 2017,5612096,"@dsgdfg did you read anywhere that he wants to connect to a RPi to get to its console? Because he hasnt said that. He obviously is not acurate with his phrasing, thats why I asked clarification. You asumed he wants secure console access and you sugested SSH  what he is probably already doing if he has a server running at his RPi (yes, the server is the RPi even if he called it the otherway, in a client-server paradigm the client is the one who takes the iniciative to connect to a server who is listening for connections)."
46905201,80757808,46905201,3,0,Tue Oct 24 08:24:00 EDT 2017,2133240,"we talking about combination, but he don't share server  or client code (i think he haven't any idea about this). Never a server required if trying a basic things. Low query volume, small data why need a server ?"
46905201,46906730,46905201,2,0,Tue Oct 24 09:22:00 EDT 2017,5944716,"<p>It is not easy to provide you an out-of-the-box solution since we don't have any code to refer to but there are several ways to add security to a communication mechanism. Currently the two solutions I'm thinking are :</p>		<p>Using a <a href="https://docs.python.org/2/library/ssl.html" rel="nofollow noreferrer">TLS/SSL wrappers for socket objects</a> and <a href="https://cryptography.io/en/latest/fernet/" rel="nofollow noreferrer">end to end encryption</a>.</p>		<p>Since Python is running both on your server and the Raspberry it's very simple to implement each methods.</p>		<p>EDIT 1 : here is an <a href="https://carlo-hamalainen.net/2013/01/24/python-ssl-socket-echo-test-with-self-signed-certificate/" rel="nofollow noreferrer">example</a> for SSL/TLS socket</p>		<p>EDIT 2 : since you are talking about sensors data acquisition in the comments of your question I strongly suggest using a iot oriented communication protocol like <a href="http://www.steves-internet-guide.com/mqtt/" rel="nofollow noreferrer">MQTT</a> which also provides <a href="http://www.steves-internet-guide.com/mqtt-security-mechanisms/" rel="nofollow noreferrer">TLS/SSL security</a>. For the data encryption you can refer to <a href="http://www.steves-internet-guide.com/encrypting-the-mqtt-payload-python-example/" rel="nofollow noreferrer">this article</a>. </p>	"
46905201,80859823,46906730,3,0,Thu Oct 26 13:57:00 EDT 2017,5944716,"Hi @user3470406, if you talk about this openssl bug (https://security.stackexchange.com/questions/55116/how-exactly-does-the-openssl-tls-heartbeat-heartbleed-exploit-work) it has been corrected since the 7th April 2014 with the release 1.0.1g of OpenSSL. Since you are working with sensors I strongly suggest you to look at the MQTT protocol : it's very easy to deploy both at server and client side and its designed for IoT."
46905201,80844167,46906730,3,0,Thu Oct 26 07:45:00 EDT 2017,3470406,"Thank you. It's a very helpful answer. After a little bit of research about openssl, I found there's a big issue of hearbeats about openssl. Many products were effected. Currently, is it still a good way to be used in the product, such as Iot devices? Do we have an alternative method?"
