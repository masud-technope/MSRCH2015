thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
34843041,34843041,null,1,2,Sun Jan 17 20:05:00 EST 2016,2670818,"<p>I am currently trying to publish a command to a specific topic in the IBM IoT Foundation MQTT Broker using a Java web application. My application is already able to listen to device events and act on them, however publishing commands to the device is a problem. I know for sure that my device is listening to the proper topic for commands, so what could be the problem? More specifically, here is the command I call to publish to the topic (from my Java app): </p>		<pre><code>publish("iot-2/cmd/" + MQTTUtil.getDefaultCmdId() + "/fmt/json", rawJSONCommand, false, 0); 	System.out.println("Finished sending command!"); 	</code></pre>		<p>Where the "publish" method is defined as follows: </p>		<pre><code>public void publish(String topic, String message, boolean retained, int qos) { // check if client is connected	if (isMqttConnected()) 	{	// create a new MqttMessage from the message string 	MqttMessage mqttMsg = new MqttMessage(message.getBytes()); 	// set retained flag 	mqttMsg.setRetained(retained); 	// set quality of service 	mqttMsg.setQos(qos);	try { 	System.out.println("About to send!"); 	client.publish(topic, mqttMsg); 	System.out.println("Finished sending!"); } 	catch (MqttPersistenceException e)	{ e.printStackTrace(); } 	catch (MqttException e)	{ e.printStackTrace(); } }	else {	System.out.println("Connection lost!"); connectionLost(null); 	} }	</code></pre>		<p>All that happens is that I enter the method, I get "About to send!" printed on my console as the code specifies, and then the actual 'client.publish(topic, mqttMsg)' call blocks my program indefinitely.. Eventually, after blocking for a while, I get the following error: </p>		<pre><code>org.eclipse.paho.client.mqttv3.internal.ClientState checkForActivity SEVERE: a:2uwqwc:&lt;MY_APP_NAME&gt;: Timed out as no write activity, keepAlive=60,000 lastOutboundActivity=1,452,646,209,624 lastInboundActivity=1,452,646,149,303 time=1,452,646,329,628 lastPing=0	</code></pre>		<p>Thanks for the help!</p>	"
34843041,34857748,34843041,2,1,Mon Jan 18 14:59:00 EST 2016,4454969,"<p>If you are publishing from an application, are you specifying the device type and device id?  </p>		<pre><code>myAppClient.publishCommand(deviceType, deviceId, "stop", data);	</code></pre>		<p>Refer to section in documentation about publishing commands to connected devices. 	<a href="https://docs.internetofthings.ibmcloud.com/java/java_cli_app.html" rel="nofollow">https://docs.internetofthings.ibmcloud.com/java/java_cli_app.html</a></p>	"
34843041,57514281,34857748,3,0,Tue Jan 19 22:12:00 EST 2016,4454969,"Actually, I think the problem may be because you are trying to send message as "retained" and IoTF does not support MQTT Retained messages. Can you test with the retain flag off and see if it works then? Sorry I didn't notice that before."
34843041,57506647,34857748,3,0,Tue Jan 19 18:35:00 EST 2016,2670818,"Thanks for your help! Yes, I changed the code to also use the device type and id:		`publish("iot-2/type/" + MQTTUtil.getDefaultDeviceType()					+ "/id/" + deviceMAC + "/cmd/" + MQTTUtil.getDefaultCmdId()					+ "/fmt/json", rawJSONCommand, false, 0);	`	However, I am not using the ApplicationClient class but rather the MqttClient class as seen here:	https://www.eclipse.org/paho/files/javadoc/org/eclipse/paho/client/mqttv3/MqttClient.html		Could this be the problem? Thank you!"
34843041,57597333,34857748,3,0,Thu Jan 21 19:08:00 EST 2016,2670818,"Thanks for the update! In fact, I do always set the retained flag to false (its passed in as an input parameter thats always false if you look at the code above). It still doesn't work however frown emoticon Really not sure where I'm going wrong here, hope you'll have some idea about it!"
