thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
42053052,42053052,null,1,0,Sun Feb 05 14:11:00 EST 2017,6414179,"<p>There are a lot of IoT platform in the market like AWS Amazon IoT and Microsoft Azure Hub, I understand all the features that are offered by those platforms.</p>		<p>Questions:</p>		<ol>	<li><p>Couldn't I implement all those features on a normal web application which can handle communication and all these features and run this application on a cluster of unmanaged server and have the same result?</p></li>	<li><p>When shall I use a normal web application and when shall I use IoT platform?</p></li>	</ol>	"
42053052,42053639,42053052,2,1,Sun Feb 05 15:13:00 EST 2017,1062217,"<p>Of course you can implement your own IoT hub on any web application and cloud (or on-prem) platform, there is nothing secret or proprietary in those solutions. The question is, do you want to do that? What they offer is <em>a lot</em> of built in functionality that would take you some serious time to get production ready when building it yourself.</p>		<p>So:</p>		<p><strong>1)</strong> yes, you can build it. Let's compare it to Azure IoT hub and look at what that contains:</p>		<p>a) reliable messages to and from hub</p>		<p>b) periodic health pulses</p>		<p>c) connected device inventory and device provisioning</p>		<p>d) support for multiple protocols (eg HTTP, AMQP, MQTT...)</p>		<p>e) access control and security using tokens</p>		<p>.... and more. Not supposed to be a full feature list here, just to illustrate that these solutions contains a whole lot of functionality, which you may (or may not) need when building your own IoT solution.</p>		<p><strong>2)</strong> when does it make sense to build this yourself? I would say when you have a solution where you don't really neeed all of that functionality or can easily build or setup those parts you need yourself. Building all of that functionality doesn't, generally speaking, make sense, unless you are building your own IoT platform.</p>		<p>Another aspect is the ability to scale and offer a solution for multiple geographic locations. A web application on a cloud provider could easily be setup to both autoscale and cover multiple regions, but it is still something you would have to setup and manage yourself. It would likely also be more expensive to provide the same performance as the platform services does, they are built for millions of devices across a large number of customers, their solution will likely look different under the hood.</p>		<p>Third is time-to-market, by going with a platform service will get you up and running with your IoT solution fairly quick as opposed to building it yourself. </p>		<p>Figure out what requirements you want to support, how you want to scale, how many devices and so on. Then you can do a simple comparison of price and also what it would cost you to build the features you need.</p>	"
42053052,71281168,42053639,3,0,Sun Feb 05 16:35:00 EST 2017,6414179,"Thanks so much, that was helpful"
