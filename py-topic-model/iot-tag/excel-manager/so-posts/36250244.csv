thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
36250244,36250244,null,1,-2,Sun Mar 27 17:14:00 EDT 2016,5753276,"<p>I am running a LwM2M server using LwM2M Leshan library. How can I run a LwM2M client on an Arduino board to connect with LwM2M Leshan server ? Please note that Leshan LwM2M client implementation is written in Java, and so cannot be run on an Arduino.</p>	"
36250244,60130236,36250244,3,0,Sun Mar 27 17:24:00 EDT 2016,1357527,"Is the spec opensource? if so, is there a problem preventing you from implementing it yourself? Also, from a limited search I found this : http://www.drdobbs.com/jvm/control-an-arduino-from-java/240163864 if it is possible to connect your arduino to another computer then that might be an easier solution"
36250244,60130409,36250244,3,0,Sun Mar 27 17:32:00 EDT 2016,5753276,"yes leshan is an opensource and I already went through that site,but I couldn't find any solution from it."
36250244,60130425,36250244,3,0,Sun Mar 27 17:32:00 EDT 2016,1357527,"Can you not implement a leshan client in whatever language arduino uses?"
36250244,60130492,36250244,3,0,Sun Mar 27 17:35:00 EDT 2016,5753276,"No I am unable to do it."
36250244,36259780,36250244,2,0,Mon Mar 28 09:48:00 EDT 2016,1051634,"<p>For embedded client code in C, you should look at Eclipse <a href="https://github.com/eclipse/wakaama" rel="nofollow">Wakaama</a>. It should be fairly straightforward to port on Arduino.</p>	"
36250244,36377104,36250244,2,3,Sat Apr 02 18:18:00 EDT 2016,1180117,"<p>Note that unlike Raspberry Pi(micro processor based), an Arduino( 8 bit AVR micro controller based) doesn't offer Linux software stack. All it gives is simplified C/C++ support with a set of convenience libraries. And so you cannot run the LwM2M Leshan Java client on Arduino. </p>		<p>Theoretically you can run a C based LwM2M client implementation like Eclipse Wakaama(<a href="https://github.com/eclipse/wakaama" rel="nofollow">1</a>) project on Arduino. But absence of Linux software stack will make porting Wakaama to Arduino a not so straight forward process for beginners. You will need Arduino compatible libraries for CoAP(<a href="https://github.com/internetofhomethings/ESP8266-Triple-Server" rel="nofollow">2</a>) and possibly Arduino OTA(<a href="https://github.com/esp8266/Arduino/tree/2.1.0/libraries/ArduinoOTA" rel="nofollow">3</a>) as suggested in this thread(<a href="https://dev.eclipse.org/mhonarc/lists/wakaama-dev/msg00212.html" rel="nofollow">4</a>).</p>		<p>In case you happen to be working with Arduino Yun( offers Linux software stack), the porting of Wakaama will be much easier as shown in this post(<a href="https://github.com/msangoi/wakaama/wiki/Run-Wakaama-on-the-Arduino-Yun" rel="nofollow">5</a>).</p>	"
36250244,44583138,36250244,2,0,Fri Jun 16 07:17:00 EDT 2017,6319705,"<p>Try porting <a href="https://github.com/ConnectivityFoundry/AwaLWM2M" rel="nofollow noreferrer">AwaLWM2M</a> static API for constrained devices, which is a lightweight LWM2M client in C.	I have not tried implementing this, but you can give it a try. Do share the results, so that others can get help from your work.</p>	"
