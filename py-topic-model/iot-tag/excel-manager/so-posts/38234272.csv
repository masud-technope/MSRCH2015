thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38234272,38234272,null,1,5,Wed Jul 06 21:43:00 EDT 2016,5414111,"<p>I am sending data (GPS coordinates) from Arduino once a minute with HTTP POST request to REST API (in OpenShift PaaS). Data is then stored to MySQL db.</p>		<p>Would so called "IoT" publish/subscribe protocols (XMPP, MQTT) be better? Why?</p>		<p>When exactly do you use those two protocols rather than Restful HTTP? Would I really save a significant baterry energy using them?</p>		<p>AFAIK in those protocols machine would "publish" a data to broker and my app would subscribe to it. If I would like to gather data every minute in my app I guess that I would got to have some CRON job that would subscribe to data every minute? Or how would data gathering be achieved?</p>	"
38234272,38242869,38234272,2,3,Thu Jul 07 10:12:00 EDT 2016,2318649,"<blockquote>	  <p>Would so called "IoT" publish/subscribe protocols (XMPP, MQTT) be better? Why?</p>	</blockquote>		<p>At small scale (not many sensors) or when the sensors have plenty of power (CPU and electrical), or communication cost is low then there's less reason to use MQTT. Conversely at large scale, or for CPU/electricity-limited sensors or when comms cost is high then MQTT or similar IoT protocol has advantages. You can implement MQTT in a very simple embedded CPU, more complex to implement HTTP.</p>		<blockquote>	  <p>When exactly do you use those two protocols rather than Restful HTTP? Would I really save a significant baterry energy using them?</p>	</blockquote>		<p>You would save battery power using e.g. MQTT over e.g. 3G because there is less protocol overhead from publishing MQTT data over a persisting TCP connection from MQTT client to broker then there is for every REST POST which usually requires establishing an SSL connection, posting the data using verbose HTTP, then deleting the SSL connection.</p>		<p>An MQTT connection is inherently bidirectional (although your app doesn't have to use it) - so you natively get the ability to send commands to your sensors. To do the same using REST/HTTP you have to configure your server for long polling.</p>		<p>There is a comparison of long-polling HTTPS vs MQTT over SSL here <a href="http://stephendnicholas.com/posts/power-profiling-mqtt-vs-https" rel="nofollow">http://stephendnicholas.com/posts/power-profiling-mqtt-vs-https</a> which shows ~4.1% battery power/day saved using MQTT compared to slow-polling HTTPS	So yes, you can save significant battery energy.</p>		<p>With MQTT you can send very small messages e.g. a few bytes of binary data, with low overhead. With REST/HTTP the data gets wrapped in a lot of HTTP protocol with much higher overhead. If you have lots of devices those overhead bytes add up to a lot more data being sent, which costs money. So at large scale using a compact protocol like MQTT and designing the data transfers carefully saves you money.</p>		<blockquote>	  <p>gather data every minute</p>	</blockquote>		<p>With MQTT your app usually has a persistent subscription to the topics and is automatically notified of updates. If you want a summary every minute your app will save the updates to e.g. a DB and report from the DB. DB is usually needed to store all the data anyway. You can subscribe to wildcard topics - this means you design your topics so your app subscribes to e.g. all solar sensors and the broker will send data for all the connected devices without your app having to poll the individual sensors.</p>	"
38234272,63914697,38242869,3,0,Thu Jul 07 13:30:00 EDT 2016,5414111,"Thank you for your answer, it gave many insights. However, as I understand, if you want to use MQTT then you gotta have continous TCP connection. Now that isn't a really good idea for just sending a small json every minute or even less frequently (I have a functionality that you can set sending period to let's say 15 minutes)?"
38234272,63930069,38242869,3,0,Thu Jul 07 20:14:00 EDT 2016,2318649,"A persistent TCP connection consumes very little overhead. Yes you may be able to make design or process decisions like extended delays, like having lots of CPU/electrical power, like not having to handle lots of sensors, like not having time to learn something new, etc. that mean you can use HTTP/REST. No-one is forcing you to use MQTT, main point is you should make an informed choice not just assume that what you may know and be accustomed to is the best/only way to solve IoT problems."
38234272,63931777,38242869,3,0,Thu Jul 07 21:11:00 EDT 2016,5414111,"Exactly, that is also why I was asking this, to get the bigger picture. Cheers man."
38234272,63915099,38242869,3,0,Thu Jul 07 13:39:00 EDT 2016,5414111,"Also I use normal HTTP, I have data that I send hash-ed so I think I don't need SSL."
