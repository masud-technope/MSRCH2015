thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
26133425,26133425,null,1,1,Wed Oct 01 02:56:00 EDT 2014,583911,"<p>I need to update the primary key of a large Index Organized Table (20 million rows) on Oracle 11g.</p>		<p>Is it possible to do this using multiple UPDATE queries? i.e. Many smaller UPDATEs of say 100,000 rows at a time. The problem is that one of these UPDATE batches could temporarily produce a duplicate primary key value (there would be no duplicates after all the UPDATEs have completed.)</p>		<p>So, I guess I'm asking is it somehow possible to temporarily disable the primary key constraint (but which is required for an IOT!) or alter the table temporarily some other way. I can have exclusive and offline access to this table.</p>		<p>The only solution I can see is to create a new table and when complete, drop the original table and rename the new table to the original table name.</p>		<p>Am I missing another possibility?</p>	"
26133425,26133472,26133425,2,0,Wed Oct 01 03:04:00 EDT 2014,257090,"<p>You can't disable / drop the primary key constraint from an IOT, since it is a unique index by definition.</p>		<p>When I need to change an IOT like this, I either do a CTAS (create table as) for a new plain heap table, do my maintenance, and then CTAS a new IOT.</p>		<p>Something like:</p>		<pre><code>create table t_temp as select * from t_iot;	-- do maintenance	create table t_new_iot as select * from t_temp;	</code></pre>		<p>If, however, you need to simply add or join a new field to the existing key, you can do this in one step by creating the new IOT structure, then populating directly from the old IOT with a query.</p>		<p>Unfortunately, this is one of the downsides to IOTs.</p>	"
26133425,26138238,26133425,2,0,Wed Oct 01 09:31:00 EDT 2014,2235483,"<p>I would recommend following method:</p>		<ol>	<li><p>Create new IOT table partitioned by system with single partition	with exactly same structure as current one.    </p></li>	<li><p>Lock current IOT table to prevent any DML.</p></li>	<li><p>insert into new table as select from current table changing PK values in select. This step	could be repeated several times if  needed. In this case it's better	to do it in another session to keep lock on original table.             </p></li>	<li><p>Exchange partition of new table with original table.</p></li>	</ol>	"
