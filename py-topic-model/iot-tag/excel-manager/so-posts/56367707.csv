thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56367707,56367707,null,1,0,Wed May 29 20:00:00 EDT 2019,10431261,"<p>I am setting up a Raspberry Pi 3b+ running Raspbian Stretch with IoT edge. This requires Docker images and containers for the modules. I am trying to get a module to take sensor data from the GPIO pins and send that to another module. When I attempt to use the directory where the GPIO information should be <code>/sys/class/gpio/export</code> I get that it does not exist. It seems like this is because docker doesn't have <code>privileged</code> set to <code>true</code>, however because I am doing this through IoT edge I can't input this through the CLI.	According to this article <a href="https://thenewstack.io/tutorial-connect-and-configure-raspberry-pi-as-an-azure-iot-edge-device/" rel="nofollow noreferrer">https://thenewstack.io/tutorial-connect-and-configure-raspberry-pi-as-an-azure-iot-edge-device/</a> I need to put </p>		<pre><code>{	  "HostConfig": {	    "Privileged": true	  }	}	</code></pre>		<p>under  create options, which I have done by putting this in the deployment manifest and publishing. I still get this error:	<code>/bin/chgrp: cannot access '/sys/class/gpio/export': No such file or directory</code>. I've tried elevating my privileges by granting my docker container <code>USER sudo</code> but I believe this is occurring because the docker container isn't truly being run with privileged settings. This is the post that makes me believe this: <a href="https://stackoverflow.com/questions/30059784/docker-access-to-raspberry-pi-gpio-pins">Docker Access to Raspberry Pi GPIO Pins</a> , it implies that it is as simple as running docker with privileged.</p>		<p>I have tried putting the create options to privileged. Here is a snapshot from my IoT Edge Module Details page on the Azure Portal:	<a href="https://i.imgur.com/0Z4epYZ.png" rel="nofollow noreferrer">https://i.imgur.com/0Z4epYZ.png</a></p>		<p>I've also put 	    {	      "HostConfig": {	        "Privileged": true	      }	    }	inside of the <code>CreateOptions</code> field within <code>deployment.template.json</code></p>		<p>Here is my dockerfile: </p>		<pre><code>    FROM arm32v7/node:8-slim		    WORKDIR /app/		    COPY package*.json ./		    RUN apt-get update		    RUN apt-get -y install sudo		    RUN useradd -m docker &amp;&amp; echo "docker:docker" | chpasswd &amp;&amp; adduser docker sudo		    RUN apt-get install -y python		    RUN apt-get install -y build-essential		    RUN npm install --production		    COPY app.js ./		    RUN sudo groupadd gpio	    RUN sudo usermod -aG gpio docker	    RUN su docker	    RUN sudo chgrp gpio /sys/class/gpio/export	    RUN sudo chgrp gpio /sys/class/gpio/unexport	    RUN sudo chmod 775 /sys/class/gpio/export	    RUN sudo chmod 775 /sys/class/gpio/unexport		    USER docker		    CMD ["node", "app.js"]	</code></pre>		<p>Note: this is all in Visual Studio Code. Once this is all in order, I right click my <code>deployment.template.json</code> and click <code>Build IoT Solution</code>. Then I right click my Edge device under the <code>Azure IoT Hub Devices</code> dropdown and select <code>Create Deployment for Single Device</code> then I select the <code>deployment.arm32v7.json</code> under <code>./moduleName/config</code>.</p>		<p>I expect for the <code>/sys/class/gpio/export</code> directory to actually exist within the container as it does exist within the RPi.	What actually happens here is that I get this error: 	<code>/bin/chgrp: cannot access '/sys/class/gpio/export': No such file or directory	The command '/bin/sh -c sudo chgrp gpio /sys/class/gpio/export' returned a non-zero code: 1</code></p>		<p>Any insights or help is greatly appreciated, thank you.</p>	"
56367707,99396100,56367707,3,0,Fri May 31 16:40:00 EDT 2019,4195001,"If you go to your device in the Azure portal and click 'Set Modules', there's a 'Container Create Options' section where you can add the JSON information required by docker to mount the path into your container. If you hover over the information icon for that section, there's a link to the Container Create API in docker's documentation. Find the needed format under `HostConfig` -> 'Binds'."
56367707,99338610,56367707,3,0,Wed May 29 20:09:00 EDT 2019,9429150,"As far as i understand your problem `sys/class/gpio/export` needs to be mounted because it is the path on the raspberryPi host system where your gpio input managed."
56367707,99338647,56367707,3,0,Wed May 29 20:11:00 EDT 2019,10431261,"Hi, thank you for the quick response. I am new to docker, do you know how I would mount this?"
56367707,99338797,56367707,3,0,Wed May 29 20:17:00 EDT 2019,9429150,"There are different methods, if you just use a simple container `$ docker run -v source:target  nginx:latest` will do. Multiple container require the use of compose-file, either way you should check out [documentation](https://docs.docker.com/storage/volumes/) were everything is explained in detail."
56367707,99339101,56367707,3,0,Wed May 29 20:31:00 EDT 2019,10431261,"I see. To my knowledge, this needs to be done with only a dockerfile and azure portal IoT edge settings as I will be deploying this remotely to many devices via IoT Edge"
