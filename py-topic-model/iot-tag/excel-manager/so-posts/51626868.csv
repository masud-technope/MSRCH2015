thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
51626868,51626868,null,1,1,Wed Aug 01 06:41:00 EDT 2018,9025180,"<p>I am recently working on a project that requires sending a command from my android mobile app to the android things on my raspberry pi 3. How can I achieve this through a WiFi connection?</p>		<p>I only need to send a String to the device.</p>	"
51626868,90221053,51626868,3,0,Wed Aug 01 08:10:00 EDT 2018,6950238,"Take a look at [this](https://stackoverflow.com/a/10388977/6950238) answer of [Moises Jimenez](https://stackoverflow.com/users/1363117/moises-jimenez)."
51626868,51627031,51626868,2,1,Wed Aug 01 06:51:00 EDT 2018,8471329,"<p>If you use system like Raspbian you can transform your Raspberry into a server.Then, You will have different ways to send your command:</p>		<p><strong>Option 1:</strong> Set up an Http server on your raspberry (PHP, NodeJS, JEE, ...) and send command via HTTP Request.</p>		<p><strong>Option 2:</strong> Set up a Socket Server on your raspberry (Socket.io, raw socket, ...) and send command via socket client</p>		<p><strong>Option 3</strong> Set up MQTT Server on your raspberry and send command via MQTT client (this last option is the way to go when talking about Internet of Things). Note that the program which receive command should implement MQTT Client as MQTT is based on pub/sub pattern. </p>	"
51626868,90219690,51627031,3,2,Wed Aug 01 07:29:00 EDT 2018,1029466,"Yes, the last way is the IoT way, but technically, the server should not be run on the thing. MQTT is a publish/subscribe protocol which means both the device and the thing are clients and the server (broker) rests somewhere on the cloud."
51626868,51639354,51626868,2,2,Wed Aug 01 17:46:00 EDT 2018,1491707,"<p>Using Android Things, you can use the <a href="https://developers.google.com/nearby/messages/overview" rel="nofollow noreferrer">Nearby Messages</a> API, which gives you the ability to communicate to and transfer messages between two Android devices within their apps. Here's a code snippet:</p>		<pre><code>@Override	public void onCreate(Bundle savedInstanceState) {	  super.onCreate(savedInstanceState);	  ...	  mMessageListener = new MessageListener() {	    @Override	    public void onFound(Message message) {	        Log.d(TAG, "Found message: " + new String(message.getContent()));	    }		    @Override	    public void onLost(Message message) {	        Log.d(TAG, "Lost sight of message: " + new String(message.getContent()));	    }	  }		  mMessage = new Message("Hello World".getBytes());	}		@Override	public void onStart() {	  super.onStart();	  ...	  Nearby.getMessagesClient(this).publish(mMessage);	  Nearby.getMessagesClient(this).subscribe(mMessageListener);	}		@Override	public void onStop() {	  Nearby.getMessagesClient(this).unpublish(mMessage);	  Nearby.getMessagesClient(this).unsubscribe(mMessageListener);	  ...	  super.onStop();	}	</code></pre>	"
51626868,90312170,51639354,3,0,Fri Aug 03 14:18:00 EDT 2018,9025180,"Okay I think I have misunderstood the documentation. I wanted to set up a http server but now I'll try to use this API, I hope it is reliable enough."
51626868,90256555,51639354,3,0,Thu Aug 02 05:55:00 EDT 2018,9025180,"In the documentation it says that both devices have to be connected to internet. My devices may not be able to be connected to the internet."
51626868,90284106,51639354,3,1,Thu Aug 02 18:45:00 EDT 2018,1491707,"Then you may want to use [Nearby Connections](https://developers.google.com/nearby/connections/overview) instead, which [is entirely P2P and works offline](https://developers.google.com/nearby/connections/v11-update)"
51626868,51642431,51626868,2,1,Wed Aug 01 21:21:00 EDT 2018,539171,"<p>You can use nanoHttpd on Android things and other library such as retrofit or volley on the Android device.</p>		<p>Check out this example for controlling a car via an Http API:  <a href="https://github.com/plattysoft/IotCar" rel="nofollow noreferrer">https://github.com/plattysoft/IotCar</a></p>	"
51626868,51669670,51626868,2,2,Fri Aug 03 09:37:00 EDT 2018,7995997,"<p>If one of your devices isn't connected to internet, you could :</p>		<p><strong>Option 1 :</strong>	use <a href="https://developers.google.com/nearby/connections/overview" rel="nofollow noreferrer">Google Nearby Connections API</a> , the API choose the best way to communicate (eg: Bluetooth, Wifi...).</p>		<p>See <a href="https://github.com/googlesamples/android-nearby/tree/master/connections" rel="nofollow noreferrer">https://github.com/googlesamples/android-nearby/tree/master/connections</a></p>		<p><strong>Option 2 :</strong>	Use <a href="https://developer.android.com/reference/java/net/Socket" rel="nofollow noreferrer">Socket</a> to communicate but your devices need to be on the same network. If they aren't connected to the same network, you can connect them using <a href="https://developer.android.com/reference/android/net/wifi/p2p/package-summary" rel="nofollow noreferrer">WIFI P2P</a>.</p>	"
