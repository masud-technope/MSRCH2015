thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56590869,56590869,null,1,0,Fri Jun 14 03:02:00 EDT 2019,4121093,"<p>I have web iot system. I need background async task to collect iot devices data and then store to the database .The task.py job collects data while the loop is running, without stopping. When I update task.py, I will stop all running task and restart celery. But I have 20 devices or more, so I have 20 running tasks, which is not a good solution. Is there any good idea? Thank you.</p>		<p>This is task.py, I have a web gui that can run tasks dynamically.</p>		<pre class="lang-py prettyprint-override"><code>@app.task(bind=True, base=AbortableTask, max_retries=None)	def getDeviceValue(self, deviceName):	    data = getDeviceData(deviceName)	    insertData(data)	    return deviceName	</code></pre>		<p>This is the view.py handle task started on the web gui.</p>		<pre class="lang-py prettyprint-override"><code>class DeviceTaskStart(View):		    def get(self, request, deviceName, *args, **kwargs):	        taskData, isCreate = TaskData.objects.get_or_create(name=deviceName)	        if isCreate:	            taskId = getDeviceValue.delay(deviceName)	            taskData.taskId = taskId	            taskData.save()	        else:	            state = app.AsyncResult(taskData.taskId).state	            print(state)	        return redirect(reverse(self.pattern_name))	</code></pre>	"
