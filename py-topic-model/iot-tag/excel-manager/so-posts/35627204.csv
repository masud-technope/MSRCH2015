thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
35627204,35627204,null,1,12,Thu Feb 25 12:23:00 EST 2016,3405865,"<p>I have developed application for two different sensors. They are working fine separately but when I try to use them togather and create two diffent buses than Alljoyn gives this exception.</p>		<blockquote>	  <p>org.alljoyn.services.common.BusAlreadyExistException: The object has	  been set previously with a BusAttachment.</p>	</blockquote>		<p>Below is my source code for connection.  Can anyone tell me why I'm having this issue.</p>		<pre><code>private void connect() 	        {           org.alljoyn.bus.alljoyn.DaemonInit.PrepareDaemon(getApplicationContext());		            bus = new BusAttachment("ControlPanelBrowser", BusAttachment.RemoteMessage.Receive);	            bus.registerBusListener(new BusListener());			            Status status = bus.registerBusObject(mControlPanelSignalInterface, Constants.SERVICE_PATH);			            if (status != Status.OK) {		                Log.d(TAG, "Problem while registering bus object");		            }   		            SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);	            srpPassword = settings.getString(PREFS_PASSWORD, DEFAULT_SECURED_SRP_PASSWORD);		            SrpAnonymousKeyListener authListener = new SrpAnonymousKeyListener(this, logger, AUTH_MECHANISMS);	            Status authStatus = bus.registerAuthListener(authListener.getAuthMechanismsAsString(), 	                    authListener, getKeyStoreFileName());		            if ( authStatus != Status.OK ) {	                Log.e(TAG, "Failed to register AuthListener");	            }		            status = bus.connect();			            if (Status.OK == status){		                String daemonName = Constants.DAEMON_NAME_PREFIX + ".ControlPanelBrowser.G" + 	                        bus.getGlobalGUIDString();		                int flag = BusAttachment.ALLJOYN_REQUESTNAME_FLAG_DO_NOT_QUEUE;		                Status reqStatus = bus.requestName(daemonName, flag);		                if (reqStatus == Status.OK) {		                    Status adStatus = bus.advertiseName(Constants.DAEMON_QUIET_PREFIX +	                            daemonName, SessionOpts.TRANSPORT_ANY);		                    if (adStatus != Status.OK){	                        bus.releaseName(daemonName);	                        Log.e(TAG, "Failed to advertise daemon name: '" + daemonName + "', Error: '" + status + "'");	                    }	                    else{	                        Log.d(TAG, "Succefully advertised daemon name: '" + daemonName + "'");	                    }	                }	                else {	                    Log.e(TAG, "Failed to request daemon name: '" + daemonName + "', Error: '" + status + "'");	                }	            }			            status = bus.registerSignalHandlers(mControlPanelSignalInterface);		            if (status != Status.OK) {	                Log.d(TAG, "Problem while registering signal handlers");	            }		            // Initialize AboutService		            aboutClient = AboutServiceImpl.getInstance();	            aboutClient.setLogger(logger);	            try {	                aboutClient.startAboutClient(bus);		                for (String iface :  ANNOUNCE_IFACES) {			                    aboutClient.addAnnouncementHandler(this, new String[] {iface});		                }	            } catch (Exception e) {		                logger.error(TAG, "Unable to start AboutService, Error: " + e.getMessage());		            }			        }	</code></pre>	"
35627204,59084129,35627204,3,0,Mon Feb 29 15:51:00 EST 2016,2442831,"which is the line that throws the `BusAlreadyExistException`?"
35627204,58987262,35627204,3,0,Fri Feb 26 13:54:00 EST 2016,2442831,"you should call `registerBusObject` twice (once for each sensor) and creating only one single bus attachment"
35627204,59064379,35627204,3,0,Mon Feb 29 07:02:00 EST 2016,3405865,"I had tried this but no success. Now I'm creating two different busAttachment object in two different classes but same error is occurring. Now how can I solve this issue?"
35627204,59107556,35627204,3,0,Tue Mar 01 05:56:00 EST 2016,3405865,"@Lino I'm finding issue at this link.  aboutClient.startAboutClient(bus);"
35627204,35896585,35627204,2,0,Wed Mar 09 16:02:00 EST 2016,5757310,"<p>why dont you create two Interfaces, one interface for one sensor respectively. then add these two interfaces in a class which implements these two interfaces and the busObject and register an implemntation of this class as a BusObject.</p>		<p>For example</p>		<p><code>Sensor1_interface.java and Sensor2_interface.java //are my two interface classes</code></p>		<p>create a new class Sensor_InterfaceList which inplements the two interfaces and the BusObject</p>		<pre><code>class Sensor_InterfaceList implements Sensor1_interface,Sensor2_interface,BusObject	   {	    // implment your interfaces here	    .....	    }	private Sensor_InterfaceList mySensor_InterfaceList;	mySensor_InterfaceList = new Sensor_InterfaceList();	myBus.registerBusObject(mySensor_InterfaceList,"/your/path");	</code></pre>		<p>This should solve your problem :)</p>	"
35627204,59454334,35896585,3,0,Wed Mar 09 16:14:00 EST 2016,5757310,"or you can also add two objects on the same bus but on different paths.example `myBus.registerBusObject(mySensor1,"/my/path1"); myBus.registerBusObject(mySensor2,"/my/path2");`"
35627204,35859462,35627204,2,1,Tue Mar 08 05:09:00 EST 2016,null,"<p>use <code>registerBusObject</code> twince and then you can make one signle bus attachment</p>	"
35627204,59386490,35859462,3,0,Tue Mar 08 07:05:00 EST 2016,3405865,"I have done this but got the same error."
