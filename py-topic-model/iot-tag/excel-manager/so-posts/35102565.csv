thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
35102565,35102565,null,1,0,Sat Jan 30 13:49:00 EST 2016,4162427,"<p>I want to install a new node library with npm on my Intel Galileo Gen 2 board running yocto (iot-devkit-1.5-i586-galileo). This has worked perfectly a couple of times before, however I have come to a point where npm tells me that I do not have sufficient space on my system which I can't really believe as I am using a 8GB SD card and yocto only takes up 1.3GB. </p>		<p>When I run npm install geoip-lite I get the following error:	<a href="https://i.stack.imgur.com/kwNag.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/kwNag.png" alt="ERROR on npm install"></a></p>		<p>When I run df -h I get the following:	<a href="https://i.stack.imgur.com/3B7cR.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/3B7cR.png" alt="System partitions"></a></p>	"
35102565,35111159,35102565,2,0,Sun Jan 31 06:45:00 EST 2016,256610,"<p>Well, your rootfs is full (100% used). npm install writes to the rootfs, so the problem is clear. So either remove unnecessary bits from the rootfs or increase the rootfs size.</p>	"
35102565,35126261,35102565,2,0,Mon Feb 01 08:48:00 EST 2016,2241569,"<p>Yocto won't create a larger rootfs unless you tell it to (you can imagine someone with a 2GB SD card would be annoyed if the image was 4GB for no apparent reason).</p>		<p>You should probably use <code>IMAGE_ROOTFS_EXTRA_SPACE = "1048576"</code> in your image recipe to set the amount of free space you want in Kbytes, but please read the <a href="http://www.yoctoproject.org/docs/2.0/ref-manual/ref-manual.html#var-IMAGE_ROOTFS_SIZE" rel="nofollow">IMAGE_ROOTFS_SIZE documentation</a> as well for the bigger picture.</p>	"
35102565,35305203,35102565,2,0,Wed Feb 10 01:11:00 EST 2016,5559775,"<p>I do not really prefer <code>IMAGE_ROOTFS_EXTRA_SPACE =</code> as this will increase the download size of the file (<code>*.sdcard *.rootfs</code>) by a big chunk given that I compile the Image in Amazon EC2.</p>		<p>What I usually do is, compress the rootfs to tar ball and download to local.</p>		<p>In my SD Card, I set up 2 partitions using <code>fdisk</code> , one is for kernel and the other is for Rootfs. Use <code>dd command</code> for the <code>uboot</code>, put the Kernel <code>.dtb</code> and <code>.bin</code> into the first partition and just extract the <code>rootfs</code> tarball into the second parition.</p>		<p>Doing this way, I make sure that I use every single space in the SD Card. And, it is easier for me to change the rootfs if I need to. </p>	"
