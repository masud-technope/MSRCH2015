thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33518745,33518745,null,1,2,Wed Nov 04 09:57:00 EST 2015,2999862,"<p>I am new to WSO2 and like to evaluate the product for a specific IoT use case involving Raspberry Pi.</p>		<p>I found this nice article with the IoT demo, but could need some help reproducing it: </p>		<p><a href="http://wso2.com/library/articles/2014/09/demonstration-on-architecture-of-internet-of-things-an-analysis/" rel="nofollow">http://wso2.com/library/articles/2014/09/demonstration-on-architecture-of-internet-of-things-an-analysis/</a></p>		<p>Github repository is here:	<a href="https://github.com/dulichan/iot-ref-arch/releases/tag/0.0.1" rel="nofollow">https://github.com/dulichan/iot-ref-arch/releases/tag/0.0.1</a></p>		<p>There are three components involved: </p>		<ol>	<li>Message Broker</li>	<li>Complex Event Processor</li>	<li>Enterprise Mobility Manager (EMM)</li>	</ol>		<p>Is there a more detailed description about how to setup the components?</p>		<p>I managed to run the rpi agent on raspberry and to run EMM on my server machine, but where to put the files in the folders "cep-resources" ?</p>		<p>Also I foud few information on how to enroll the raspberry in EMM, is this possible by default with the user token in EMM or do I have to make any adjustments?</p>	"
33518745,54908131,33518745,3,1,Fri Nov 06 10:50:00 EST 2015,2134453,"cep-resources contains the deployment artifacts for the Complex Event Processor 3.1.0. the stream-definitions.xml file should go to <CEP>/repository/conf/data-bridge directory. Other directories should go to <CEP>/repository/deployment/server (replace)"
33518745,55054473,33518745,3,0,Tue Nov 10 21:46:00 EST 2015,2092716,"I am able to get past this, but I have a different stack trace on the WSO2 EMM server log -> `ERROR {org.jaggeryjs.jaggery.core.manager.WebAppManager} -  org.mozilla.javascript.EcmaError: TypeError: Cannot read property "id" from undefined (/emm/modules/device.js#1163) {org.jaggeryjs.jaggery.core.manager.WebAppManager}	org.jaggeryjs.scriptengine.exceptions.ScriptException: org.mozilla.javascript.EcmaError: TypeError: Cannot read property "id" from undefined (/emm/modules/device.js#1163) at org.jaggeryjs.scriptengine.engine.RhinoEngine.execScript(RhinoEngine.java:571)`. This is a RaspberryPI."
33518745,55047941,33518745,3,0,Tue Nov 10 18:28:00 EST 2015,2092716,"On a related note, I wanted to understand how to enroll using the python-agent. I did manage to build the rpi-agent (Java) alongwith the maven install on rpi, but I think the python-agent will be more lightweight for an rpi hardware constrained environment. The error is regarding the enrollment url which kicks in once self enrollment is attempted at url -> `https://localhost:9453/temp-controller-agentr/enrollment/enroll`. This obviously fails with I am not sure what WSO2 server this should point out to on my laptop, but I am assuming it has to be the WSO2 EMM server."
33518745,55047953,33518745,3,0,Tue Nov 10 18:28:00 EST 2015,2092716,"I tried changing the dmURL to https://my.localnetwork.ip.address:9443/emm/api/devices/register/1.0.0/ and I got this response `<ams:fault xmlns:ams="http://wso2.org/apimanager/security"><ams:code>900901</ams:code><ams:message>Invalid Credentials</ams:message><ams:description>Access failure for API: /emm/api/devices/register, version: 1.0.0 with key: null</ams:description></ams:fault>`"
33518745,55157158,33518745,3,0,Fri Nov 13 12:33:00 EST 2015,2134453,"that file is located in <EMM>/repository/deployment/server/jaggeryapps/emm/modules/device.js"
33518745,55157522,33518745,3,1,Fri Nov 13 12:43:00 EST 2015,2134453,"in the past i once found an issue in device.js where a nested for loop used the same variable 'i' as in outer loop. i guess this can be somewhat similar issue (similar error msg). so look above that line #1163 for such occurrences. you can simply edit and save that file to fix it."
33518745,37518685,33518745,2,1,Mon May 30 06:09:00 EDT 2016,6289400,"<p>You can use WSO2 IoT Server 1.0.0 Alpha which was released recently which has the necessary components packed OOB. You can download the pack from [1]. This release has a Raspberry pi sample [2] which uses DHT11 temperature sensor and a LED bulb which you can tryout. Also you can write your own device plugin by referring [3].</p>		<p>[1] <a href="https://github.com/wso2/product-iots/releases/tag/v1.0.0-alpha">https://github.com/wso2/product-iots/releases/tag/v1.0.0-alpha</a></p>		<p>[2] <a href="https://docs.wso2.com/display/IoTS100/Raspberry+Pi">https://docs.wso2.com/display/IoTS100/Raspberry+Pi</a></p>		<p>[3] <a href="https://docs.wso2.com/display/IoTS100/Creating+a+New+Device+Type">https://docs.wso2.com/display/IoTS100/Creating+a+New+Device+Type</a></p>	"
