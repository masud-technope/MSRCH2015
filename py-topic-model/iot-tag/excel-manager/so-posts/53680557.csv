thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53680557,53680557,null,1,0,Sat Dec 08 07:39:00 EST 2018,8945138,"<p>I am creating an IoT Project, having an Arduino Uno connecting with Lowrance Sonar using NMEA0183 and Spackfun's <a href="https://www.sparkfun.com/products/13956" rel="nofollow noreferrer">Weather Shield</a>. As it is an IoT, I need to upload all of the data to the database,and I need to parsing the NMEA0183 data for storage. </p>		<p>I need to use GPS data, which I chose to use GLL format and Sonar data, which are the depth DPT, and fluid temperature MTW. I have already complete the parsing part without using any library as there is no library for parsing Sonar data. The code is written below.</p>		<pre><code>  while(Serial.available() &gt; 0){ 	    NMEAsentence[i] = Serial.read();	    //Serial.print(NMEAsentence[i]);		   if(NMEAsentence[i] == 0x0a){	   //Serial.print(NMEAsentence[1]);	     if(NMEAsentence[0] == '$' &amp;&amp; NMEAsentence[1] == 'S' &amp;&amp; NMEAsentence[2] == 'D' &amp;&amp; NMEAsentence[3] == 'M' &amp;&amp; NMEAsentence[4] == 'T' &amp;&amp; NMEAsentence[5] == 'W'){	       w_temp = atof(TEST=strtok(&amp;NMEAsentence[6], ","));	       Serial.println(w_temp);    	     }	     if(NMEAsentence[0] == '$' &amp;&amp; NMEAsentence[1] == 'G' &amp;&amp; NMEAsentence[2] == 'P' &amp;&amp; NMEAsentence[3] == 'G' &amp;&amp; NMEAsentence[4] == 'L' &amp;&amp; NMEAsentence[5] == 'L'){	       latitude = atof(TEST=strtok(&amp;NMEAsentence[6], ","));	       while(TEST != NULL){	         TEST = strtok(NULL,",");	         if(TEST != NULL){	           switch (count){	             case 0:	               dirNS = *TEST;	               count++;	               break;	             case 1:	               longitude = atof(TEST);	               count++;	               break;	            case 2:	               dirWE = *TEST;	               count++;	               break;	            default:	               break;	            }	          //Serial.println(TEST);	          Serial.println(latitude);	          Serial.println(dirNS);	          Serial.println(longitude);	          Serial.println(dirWE);	         }	       }	     }//gll parsing loop if	   i = 0;	  }else i++;	}   	</code></pre>		<p>The code works fine when I test it with the Lowrance fish finder separately. The problem is when I combine data from fish finder and Sparkfun's Weather Shield with the measurement of 10 minutes(supposedly) per 1 time of measurement.</p>		<p>According to Sparkfun's example of Weather Shield <a href="https://learn.sparkfun.com/tutorials/arduino-weather-shield-hookup-guide-v12?_ga=2.17711353.1124597540.1544233108-2145575930.1535936982" rel="nofollow noreferrer">here</a>, the author used the code</p>		<pre><code>if (millis() - lastSecond &gt;= PERIOD_WAIT_TIME){	  lastSecond += PERIOD_WAIT_TIME;	}	</code></pre>		<p>to create the interval of measurement. I insert my NMEA parsing code in this loop(code below), and the result is not what I want. </p>		<pre><code>if (millis() - lastSecond &gt;= PERIOD_WAIT_TIME){	  lastSecond += PERIOD_WAIT_TIME;		  //NMEA parsing here		  //get data from weather shield	  Temp = PressureSensor.readTemp();	  Serial.print(" Temp = ");	  Serial.print(Temp, 2);	  Serial.print("C, ");		  //upload data to IoT Platform	  if(sakuraio.enqueueTx(0,Temp) != CMD_ERROR_NONE){	   Serial.println("[ERR] enqueue error");	 }	 sakuraio.send();	}	</code></pre>		<p>NMEA statement is being read through and parsed, but only one sentence per one measurement round. For example, I have both GLL and MTW to parse but when I run the program only MTW or GLL is parsed (the other is being ignored), and I need to wait another 10 minutes. Whether MTW or GLL will be parsed seems to be random.</p>		<p>I need to parse both at a time of measurement, do you have any suggestion for this?	Also, I'm thinking about uploading both NMEA statements as strings ,and parsing them later by PHP or JS script before them going into the database? Will that be valid?</p>	"
