thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
32124471,32124471,null,1,8,Thu Aug 20 17:20:00 EDT 2015,1911947,"<p>Just asking one silly question, hope someone can answer this. </p>		<p>I'm bit confused regarding MQTT broker. Basically, the confusion is, there are so many things being used for data storing, transfer and processing (like Flume, HDInsight, Spark etc). So, when and why I need to use one MQTT broker?</p>		<p>If I would like to use Windows 10 IoT application with HiveMQ, from where can I get the details? how to use it? How I get benefit out of this MQTT broker? Can I not send data from my IoT application directly using Azure or HDFS? So, how MQTT broker fits into it or helping me to achieve something?</p>		<p>I'm new to all these and tried to find some tutorials, however, I'm not getting anything proper. Please explain it in more details or give some tutorials for this?</p>	"
32124471,32124830,32124471,2,5,Thu Aug 20 17:40:00 EDT 2015,441467,"<p>This is an architectural choice. IoT applications are possible without MQTT but there are some advantages when using MQTT. If you are completely new to MQTT, take a look at this in-depth MQTT series: <a href="http://forkbomb-blog.de/2015/all-you-need-to-know-about-mqtt" rel="noreferrer">http://forkbomb-blog.de/2015/all-you-need-to-know-about-mqtt</a></p>		<p>Basically the main architectural advantage is publish / subscribe designed for low-latency, high throughput (mobile) communication with minimal protocol overhead (which is important if bandwidth is at a premium). You can completely decouple consumers and producers. </p>		<p>HDFS is the (distributed) Hadoop file system and is the foundation for Map / Reduce processing. It is not comparable to a MQTT broker. The MQTT broker could write to the HDFS, though (in case of HiveMQ with a custom plugin).</p>		<p>Basically MQTT is a protocol while the products you are mentioning are, well, products which solve completely different problems:</p>		<p>Flume is basically used for log aggregation at scale. You won't use MQTT for that, at least there is not too much advantage because this is typically done in backend applications.</p>		<p>Spark and Hadoop shine at Big Data crunching. They are a framework and not a ready to use solution. They are not really comparable to MQTT. Often MQTT brokers like HiveMQ are used in conjunction with these, Spark / Hadoop for data processing and HiveMQ for communication.</p>		<p>I hope this helps you getting started. Best would be to read about typical use cases of all these technologies, this is a bit too broad for a single SO answer.</p>	"
32124471,32165640,32124471,2,6,Sun Aug 23 10:26:00 EDT 2015,5255378,"<p>MQTT is a client-server protocol for pub-sub based transport that has a comparatively small overhead, and thus applicable to mobile and IoT applications (unlike Flume, etc.). The MQTT broker is basically a server that handles messaging to/from MQTT clients and among them. The functionality pretty much stops at the transport layer, even though various MQTT add-ons exist.</p>		<p>If you are looking to implement a solution that would reliably transfer data from your IoT devices to the back-end system for processing, I would suggest you take a look into <a href="http://www.kaaproject.org" rel="noreferrer">Kaa open-source IoT platform</a>. It goes much further than MQTT by providing not only the transport layer, suitable for low-power IoT devices, but also a solid chunk of the application level logic (including the object bindings for your application-level data structures, temporary data persistence, etc.).</p>		<p>Here is a link to a webinar that explains <a href="https://www.youtube.com/watch?v=a5Dw57Q-OIc" rel="noreferrer">how to build a scalable IoT analytics system with Kaa and Spark in less than an hour</a>.</p>	"
32124471,52706239,32165640,3,0,Sun Sep 06 04:51:00 EDT 2015,1454704,"Just to be fair, Carriots / Xively / Etherios / Axeda / RabbitMQ all provide good IoT backend services that support message protocols like MQTT/AMQP."
32124471,33119382,32124471,2,3,Wed Oct 14 07:38:00 EDT 2015,5444034,"<p>MQTT is a data transport, so the usual thing I have to compare it with is HTTP. HTTP has two important characteristics, a) It goes from one point to another, b) It is request/response, so only one end can start a data transfer. MQTT connects many end points to many end points, and either end can start a data transfer. So, if you have just one device and only one service or person that will ever access it, and only by polling, then HTTP is great. MQTT means many devices can post data to many services or people, AND the other way around. Your question assumes that your data is always going to land up in some sort of data store, but many interactions are about events and responding to them immediately, like ringing a doorbell, or lowering the landing gear. In these cases you will often want to both record the data, and have an immediate action occur, like your phone making a doorbell noise.</p>		<p>Finally, you send data to MQTT semantically, rather than by IP address. 	This means that your services subscribes to /mikeshouse/doorbell rather than polling 192.168.22.4, which is a huge gain once you have a number of devices.</p>	"
