thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55985859,55985859,null,1,2,Sat May 04 18:59:00 EDT 2019,11452985,"<p>I need to describe the capability of devices and how to invoke the capabilities functions semantically. In order to achieve that I created a super simple RDF Graph and used <a href="https://github.com/rdfjs/serializer-jsonld" rel="nofollow noreferrer">@rdfjs/serializer-jsonld</a> library to serialize the graph to JSON-LD file with the following code: </p>		<pre><code>const rdf = require('@rdfjs/data-model')	const Readable = require('stream').Readable	const SerializerJsonld = require('@rdfjs/serializer-jsonld')		const serializerJsonld = new SerializerJsonld()	const input = new Readable({	  objectMode: true,	  read: () =&gt; {	    input.push(rdf.quad(	      rdf.literal('Device001'),	      rdf.namedNode('https://schema.org/potentialAction'),	      rdf.namedNode('https://schema.org/PhotographAction')))	    input.push(rdf.quad(	      rdf.namedNode('https://schema.org/PhotographAction'),	      rdf.namedNode('https://w3id.org/function/ontology#Function'),	      rdf.literal('takePhoto')))	    input.push(null)	  }	})	const output = serializerJsonld.import(input)		output.on('data', jsonld =&gt; {	  console.log(jsonld)	})	</code></pre>		<p>which creates the following JSON-LD file.</p>		<pre><code>[	    {	        "@id": "Device001",	        "https://schema.org/potentialAction": {	            "@id": "https://schema.org/PhotographAction"	        }	    },	    {	        "@id": "https://schema.org/PhotographAction",	        "https://w3id.org/function/ontology#Function": "takePhoto"	    }	]	</code></pre>		<p>Is this semantically correct? Is is okay to combine [schema.org] ontology (<a href="https://schema.org/" rel="nofollow noreferrer">https://schema.org/</a>) and <a href="https://w3id.org/function/ontology#" rel="nofollow noreferrer">function ontology</a> without using RDF Schema or any class or type? Is there a better way to combine 2 ontologies? JSON-LD playground gives no errors but is there a better way to validate?</p>	"
55985859,98632080,55985859,3,0,Sun May 05 12:55:00 EDT 2019,11452985,"@unor second node is supposed to say that the PhotographAction can be invoked with "takePhoto" function."
55985859,98632147,55985859,3,0,Sun May 05 13:00:00 EDT 2019,11452985,"@AKSW thanks for your answer. You're right, that's my mistake, the given URI should be a named node but I believe that [literals](https://www.w3.org/TR/rdf11-concepts/#section-Graph-Literal) should be used to specify the data type. So for `rdf.namedNode('takePhoto')` it can be blank node instead because there is no specific URI to identify it."
55985859,98632319,55985859,3,0,Sun May 05 13:10:00 EDT 2019,11452985,"@AKSW I don't really know how to check the accuracy of my graph and JSON-LD file and I haven't seen many examples of ontologies combines together. Do you know any tools to test semantic-data? thanks again for your clarification."
55985859,98632423,55985859,3,0,Sun May 05 13:16:00 EDT 2019,4744359,"*"but I believe that literals should be used to specify the data type"* - well, no. Literals are just plain values that do **not** have an identity. Literals **can** have datatype, but they don't have to resp. you could just use the `xsd:string` datatype. But, it does not make sense to use a blank node, it is clearly a literal."
55985859,98632458,55985859,3,1,Sun May 05 13:19:00 EDT 2019,11452985,"okay, I have changed to literal. Thanks! @AKSW"
55985859,98632473,55985859,3,0,Sun May 05 13:19:00 EDT 2019,4744359,"*"I don't really know how to check the accuracy of my graph"* - there is nothing like the *accuracy of a graph*. IT all depends on your use-case. You want and have to work with your data, if it fits your requirements, everything is fine. I also don't understand what you mean by *"tools to test semantic-data"*. Test in terms of what? Clearly, no tool could check semantics w.r.t. the domain your data is about. How should this be possible. Syntax checks and maybe logical flaws (if you'd have a more expressive ontology via reasoning) ok. But that's not the case in your example"
55985859,98632557,55985859,3,0,Sun May 05 13:24:00 EDT 2019,11452985,"Maybe this is a stupid question but to test in terms of *this rdf statement explains exactly what I want to tell meaning there is an action of the device which is a photographAction and this photographAction can be invoked with takePhoto*."
55985859,98629928,55985859,3,0,Sun May 05 10:30:00 EDT 2019,4744359,"I'm wondering why you did `rdf.namedNode('takePhoto')` given that it is supposed to be a literal, right? And why `rdf.literal('https://schema.org/PhotographAction')` given that it is a URI, or not?"
55985859,98629951,55985859,3,0,Sun May 05 10:32:00 EDT 2019,4744359,"Regarding your question, why should it not be ok to use several exiting vocabularies? I mean, reusing is one of the concepts of the Semantic Web. *"without using RDF Schema or any class or type"* - why should you introduce classes if you don't need them. And the existing schema is online, ideally available and accessible via Linked Data priciples"
55985859,98622894,55985859,3,0,Sat May 04 21:35:00 EDT 2019,1591669,"In your own words, what is the second node in the JSON-LD snippet supposed to say?"
55985859,55993119,55985859,2,1,Sun May 05 14:41:00 EDT 2019,1591669,"		<blockquote>	<pre class="lang-json prettyprint-override"><code>{	    "@id": "Device001",	    "https://schema.org/potentialAction": {	        "@id": "https://schema.org/PhotographAction"	    }	}	</code></pre>	</blockquote>		<p>Here you are creating a class-less instance identified by the URI <code>https://schema.org/PhotographAction</code>, but you probably want to create an instance that has the class <a href="https://schema.org/PhotographAction" rel="nofollow noreferrer"><code>https://schema.org/PhotographAction</code></a>, and that is identified by an URI under your control.</p>		<pre class="lang-json prettyprint-override"><code>{	    "@id": "Device001",	    "https://schema.org/potentialAction": {	        "@type": "https://schema.org/PhotographAction"	        "@id": "Action001"	    }	}	</code></pre>		<hr>		<blockquote>	<pre class="lang-json prettyprint-override"><code>{	    "@id": "https://schema.org/PhotographAction",	    "https://w3id.org/function/ontology#Function": "takePhoto"	}	</code></pre>	</blockquote>		<p>Here you are saying something about the class <code>https://schema.org/PhotographAction</code>, but you probably want to say something about your instance that has this class (where the instance is identified by the URI you provided in the first node).</p>		<pre class="lang-json prettyprint-override"><code>{	    "@id": "Action001",	    "https://w3id.org/function/ontology#Function": "takePhoto"	}	</code></pre>		<p>I’m not familiar with the Function Ontology, but as <a href="https://fno.io/ontology/index-en.html#Function" rel="nofollow noreferrer"><code>https://w3id.org/function/ontology#Function</code></a> is a class, your probably don’t want to use it as property.</p>	"
55985859,98654321,55993119,3,0,Mon May 06 11:36:00 EDT 2019,11452985,"I used "https://git.onem2m.org/MAS/BaseOntology/raw/master/base_ontology.owl#hasCommand" this URI to connect them."
55985859,98634217,55993119,3,0,Sun May 05 14:59:00 EDT 2019,11452985,"thanks a lot! if I don't use as an property, how can I combine the PhotographAction and `"https://w3id.org/function/ontology#Function"` class?"
55985859,98635648,55993119,3,0,Sun May 05 16:28:00 EDT 2019,1591669,"@telquelcemre: What is the relation between the `PhotographAction` and the `Function` (I suppose they aren’t the same?)? Depending on the relation, the Function ontology might define a suitable [object property](https://fno.io/ontology/index-en.html#properties)."
55985859,98643522,55993119,3,0,Mon May 06 03:14:00 EDT 2019,1591669,"@telquelcemre: After skimming the [spec](https://fno.io/spec/), there doesn’t seem to be suitable property to connect these two entities (also, I’m not sure if the Function Ontology is intended for your case in the first place, but it’s hard to tell as the spec/ontology are still drafts and don’t contain enough documentation yet)."
55985859,98635787,55993119,3,0,Sun May 05 16:38:00 EDT 2019,11452985,"`PhotographAction` *can be invoked with* `Function`."
