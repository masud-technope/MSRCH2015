thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
48578216,48578216,null,1,2,Fri Feb 02 08:00:00 EST 2018,4955597,"<p>I am using Google IOT core with mongoose os. I wanted to update device connection status to firestore. But i am unable to find event which reports mqtt connection status to pub/sub like when device disconnects or reconnect i.e if device is offline or not.</p>		<p>I am stuck on this problem for days.Any help will be appreciated</p>	"
48578216,48590108,48578216,2,1,Fri Feb 02 20:04:00 EST 2018,3534690,"<p>Unfortunately, there's no built in way to do this right now as there aren't events on this state.</p>		<p>However, you could implement a hack by sending a message on connect/disconnect from the device that you have a Cloud Function subscribed to the Pub/Sub topic listening for. It's not perfect as it would fail in the case where the device disconnected unexpectedly.</p>	"
48578216,84252869,48590108,3,0,Mon Feb 05 17:19:00 EST 2018,3534690,"I don't know offhand. I work at Google, so I'm not as familiar with their systems. I did a quick look at AWS' events, and I don't see one for connect/disconnect, but I definitely could just be missing it in their docs."
48578216,84250224,48590108,3,0,Mon Feb 05 16:09:00 EST 2018,4955597,"Does any other cloud iot service has this option like aws or azure."
48578216,48652512,48578216,2,0,Tue Feb 06 21:47:00 EST 2018,1552344,"<p><strong>Update</strong></p>		<p>As @devunwired mentioned <a href="https://stackoverflow.com/questions/54609757/google-core-iot-device-offline-event-or-connection-status">in this response</a> it is now possible to monitor Stackdriver logs for disconnect events. You must have at a minimum enabled INFO level logging on your project in IoT Core > Registries > [your registry] > Edit Registry > Select "Info" log level > Click save. </p>		<p><strong>Original Response</strong></p>		<p>There are a few values you can look at that are tracked in device configuration metadata that you could use to know when a device last was online:</p>		<ol>	<li>Last Configuration Send time - sent anytime your device connects / 	configuration is posted</li>	<li>Last Event Time - Last time an event was sent from the device</li>	<li>Last State Time - Last time state was sent from the device</li>	<li>Last Heartbeat time - Last time MQTT heartbeat was sent</li>	</ol>		<p>To get you started, <a href="https://developers.google.com/apis-explorer/#p/cloudiot/v1/cloudiot.projects.locations.registries.devices.get" rel="nofollow noreferrer">here is an example using API explorer</a> that you can fill-in with your project ID, region, registry, and device to query for a specific device's metadata.</p>		<p>For 1...3 you have control over these through device manager and by publishing data. MQTT heartbeat is updated if your device sends an <code>MQTT_PINGREQ</code> message during the "ping period" without other messages getting sent.</p>		<p>At any rate, you could use any of these update time values to see the last time a device was online / functioning.  You could query the states of your devices after listing the devices in a registry and could update a Firebase RTDB periodically if that's how you want to report (e.g. using AppEngine TaskQueue). Note that you also just can get these "last connected" values from the <a href="https://console.cloud.google.com/iot/" rel="nofollow noreferrer">Google Cloud Console</a>.</p>		<p>It was said before but we don't have an event for disconnect, just configuration ack, which generally is the connection event. If you want to share state between a device and the device manager, use <a href="https://cloud.google.com/iot/docs/concepts/devices#device_state" rel="nofollow noreferrer">state messages</a>.</p>	"
48578216,94761507,48652512,3,0,Fri Dec 28 17:10:00 EST 2018,378506,"We shouldn't have to do something like this just check if a device is online .. it's as simple as an MQTT connect/disconnect but i'm finding more and more how incomplete Google's IoT functionality is .. which makes it difficult to just use core iot and firebase without having to write a bunch of helper functions for basic iot stuff"
48578216,96295771,48652512,3,0,Tue Feb 19 00:11:00 EST 2019,378506,"@class How is this still not something available?  All other IoT providers have some way of doing this?  So we literally have to constantly run a fn to check based on those values, instead of just adding LWT support or some kind of event on MQTT disconnect?  I can't believe we have to jump through this many hoops just for device offline state!"
48578216,84341039,48652512,3,0,Wed Feb 07 19:10:00 EST 2018,1552344,"My bad, I need to update those samples to instead use v1 (we're moving on from v1beta1)."
48578216,84352993,48652512,3,0,Thu Feb 08 04:25:00 EST 2018,4955597,"Sorry to ask a another question in comment, I just wanted to know how to send iot config messages from firebase function with qos 0. I could not find anything in docs."
48578216,84704330,48652512,3,0,Sun Feb 18 10:00:00 EST 2018,1552344,"@HonneyGoyal might be worth asking another question but you could use the NodeJS manager example ensuring you add the dependencies in package.json for your cloud function."
48578216,84309937,48652512,3,0,Wed Feb 07 04:36:00 EST 2018,4955597,"Thanks i think this may work. I am unable to access google iot v1beta1 api. https://cloudiot.googleapis.com/$discovery/rest?version=v1beta1 whenever i try this discovery api this shows Discovery document not found for API service. Can you please help"
48578216,48758924,48578216,2,0,Tue Feb 13 03:22:00 EST 2018,1861459,"<p>The AWS IoT platform publishes messages on a special MQTT topic (prefixed with <code>$aws</code>) when your device connects/disconnects. You can easily use these to monitor these events - however, you should be aware that the MQTT protocol is designed to be robust to a poor networking conditions and the broker on the AWS side probably doesn't think it's a bit deal to disconnect a client. The broker expects that the client will just reconnect and queue messages for a moment during that process (which can be a big deal on a microcontroller).</p>		<p>All that being said, the AWS topics you would watch are:</p>		<pre><code>$aws/events/presence/connected/{clientId}	</code></pre>		<p>and</p>		<pre><code>$aws/events/presence/disconnected/{clientId}	</code></pre>		<p>and the documentation for these (and other) lifecycle events are located: <a href="https://docs.aws.amazon.com/iot/latest/developerguide/life-cycle-events.html" rel="nofollow noreferrer">https://docs.aws.amazon.com/iot/latest/developerguide/life-cycle-events.html</a> </p>	"
48578216,54609771,48578216,2,0,Sat Feb 09 19:12:00 EST 2019,378506,"<p>There currently is no way to do this, that i've been able to find (a year later after this original post).  I posted a question here on SO regarding this as well, with more details and link to example code I had to use for handling this:	<a href="https://stackoverflow.com/questions/54609757/google-core-iot-device-offline-event-or-connection-status">Google Core IoT Device Offline Event or Connection Status</a></p>	"
