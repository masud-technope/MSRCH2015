thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38925430,38925430,null,1,0,Fri Aug 12 19:44:00 EDT 2016,5301178,"<p>i've coded a code next:	     private async void WriteData()	            {	                var removableDevices = KnownFolders.RemovableDevices;	                var externalDrives = await removableDevices.GetFoldersAsync();	                var drive0 = externalDrives[0];</p>		<pre><code>            var testFolder = await drive0.CreateFolderAsync("test");	            var testFile = await testFolder.CreateFileAsync("test.jpg");		            var byteArray = new byte[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07 };	            using (var sourceStream = new MemoryStream(byteArray).AsRandomAccessStream())	            {	                using (var destinationStream = (await testFile.OpenAsync(FileAccessMode.ReadWrite)).GetOutputStreamAt(0))	                {	                    await RandomAccessStream.CopyAndCloseAsync(sourceStream, destinationStream);	                }		            }		        }		        private async void _timer_Tick(object sender, object e)	        {	            DhtReading reading = new DhtReading();	            int val = this.TotalAttempts;	            this.TotalAttempts++;		            reading = await _dht.GetReadingAsync().AsTask();		            _retryCount.Add(reading.RetryCount);	            this.OnPropertyChanged(nameof(AverageRetriesDisplay));	            this.OnPropertyChanged(nameof(TotalAttempts));	            this.OnPropertyChanged(nameof(PercentSuccess));	        if (reading.IsValid)	        {	            this.TotalSuccess++;	            this.Temperature = Convert.ToSingle(reading.Temperature);	            this.Humidity = Convert.ToSingle(reading.Humidity);	            this.LastUpdated = DateTimeOffset.Now;	            this.OnPropertyChanged(nameof(SuccessRate));		            this.WriteData();			        }		        this.OnPropertyChanged(nameof(LastUpdatedDisplay));		    }	</code></pre>		<p>My code freeze , and i wanna know how could I save the humidity and temperature values in that archive, 	It is the best way to save this app ?</p>		<p>Someone Could Help me ?</p>	"
38925430,65256235,38925430,3,0,Mon Aug 15 07:27:00 EDT 2016,6601582,"I checked `WriteData()` on Raspberry Pi 2. I wrote to test.jpg successfully. Problem may be in _timer_Tick(). Which line cause your code freeze? What device do you use?"
38925430,65304110,38925430,3,0,Tue Aug 16 12:55:00 EDT 2016,5301178,"i'm using Raspberry Pi 3 , with Windows Iot Core OS version : 10.0.14393.0 , did you saw any mistake in my code?"
38925430,65318401,38925430,3,0,Tue Aug 16 19:15:00 EDT 2016,5301178,"The error is in		#endif	#if DEBUG && !DISABLE_XAML_GENERATED_BREAK_ON_UNHANDLED_EXCEPTION	            UnhandledException += (sender, e) =>	            {	                if (global::System.Diagnostics.Debugger.IsAttached) global::System.Diagnostics.Debugger.Break();  //THIS LINE	            };	#endif	        }	    }	}"
38925430,39034259,38925430,2,0,Fri Aug 19 08:17:00 EDT 2016,6601582,"<p>Because after you ran the code for the first time, the "test" folder and "test.jpg" is already created, so when you run the code again you may receive this exception. You can try this:</p>		<pre><code>var testFolder = await drive0.GetFolderAsync("test");	var testFile = await testFolder.GetFileAsync("test.jpg");	</code></pre>		<p>Instead of </p>		<blockquote>	<pre><code>var testFolder = await drive0.CreateFolderAsync("test");	var testFile = await testFolder.CreateFileAsync("test.jpg");	</code></pre>	</blockquote>		<p>Note: Here I saved the test.jpg on an external SD card. If there is no SD card in your device, the code also run into this exception.</p>	"
38925430,65432887,39034259,3,0,Fri Aug 19 14:34:00 EDT 2016,5301178,"Rita, I change it but the error is the same ."
38925430,65489095,39034259,3,0,Mon Aug 22 01:36:00 EDT 2016,6601582,"@FelipeFerreiraMendes Have you created or got test.jpg successfully? Where it is? You can debug your code line by line and find out which line your code run into the exception."
38925430,48224418,38925430,2,0,Fri Jan 12 10:34:00 EST 2018,3998265,"<p>Try this in top of your class, <code>MyClass</code> is the name of the container class</p>		<pre><code>StorageFolder testFolder;	public MyClass()	{	    var removableDevices = KnownFolders.RemovableDevices; 	    var externalDrives = await removableDevices.GetFoldersAsync(); 	    var drive0 = externalDrives[0];	    testFolder = await drive0.CreateFolderAsync("test");	    await testFolder.CreateFileAsync("test.jpg");	}	</code></pre>		<p>And, in your <code>WriteData</code> method, you say only</p>		<pre><code>var testFile = await testFolder.GetFolderAsync("test.jpg");	</code></pre>		<p><strong>Observations</strong></p>		<ul>	<li><code>WriteData</code> get slower at <code>removableDevices.GetFoldersAsync()</code></li>	<li>As you use a timer you need to keep the <code>Tick</code> event as fast and resources free as possible</li>	</ul>	"
