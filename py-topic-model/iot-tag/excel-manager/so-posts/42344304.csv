thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
42344304,42344304,null,1,3,Mon Feb 20 12:13:00 EST 2017,7394651,"<p>I've been following the example code on the Azure IOT Developers Guid pages. I have a program which allows me to send messages to my devices from the cloud.</p>		<pre><code>class CloudToDeviceMessagSender	    {	        private static ServiceClient _serviceClient;	        private static string _connectionString = Common.ConnectionStringsAndCerts.ConnectionHelperStrings.ConnectionString;		        static void Main()	        {	            Console.WriteLine("Send Cloud-to-Device message\n");	            _serviceClient = ServiceClient.CreateFromConnectionString(_connectionString, TransportType.Amqp);		            Console.WriteLine("Enter message to send:");	            var message = Console.ReadLine();	            SendCloudToDeviceMessageAsync(message).Wait();	            Console.ReadLine();	        }		        private static async Task SendCloudToDeviceMessageAsync(string message)	        {	            var commandMessage = new Message(Encoding.ASCII.GetBytes(message));	            await _serviceClient.SendAsync("myDeviceId", commandMessage);	        }	    }	</code></pre>		<p>When I register a device I register it with an X509 certificate.</p>		<p>This seems to work fine as:</p>		<p><a href="https://i.stack.imgur.com/7cFnx.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/7cFnx.png" alt="x509 certs work"></a></p>		<p>My device reads the message it gets sent from the CloudToDeviceMessagSender.</p>		<pre><code>public static async void ReceiveCloudToDeviceAsync()	        {	            Console.WriteLine("\nReceiving cloud to device messages from service");	            while (true)	            {	                var receivedMessage = await _deviceClient.ReceiveAsync();	                if (receivedMessage == null) continue;		                Console.ForegroundColor = ConsoleColor.Yellow;	                Console.WriteLine("Received message: {0}", Encoding.ASCII.GetString(receivedMessage.GetBytes()));	                Console.ResetColor();		                await _deviceClient.CompleteAsync(receivedMessage);	            }	        }	</code></pre>		<p>My question is, how do I make it only accept messages that were sent with a valid x509 certificate that it was registered with?</p>		<p>A further question, if I'm to use x509 certificates to secure communication between devices and cloud, do I need 1 certificate per device or is it 1 cert that all devices use?</p>	"
42344304,71841619,42344304,3,1,Mon Feb 20 12:58:00 EST 2017,2265446,"On your first question, dunno. Have you tried to add a device with a valid cert, revoking the cert, and checking if the device still recives messages? On your second question, it depends on how you want to manage the devices/certs. One single cert for the whole app vs. one cert for customer using your app (in case it will be paid)"
