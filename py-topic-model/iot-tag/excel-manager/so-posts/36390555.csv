thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
36390555,36390555,null,1,0,Sun Apr 03 20:08:00 EDT 2016,3016483,"<p>I'm running Windows 10 IoT on Raspberry pi 3 and I have like 10 Arduino based BLE devices with which I need to communicate with. </p>		<p>I need my program to iterate through all the 10 BLE devices, send a command and receive a response. </p>		<p>I have done it on Android, but I'm don't know how to do it on Windows 10. Any help would be great.</p>		<p>Thank you</p>	"
36390555,36514169,36390555,2,2,Sat Apr 09 07:48:00 EDT 2016,2953161,"<p>Not fully sure if you are wanting to plug 10 Arduinos into a Raspberry Pi, or if you want to communicate to 10 BLE enabled Arduinos wirelessly. If it's the latter, I can help. I'm assuming you have an understanding BLE fundamentals. </p>		<p><strong>Overview:</strong> Basically you'll want to pair the bluetooth Arduinos with Win IoT, connect to each one of them, send and receive data using GATT Characteristics, then disconnect when finished.</p>		<ol>	<li>Get a HCI BLE dongle form the <a href="http://ms-iot.github.io/content/en-US/win10/SupportedInterfaces.htm#Bluetooth-Dongles" rel="nofollow">list of supported BLE dongles</a> for Win IoT.</li>	<li>You must then <a href="http://ms-iot.github.io/content/en-US/win10/samples/BLEGatt1.htm" rel="nofollow">pair each BLE Arduino to Win IoT</a>. This will allow the Pi to find the devices through your code. </li>	<li>To send data and receive responses form the wireless BLE devices, a connection must first be established.</li>	<li>I assume you'll have already programmed the Arduinos to have a Characteristic (possibly named "command"), in their GATT database with write access and another (possible named "response") with read access and notifications enabled. Characteristics are like sockets. Make sure your Arduinos have something similar to this set up.</li>	<li>In your Win IoT code, you'll have to <a href="http://ms-iot.github.io/content/en-US/win10/samples/BLEGatt2.htm" rel="nofollow">discover these GATT Characteristics</a> while connected to the Arduino. After discovery, data can be written to the "command" Characteristic.</li>	<li>Arduino can then respond by triggering the notification that data is waiting on the "response" characteristic. After the Pi has received this notification, it should then proceed to read the "response" Characteristic from the Arduino's GATT database. </li>	<li>Finally disconnect when finished and repeat on the next Arduino.</li>	</ol>	"
