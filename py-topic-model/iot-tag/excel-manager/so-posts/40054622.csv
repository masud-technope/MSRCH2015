thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40054622,40054622,null,1,0,Sat Oct 15 03:27:00 EDT 2016,5735523,"<p>I am new to c# and UWP, This is an assignment and I am on a strict deadline so haven't had time to figure things out completely, so excuse the messy code. </p>		<p>I have the below code, which works by creating an AMQP connection and receiving messages from an Azure IOT Hub in a constant while loop.</p>		<p>There are properly allot of problems with it but the main one is that when I return from visiting another page the GUI stops updating the text fields.</p>		<p>Actually it does update them from OnNavigatedTo but the method Receive Messages stops updating them, however in the output window I can can see that debug.write is receiving the message, just not updating the text field.  </p>		<p>I think I need to run the while loop on a separate thread and I dont think I have done that below, I have read into Task.Run etc and tried various ways but couldn't figure it out.   </p>		<pre><code>    public MainPage()	    {	        this.InitializeComponent();	        if (receivedStarted != 1)	            Receive();	    }		    private async void Receive()	    {	        await ReceiveMessages("1");	        await ReceiveMessages("0");	    }		    /// &lt;summary&gt;	    /// On Navigated to function from other pages	    /// &lt;/summary&gt;	    /// &lt;param name="e"&gt;&lt;/param&gt;	    protected override void OnNavigatedTo(NavigationEventArgs e)	    {	        Counter.Text = parsedCounter;	        TimeText.Text = "The last activity was at " + parsedTime;	        Contact_1.Content = ContactAddPopUp.contact[0, 0];	        Contact_2.Content = ContactAddPopUp.contact[1, 0];	        Contact_3.Content = ContactAddPopUp.contact[2, 0];		        if (Settings.timeChanged == true)	        {	            if (DelayTimer != null)	            {	                DelayTimer.Cancel();	                Timer();	            }	        }	    }	    /// &lt;summary&gt;	    /// Receive messages from specified azure iothub on specified partition. The MessageManager parses the received message and displays it accordingly	    /// &lt;/summary&gt;	    /// &lt;param name="partition"&gt;&lt;/param&gt;	    /// &lt;returns&gt;&lt;/returns&gt;	    public async Task ReceiveMessages(string partition)	    {         	        DateTime offset;	        offset = DateTime.UtcNow - TimeSpan.FromMinutes(1);	        String primaryKey = "fghkfwhihelfihefjw;ojwef";	        String sharedAccessPolicy = "iothubowner";	        //String hubName = "RaspberryPirSensor";	        String deviceName = "PIRSensor";	        String eventHubEntity = "iothub-ehub-raspberryp-70680-20f0331ccb";		        string port = "iakugfdkjhkjhaflhlkhalkfhse.servicebus.windows.net";	        Address address = new Address(port, 5671, sharedAccessPolicy, primaryKey, "/", "amqps");	        Connection connection = await Connection.Factory.CreateAsync(address);	        Session session = new Session(connection);	        string totalMilliseconds = ((long)(offset - new DateTime(StartOfEpoch, DateTimeKind.Utc)).TotalMilliseconds).ToString();	        Map filters = new Map();	        filters.Add(new Amqp.Types.Symbol("apache.org:selector-filter:string"),	                                    new DescribedValue(	                                        new Amqp.Types.Symbol("apache.org:selector-filter:string"),	                                        "amqp.annotation.x-opt-enqueuedtimeutc &gt; " + totalMilliseconds + ""));	        ReceiverLink receiver = new ReceiverLink(session,	            "my-receiver",	            new global::Amqp.Framing.Source()	            {	                Address =	            eventHubEntity + "/ConsumerGroups/$Default/Partitions/" + partition,	                FilterSet = filters	            }, null);		        Amqp.Types.Symbol deviceIdKey = new Amqp.Types.Symbol("iothub-connection-device-id");	        string deviceId = deviceName;	        while (true)	        {	            if (timerCreated == false)	                Timer();	            receivedStarted = 1;	            Amqp.Message m = await receiver.ReceiveAsync(10000);	            if (m != null)	            {	                var id = m.MessageAnnotations.Map[deviceIdKey].ToString();	                if (id == deviceId)	                {	                    Data data = (Data)m.BodySection;	                    string msg = System.Text.Encoding.UTF8.GetString(data.Binary, 0, data.Binary.Length);	                    bool isValid = ValidateMessage(msg);		                    if (isValid)	                    {	                        receiver.Accept(m);	                        Counter.Text = parsedCounter;	                        Debug.Write("Receiving Message " + parsedCounter );	                        TimeText.Text = "The last activity was at " + parsedTime;		                        //Connection String	                        if (connection != null)	                            ConnectedTextBox.Text = "CONNECTED";	                        else	                            ConnectedTextBox.Text = "DISCONNECTED";		                        if (DelayTimer != null)	                            DelayTimer.Cancel();	                    }	                    else	                    {	                        receiver.Release(m);	                    }	                }	            }	        }	    }	</code></pre>	"
40054622,67385961,40054622,3,0,Sat Oct 15 05:24:00 EDT 2016,6581572,"ok so you want to try to move the whole while loop block to async/await method so that it doesn't block your UI, did you try that?"
40054622,67385987,40054622,3,0,Sat Oct 15 05:27:00 EDT 2016,5735523,"Yep I did try that, but couldn't get it to work, the funny think is I can still use the other ui controls while its running and it works fine apart from when you navigate away and back to the main page again."
40054622,67386007,40054622,3,0,Sat Oct 15 05:29:00 EDT 2016,6581572,"Interesting could you also add those changes for while loop async thanks"
40054622,67386168,40054622,3,0,Sat Oct 15 05:41:00 EDT 2016,5735523,"I thought because it is already in an async await method call it would be, I just added Task.Run to the method call, but this did not work. If you could show me anouther approach it would be appreciatted. Thanks for your input."
40054622,67386241,40054622,3,0,Sat Oct 15 05:46:00 EDT 2016,6581572,"Hi I am puzzled at the moment but I would suggest to change this to 3 sec or 5 sec `Amqp.Message m = await receiver.ReceiveAsync(5000);` I will add my update once I get with something to work--Thanks"
40054622,67386349,40054622,3,0,Sat Oct 15 05:55:00 EDT 2016,5735523,"Thanks inan, unfortunately that didn't help."
40054622,67386359,40054622,3,0,Sat Oct 15 05:55:00 EDT 2016,6581572,"Ok hopefully we will find the cause"
40054622,67385824,40054622,3,0,Sat Oct 15 05:12:00 EDT 2016,6581572,"could you be little more specific please not able to follow, so does your execution break in the `ReceiveMessages` method?"
40054622,67385880,40054622,3,0,Sat Oct 15 05:18:00 EDT 2016,5735523,"Hi, no it continues find, able to use ui etc. The way it works is that the message received from IOT hub updates a text box, it is a pir sensor attached to a raspberry pi. When you navigate to anouther page ie settings, and return to the main page, the text box stops updating but the messages and code keep running. If i run a break point at the loop it runs over the TimeText.Text = fine, but it just doesn't update, yet I can still use the rest of ui."
40054622,67389879,40054622,3,0,Sat Oct 15 09:56:00 EDT 2016,5735523,"Hi Inan, any updates on this at all? would be really appreciated."
40054622,40059665,40054622,2,0,Sat Oct 15 13:35:00 EDT 2016,5735523,"<p>I actually solved this by using -	this.NavigationCacheMode = Windows.UI.Xaml.Navigation.NavigationCacheMode.Enabled;	- in the constructor of MainPage.</p>		<p>I was re-initializing the page every time I navigated to it, which I guess was causing it to loose sync with the awaited task. </p>	"
40054622,67399132,40059665,3,0,Sat Oct 15 18:20:00 EDT 2016,6581572,"Nice you were able to solve it"
40054622,67404847,40059665,3,0,Sat Oct 15 23:58:00 EDT 2016,5735523,"Thanks for you help anyway"
