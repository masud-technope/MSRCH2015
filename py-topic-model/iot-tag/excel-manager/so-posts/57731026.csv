thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
57731026,57731026,null,1,1,Fri Aug 30 17:33:00 EDT 2019,717136,"<p>I'm figuring out how to use MQTT for google cloud. I've mentioned That that there ar no concrete documentation for this I found for AT commands and Google Cloud MQTT</p>		<p>I'm using the Simcom 7600 module</p>		<p><a href="https://simcom.ee/documents/SIM7X00/SIM7500_SIM7600_SIM7800%20Series_MQTT_AT%20Command%20Manual_V1.00.pdf" rel="nofollow noreferrer">AT documentation</a></p>		<p>The documentation says it requests this:</p>		<pre><code>+CSSLCFG: "sslversion",(0-9),(0-4)	+CSSLCFG: "authmode",(0-9),(0-3)	+CSSLCFG: "ignorelocaltime",(0-9),(0,1)	+CSSLCFG: "negotiatetime",(0-9),(10-300)	+CSSLCFG: "cacert",(0-9),(5-128)	+CSSLCFG: "clientcert",(0-9),(5-128)	+CSSLCFG: "clientkey",(0-9),(5-128)	</code></pre>		<p><a href="https://cloud.google.com/iot/docs/how-tos/credentials/keys?hl=it#generating_an_es256_key" rel="nofollow noreferrer">ca certs generation Google cloud</a></p>		<p>So I generated the RSA keys:</p>		<pre><code>openssl genpkey -algorithm RSA -out rsa_private.pem -pkeyopt rsa_keygen_bits:2048	openssl rsa -in rsa_private.pem -pubout -out rsa_public.pem	#X.509 certificate for iot device in Google Cloud	openssl req -x509 -nodes -newkey rsa:2048 -keyout rsa_private.pem \	-out rsa_cert.pem -subj "/CN=unused"	</code></pre>		<p>After that I wanted to upload the certs using the following commands based on musquito settings and this python example <a href="https://github.com/tmcadam/sim7000-tools/blob/master/sim7000.py" rel="nofollow noreferrer">MQTT SIMCOM 7000 example</a> :</p>		<pre><code>MQTT_URL = "mqtt.googleapis.com"	CERTS_FOLDER = 'certs'	CA_NAME = 'rsa_cert.pem'  # cacert 'mosquitto-ca.crt'	CERT_NAME = 'rsa_private.pem'  # clientcert "mosquitto.crt"	KEY_NAME = 'client.key'  # client key "mosquitto.key"	</code></pre>		<p>I modified the example to the baud rate for my module and the correct port. I'm already using it for calling and SMS, so I know it works. </p>		<pre><code>    AT('+CFSINIT')	    with open(os.path.join(CERTS_FOLDER, CA_NAME),'rb') as f:	        data = f.read()	        AT('+CFSWFILE=3,"{}",0,{},5000'.format(CA_NAME, len(data)), success="DOWNLOAD")	        send(data)	    with open(os.path.join(CERTS_FOLDER, CERT_NAME),'rb') as f:	        data = f.read()	        AT('+CFSWFILE=3,"{}",0,{},5000'.format(CERT_NAME, len(data)), success="DOWNLOAD")	        send(data)	    with open(os.path.join(CERTS_FOLDER, KEY_NAME),'rb') as f:	        data = f.read()	        AT('+CFSWFILE=3,"{}",0,{},5000'.format(KEY_NAME, len(data)), success="DOWNLOAD")	        send(data)	    AT('+CFSTERM')	</code></pre>		<p>As an response I get: <code>ERROR</code> for all certs sadly enough. Help would be great on this part :) Thanks in advance.</p>	"
57731026,101932910,57731026,3,0,Sun Sep 01 16:30:00 EDT 2019,23118,"You might get more details than just `ERROR` by running `AT+CMEE=2`."
