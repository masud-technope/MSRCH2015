thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
32320150,32320150,null,1,3,Mon Aug 31 21:19:00 EDT 2015,1776942,"<p>I'm about to deploy a cluster of RabbitMQ nodes in AWS. I expect there would be 100k+ (possibly 1m+) clients - IoT devices - which will connect to the RabbitMQ cluster over MQTT and will stay connected 24/7/365.</p>		<p>Now the question is: how to distribute the TCP connections from clients to individual nodes comprising the RabbitMQ cluster? I see a couple of options:</p>		<ol>	<li>Use AWS Elastic Load Balancer</li>	<li>Use HAProxy on AWS EC2</li>	<li>Use DNS round-robin</li>	<li>Use DNS SRV (e.g. like in SIP service deployments)</li>	<li>Use a custom hand-written client-side load balancing algorithm, based on a list of addresses obtained from a server or hard-coded into the device</li>	</ol>		<p>Which solution from the ones listed above would you recommend given the amount of load and the expected duration each connection? Or maybe a combination of these? Or is there any other solution worth knowing? </p>		<p>EDIT: answers to the questions stated in the first comment:</p>		<ul>	<li>SSL: yes, of course</li>	<li>keepalive interval: I was thinking about 1 minute</li>	<li>Are the connection mostly idle? -> no, the devices will report various sensor data, I assume at least once in a minute</li>	<li>How many connections can your MQ cluster nodes service, each, max, and how heavily do you plan to load them? -> as mentioned earlier, 100k+ or even 1m+ connections total, no clue how many per node, I was about to conduct some tests to check that</li>	<li>How many nodes do you plan to need for this load? -> honestly, I don't know yet, I assume 10 should be enough for 100k+ connections, but it also depends on the type of EC2 machines, right?</li>	<li>Are the clients globally distributed, and is your system, or concentrated in one region? -> the system is targeted globally, but initially I only plan to cover one region; eventually I expect to cover other regions with separate RabbitMQ clusters and have the clients connect with geo- or latency- based load balancing</li>	</ul>		<p>EDIT 2: I've just found out about a potential <a href="http://oomagnitude.com/2014/05/14/aws-elastic-load-balancer-black-hole/" rel="nofollow">Black Hole problem</a> of AWS ELB with long-lived TCP connections. I haven't checked if AWS ELB still behaves this way, but it could be a show-stopper for my use case. Does anyone have any experience with this or similar issues?</p>	"
32320150,52516874,32320150,3,1,Mon Aug 31 22:30:00 EDT 2015,1695906,"Not quite enough info here to determine whether any of these options are off the table.  Are you using SSL?  (Acceptable answers include "Yes, of course.") What will your keepalive interval be?  Are the connections mostly idle?  How many connections can your MQ cluster nodes service, each, max, and how heavily do you plan to load them? How many nodes do you plan to need for this load?  Are the clients globally distributed, and is your system, or concentrated in one region?"
