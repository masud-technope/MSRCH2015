thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
25778989,25778989,null,1,2,Thu Sep 11 04:16:00 EDT 2014,914376,"<p>How can I connect to a REST Service using the Intel Galileo board?</p>		<p>I need the solution to be autonomous of a PC client.</p>		<p>As long there is Internet Access through Ethernet or Wi-Fi the code would execute</p>	"
25778989,25856665,25778989,2,0,Mon Sep 15 20:49:00 EDT 2014,1079716,"<p>you can access the REST service using <a href="https://github.com/amcewen/HttpClient" rel="nofollow">Arduino HTTP client</a> . </p>		<p>Another option is to install nodejs on Galileo board, and use nodejs based REST or HTTP client libraries.</p>		<p>To install nodejs, just <a href="http://nodejs.org/download/" rel="nofollow">download the windows x32 binary directly</a> no formal installation required. Also <a href="http://nodejs.org/dist/npm/" rel="nofollow">download the latest <code>npm.zip</code></a> and extract in the same folder that has <code>node.exe</code>. </p>		<p>Now you are all set to use the <a href="https://github.com/danwrong/restler" rel="nofollow"><code>restler</code> REST client library</a>...just install with <code>npm install restler</code></p>		<p>There is an example at the end of the restler page, copy-paste into a rest_test.js and run <code>node rest_test.js</code> you should have a simple REST client on Galileo working!</p>	"
25778989,40464445,25856665,3,0,Tue Sep 16 02:20:00 EDT 2014,914376,"I just started with Arduino and i got involved because of Microsoft. The documentation at the moment is lacking so i can not find-understand how to run a node.js script on the board. Where do i deploy it?"
25778989,40464657,25856665,3,0,Tue Sep 16 02:35:00 EDT 2014,1079716,"recent galileo updates may already have nodejs installed. Can you run "node -v" on command line, does it show the version information. If it works, [install this nodejs REST client library and try out the example](https://github.com/danwrong/restler)."
25778989,40465210,25856665,3,0,Tue Sep 16 03:22:00 EDT 2014,914376,"Unfortunately it is not installed.I tried to install it silently but this version of Windows does not have msiexec so an quiet msi install fails and the binary of node js fails to run."
25778989,40465494,25856665,3,0,Tue Sep 16 03:48:00 EDT 2014,1079716,"Looks like [visual studio supports arduino programming for galileo](https://ms-iot.github.io/content/HelloBlinky.htm). If you are comfortable with c/++ i would try the [Arduino HTTP client](https://github.com/amcewen/HttpClient). There is an example in it which you can test out. I am not sure if VS supports importing library, just try adding those HTTP client source files to your project directly."
25778989,41082301,25856665,3,0,Sun Oct 05 02:04:00 EDT 2014,1079716,"please see my update on nodejs installation"
25778989,41081431,25856665,3,0,Sun Oct 05 00:15:00 EDT 2014,654614,"The [Sample/Walkthrough](http://ms-iot.github.io/content/SampleApps.htm) for [Firmata and Cylon](http://ms-iot.github.io/content/Firmata.htm) implies that Node.js can be installed - but doesn't explain how."
25778989,26246134,25778989,2,2,Tue Oct 07 22:11:00 EDT 2014,4118992,"<p>If you aren't already leaning towards a Node project, the most straightforward solution would be to use Win32 APIs.  </p>		<p>The <a href="https://github.com/ms-iot/content/blob/develop/SampleApps.md" rel="nofollow">ms-iot Sample Apps page on GitHub</a> was recently updated with a reference to a <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms737889(v=vs.85).aspx" rel="nofollow">WinSock sample on MSDN</a>.  I made a few changes to the WinSock client sample code to post data to Cosm (now Xively), which uses a REST API.  </p>		<p>The relevant changes to the Winsock client code are:</p>		<pre><code>// replace nnnnn with your Feed ID, and xxxxxxxxxxx with your API key!	char *sendbuf = "PUT /v2/feeds/nnnnn.csv HTTP/1.1\r\nHost: api.cosm.com\r\nX-ApiKey: xxxxxxxxx\r\nUser-Agent: WinGalileo\r\nContent-Length: 18\r\nContent-Type: text/csv\r\nConnection: close\r\n\r\n";	char *databuf = "GalileoTest,123.45\r\n";	. . .	iResult = getaddrinfo("www.cosm.com", 80, &amp;hints, &amp;result);	. . .	// Send the HTML	iResult = send(ConnectSocket, sendbuf, (int)strlen(sendbuf), 0);	. . .	// send the data	iResult = send(ConnectSocket, databuf, (int)strlen(databuf), 0);	</code></pre>		<p>Arduino libraries have been added to the ms-iot Galileo SDK over the last couple of months, so I suspect that efforts are underway to port the WebClient and Ethernet libraries.  Keep an eye on the GitHub page.</p>	"
25778989,27939127,25778989,2,1,Wed Jan 14 09:04:00 EST 2015,1171307,"<p>There is a C++ SDK available that enables calling REST services. It is C++ REST SDK (code name Casablanca). Itâ€™s a library from Microsoft published as an open source project on CodePlex. 	Currently only version 2.2. can be used on Galileo. Instructions how to use it are here: <a href="http://ms-iot.github.io/content/Casablanca.htm" rel="nofollow">http://ms-iot.github.io/content/Casablanca.htm</a></p>		<p>If you want to access Azure with REST using Casablanca, there is a library on GitHub: Azure Storage Client Library for C++. It allows you to build applications against Microsoft Azure Storage. </p>		<p>But, if you want to use it on Galileo, you will have some problems. If you want to know how to avoid/workaround problems, you can find the whole instruction on my blog	<a href="http://kardum.net/iot/intel-galileo-windows-application-azure-storage/" rel="nofollow">http://kardum.net/iot/intel-galileo-windows-application-azure-storage/</a></p>		<p>I hope this will help you.	Best Regards,	Ivan</p>	"
