thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41565874,41565874,null,1,0,Tue Jan 10 09:52:00 EST 2017,2690165,"<p><br>	I am using a RaspberryPi with Ubuntu Mate and I am trying to run samples from <a href="https://github.com/Azure/azure-iot-sdk-python" rel="nofollow noreferrer">Iot Hub Client</a>. I builded the library for Ubuntu doumented <a href="https://github.com/Azure/azure-iot-sdk-python/blob/master/doc/python-devbox-setup.md" rel="nofollow noreferrer">here</a>. I also builded the Windows version just for test and it worked fine with the exact code. The error I get on Unix, when using IoTHubClient.send_event_async is:</p>		<pre><code>Python 2.7.12 (default, Nov 19 2016, 06:48:10)	[GCC 5.4.0 20160609]	IoT Hub for Python SDK Version: 1.0.17	Starting the IoT Hub Python sample...	    Protocol MQTT	    Connection string=HostName=&lt;hub name&gt;.azure-devices.net;DeviceId=BananaPi_rasp;SharedAccessKey=&lt;access kwy&gt;	Info: IoT Hub SDK for C, version 1.0.17	IoTHubClient sending 2 messages	IoTHubClient.send_event_async accepted message [0] for transmission to IoT Hub.	Error: Time:Tue Jan 10 02:21:25 2017 File:/home/pi/azure-iot-sdks/c/iothub_client/src/iothubtransport_mqtt_common.c Func:mqtt_operation_complete_callback Line:951 Connection Not Accepted: 0x5: Not Authorized	Error: Time:Tue Jan 10 02:21:25 2017 File:/home/pi/azure-iot-sdks/c/c-utility/src/tlsio_openssl.c Func:decode_ssl_received_bytes Line:654 SSL channel closed in decode_ssl_received_bytes.	Error: Time:Tue Jan 10 02:21:25 2017 File:/home/pi/azure-iot-sdks/c/c-utility/src/tlsio_openssl.c Func:on_underlying_io_bytes_received Line:709 Error in decode_ssl_received_bytes.	</code></pre>		<p>I have tried to fix it by setting the system time and checking out the certificate specifications:	I tried to "ping" the server to see if I can connect to it with:</p>		<blockquote>	  <p>openssl s_client -connect .azure-devices.net:8883</p>	</blockquote>		<p>I get:</p>		<pre><code>CONNECTED(00000003)	depth=2 C = IE, O = Baltimore, OU = CyberTrust, CN = Baltimore CyberTrust Root	......	Server certificate	-----BEGIN CERTIFICATE-----	MIIGcjCCBFqgAwIBAgITWgABtrN..........&lt;etire certificate&gt;...	......	SSL handshake has read 3677 bytes and written 531 bytes	---	New, TLSv1/SSLv3, Cipher is ECDHE-RSA-AES256-SHA384	Server public key is 2048 bit	.....	Protocol  : TLSv1.2	Cipher    : ECDHE-RSA-AES256-SHA384	Session-ID: B0010000E7F6C6ADDC09A37DC7C618C4F4522528E20C8AD6E08DCB5B302101D2	Session-ID-ctx:	Start Time: 1483986649	Timeout   : 300 (sec)	Verify return code: 0 (ok)	---	read:errno=0	</code></pre>		<p>From I can understand all looks good.</p>		<p>I tried also to check the certificate validity:</p>		<blockquote>	  <p>openssl x509 -in /usr/lib/ssl/certs/Baltimore_CyberTrust_Root.pem</p>	</blockquote>		<p>I get:</p>		<pre><code>  ........	  Validity	            Not Before: May 12 18:46:00 2000 GMT	            Not After : May 12 23:59:00 2025 GMT	    ......	</code></pre>		<p>So it seems OK,	Everything looks fine here but still I get that error.	Does anybody has any idea what might be wrong?<br>	Thanks</p>	"
41565874,41754293,41565874,2,0,Fri Jan 20 00:48:00 EST 2017,7443857,"<p>I have some experience on this which may help you.</p>		<p>First, make sure system time is correct on your RaspberryPi.</p>		<p>Then print your device password to see if se field is correct:	in umqtt/src/mqtt_codec.c constructConnPayload()	mqttOptions->password is look like this:	SharedAccessSignature sr=IoT-xxxx.azure-devices.net/devices/xxxx&amp;sig=xxxxxxxxxxx&amp;se=1484812561&amp;skn=</p>		<p>If your see se=3600 or not equal to (current UTC time +3600), then your situation is the same as mine.</p>		<p>How to fix it:	in iothub_client/src/iothubtransport_mqtt_common.c SendMqttConnectMsg()	case DEVICE_KEY:	modify size_t secSinceEpoch = (size_t)(difftime(get_time(NULL), EPOCH_TIME_T_VALUE) + 0);	to size_t secSinceEpoch = (size_t)(time(NULL));</p>		<p>EPOCH_TIME_T_VALUE is 0 on my system, so (difftime(get_time(NULL), EPOCH_TIME_T_VALUE) + 0) should be equal to get_time(NULL).	But difftime seems not working on my system so secSinceEpoch is always 0.	Finally I just use time(NULL) for it.</p>		<p>I spent days for this solution. Hope it can help you.</p>	"
