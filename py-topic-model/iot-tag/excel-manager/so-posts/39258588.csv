thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
39258588,39258588,null,1,4,Wed Aug 31 20:37:00 EDT 2016,4735177,"<p>In some of the <a href="https://azure.microsoft.com/en-us/documentation/articles/iot-hub-devguide/" rel="nofollow">Microsoft documentation</a> for working with Azure IoT hubs, it mentions that it is possible to multiplex the communication of multiple devices under a single TLS connection (using the AMQP protocol) for scenarios where multiple simple devices talk to a local hub device that is powerful enough to communicate with the IoT Hub. Are there any examples of how one would implement this multiplexing? The <a href="https://www.nuget.org/packages/Microsoft.Azure.Devices.Client/" rel="nofollow">DeviceClient library</a> does not appear to support this (although I could be wrong). There have also been mentions of the IoT Gateway SDK for this scenario, but I haven't found a clear example of how to set multiplexing up using that either. Any advice or references to other material would be appreciated.</p>	"
39258588,39265150,39258588,2,1,Thu Sep 01 07:22:00 EDT 2016,6386258,"<p>I think the Azure IoT Gateway is still in Beta which might explain an absence of examples.</p>		<p>Here's a couple of pages that offer a little more insight:</p>		<p><strong>Introducing the Azure IoT Gateway SDK</strong>	(posted April 2016)</p>		<p><a href="https://azure.microsoft.com/en-gb/blog/introducing-the-azure-iot-gateway-sdk-beta/" rel="nofollow">https://azure.microsoft.com/en-gb/blog/introducing-the-azure-iot-gateway-sdk-beta/</a></p>		<p><strong>Supporting additional protocols for IoT Hub</strong>	(Updated August 2016)</p>		<p><a href="https://azure.microsoft.com/en-gb/documentation/articles/iot-hub-protocol-gateway/" rel="nofollow">https://azure.microsoft.com/en-gb/documentation/articles/iot-hub-protocol-gateway/</a></p>		<p>Finally the actual beta SDK on GitHub, but assume you already have this:</p>		<p><a href="https://github.com/Azure/azure-iot-gateway-sdk" rel="nofollow">https://github.com/Azure/azure-iot-gateway-sdk</a></p>		<p>I'd be interested to know the output of this. Most architecture I've encountered so far just has the devices talking to the hub directly so not had a requirement for the gateway <em>yet</em>.</p>	"
39258588,39265777,39258588,2,2,Thu Sep 01 07:54:00 EDT 2016,6659347,"<p>I've recently built such an architecture, maybe it will help you as a reference.	Our players:</p>		<ul>	<li><strong>Field Gateway</strong> - A local hub that is strong enough to handle communication to the IoT Hub and receive data from edge sensors.</li>	<li><strong>Edge Sensors</strong> - devices that are unable to connect directly to the IoT Hub but implement some communication protocol that enable them to	connect to the field gateway(Zwave, Zigbee...).</li>	<li><strong>IoT Hub</strong> - Handles the D2C and C2D between the Field Gateway and the Hub.</li>	<li><strong>Back end server</strong> - Receives the data from the IoT Hub.</li>	</ul>		<p>The Edge Sensor sends their telemetry to the Field Gateway. The Field Gateway maintains a connection to the IoT Hub and the only device that the IoT Hub knows is the Field Gateway.</p>		<p>Each telemetry that is being received in the Field Gateway from the Edge Sensors contains a unique id in the message payload.</p>		<p>When the message is being received in the IoT Hub, The IoT Hub knows only about the Field Gateway. But when the message is being processed by the Back End it takes the unique id from the payload and therefore knows which is the correct device that sent the telemetry.</p>		<p>So we have multiple devices that are all "riding" on one connection.</p>		<p>Hope it will help.</p>	"
39258588,65923273,39265777,3,0,Fri Sep 02 14:26:00 EDT 2016,4735177,"That's a very interesting approach. Seems like a reasonable solution."
39258588,39269918,39258588,2,1,Thu Sep 01 11:07:00 EDT 2016,50911,"<p>You may find this walkthrough useful: <a href="https://azure.microsoft.com/documentation/articles/iot-hub-linux-gateway-sdk-simulated-device/" rel="nofollow">https://azure.microsoft.com/documentation/articles/iot-hub-linux-gateway-sdk-simulated-device/</a></p>		<p>It uses simulated devices to show how you can connect multiple devices through a gateway built using the Gateway SDK.</p>	"
39258588,40227905,39258588,2,4,Mon Oct 24 21:32:00 EDT 2016,5560198,"<p>The C# <a href="https://www.nuget.org/packages/Microsoft.Azure.Devices.Client/" rel="nofollow">DeviceClient</a> does support multiplexing multiple devices using a single Amqp/TLS Connection. Here is a sample that connects three devices to IotHub using a single Amqp Connection:</p>		<pre><code>             var devices = new Device[3];	             for(int i = 0; i &lt; 3; i++)	             {	                devices[i] = new Device();	                devices[i].Id = Guid.NewGuid().ToString();	                devices[i] = await registryManager.RegisterDeviceAsync(device);	             }		             var deviceClients = new DeviceClient[3];	             for(int i = 0; i &lt; 3; i++)	             {                          	                var auth = new DeviceAuthenticationWithRegistrySymmetricKey(devices[i].Id, devices[i].Authentication.SymmetricKey.PrimaryKey);	                var deviceClients[i] = DeviceClient.Create(	                    &lt;IotHubHostName&gt;,	                    auth,	                    new ITransportSettings[]	                    {	                        new AmqpTransportSettings(Client.TransportType.Amqp_Tcp_Only)	                        {	                            AmqpConnectionPoolSettings = new AmqpConnectionPoolSettings()	                            {	                                Pooling = true,	                                MaxPoolSize = 1	                            }	                        }	                    });	                 await deviceClients[i].OpenAsync()	              }	</code></pre>	"
