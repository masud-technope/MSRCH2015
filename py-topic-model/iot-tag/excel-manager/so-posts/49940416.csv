thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
49940416,49940416,null,1,1,Fri Apr 20 11:15:00 EDT 2018,7126354,"<p>I have recently started developing UWP projects and have been trying to establish a connection with a <em>'Minew S1'</em> BLE device, which, according to its documentation, has three primary services running.</p>		<p>The documentation does not point out such a way, but I have found a possibility to read the device data (frameType, productModel, batteryLevel, temperature, humidity, MAC address) during the BLE scan, because the device responds (?) to these scans with an undocumented service (UUID: 0000ffe1-0000-1000-8000-00805f9b34fb) and a corresponding serviceData string.</p>		<p>I have created a simple BluetoothLEAdvertisementWatcher object and subscribed to its Received events. This way I get only one serviceData string from this object during runtime. The code snippet is below:</p>		<pre><code>BluetoothLEAdvertisementWatcher bleWatcher;	bleWatcher = new BluetoothLEAdvertisementWatcher();	bleWatcher.ScanningMode = BluetoothLEScanningMode.Active;	bleWatcher.Received += BleWatcher_Received;	bleWatcher.Stopped += BleWatcher_Stopped;	bleWatcher.Start();		private void BleWatcher_Received(BluetoothLEAdvertisementWatcher sender, BluetoothLEAdvertisementReceivedEventArgs args)	    {	        DataReader dataReader;	        foreach (var item in args.Advertisement.ServiceUuids)	        {	            if (item == new Guid("0000ffe1-0000-1000-8000-00805f9b34fb"))	            {	                foreach (var data in args.Advertisement.DataSections)	                {	                    dataReader = DataReader.FromBuffer(data.Data);		                    byte[] bytes = new byte[data.Data.Length];	                    dataReader.ReadBytes(bytes);	                    if (BitConverter.ToString(bytes).Length &gt; 5)	                    {	                        S1Sensor s1 = new 1Sensor(BitConverter.ToString(bytes));	                        Debug.WriteLine("New S1 Sensor advertisement received:");	                        Debug.WriteLine("Timestamp: " + DateTime.Now + ", Battery level: " + s1.BatteryLevel + "%, Temperature: " + 	                            s1.Temperature + "Â°C, " + "Humidity: " + s1.Humidity + "%, MAC Address: " + s1.MAC_Address + "==");	                    }	                 }	             }	         }	     }	</code></pre>		<p><strong>Problem 1:</strong> The above code successfully prints the required data using the S1Sensor helper class method that I wrote. The only problem is that the device's advertising interval, by default, is set to 1000 ms, but I only receive this string once (rarely twice) during application run. Is there a way to receive and process these serviceData more frequently? (preferrably every 1000 ms)</p>		<p><strong>Problem 2:</strong>	My other problem is that this code only returns values when the device is paired to my computer. I think I should be able to scan for devices without connecting and see their response (serviceData) even when the device is not paired to the computer.	Is there a way to query the serviceData string even when the computer that is running this application not paired to the device?</p>		<p>Thank you for your time.</p>	"
49940416,49974153,49940416,2,2,Mon Apr 23 05:48:00 EDT 2018,6601582,"<blockquote>	  <p>Problem 1: Is there a way to receive and process these serviceData	  more frequently? (preferrably every 1000 ms)</p>	</blockquote>		<p>If the device is in connection state instead of advertising state, it will not advertise and can cause you can't receive serviceData anymore. You need to disconnect your device in order to put it back in advertising state. You can check this <a href="https://stackoverflow.com/questions/47702584/bluetooth-le-device-cannot-disconnect-in-win-10-iot-uwp-application">thread</a>.</p>		<blockquote>	  <p>Problem 2: Is there a way to query the serviceData string even when	  the computer that is running this application not paired to the	  device?</p>	</blockquote>		<p><a href="https://blogs.windows.com/buildingapps/2017/01/13/new-bluetooth-features-in-creators-update-gatt-server-bluetooth-le/" rel="nofollow noreferrer">From Windows 10 Creators Update</a>, this can be achieved by using <code>BluetoothLEDevice.GetGattServicesAsync()</code>, <code>GattDeviceService.GetCharacteristicsAsync()</code> as well as <code>GattCharacteristic.GetDescriptorsAsync()</code> to query a remote device without pairing.</p>		<p>I test UWP Bluetooth Low Energy sample with TI SensorTag BLE device. Without pairing I can read device data like this:</p>		<p><a href="https://i.stack.imgur.com/48wzN.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/48wzN.png" alt="enter image description here"></a></p>	"
49940416,87009977,49974153,3,0,Tue Apr 24 08:26:00 EDT 2018,7126354,"Thank you Rita. Disconnecting the device really helped. I have initiated a database to register these incoming advertisements and have found out that, for some reason, the device randomly stopped advertising once for 3 minutes and once for 18 minutes, but because the application is registering the advertisements 10 seconds on average, I think this is a device problem."
