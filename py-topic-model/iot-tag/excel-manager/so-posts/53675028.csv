thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53675028,53675028,null,1,2,Fri Dec 07 18:26:00 EST 2018,5200512,"<p>When we are connecting to AWS IoT using wss protocol on ios version 12.1.1, we were able to connect to IoT successfully, but immediately we could see onError event being triggered from IoT and then the connection gets closed. It tries to reconnect again but without any luck. The error we are getting from IoT is "{IsTrusted : true}". 	We are not using any certificates, just using a profile access key and secret key.</p>		<p>The same build is able to connect properly on ios 12.0.1, 12.1</p>		<p>IOS version:12.1.1(Not working version)</p>		<p>AWS IOT SDK:2.0.0</p>	"
53675028,94213701,53675028,3,0,Fri Dec 07 23:04:00 EST 2018,2949616,"This is not even a question. You're not going to get any help unless you structure your post as a question. Describe what you expect, what's happening, and what you've tried. I too am experiencing AWS IoT connectivity trouble with iOS 12.1.1. I am assuming it's related to Apple's new Certificate Transparency Policy enacted in 12.1.1: https://developer.apple.com/documentation/ios_release_notes/ios_12_1_1_release_notes"
53675028,94273724,53675028,3,0,Mon Dec 10 16:21:00 EST 2018,2949616,"Thus far I am unsuccessful. I have unsucessfully tried using XCode App Transport Security Settings and adding exceptions for my domains and aws domains. I even tried "Allow Arbitrary Loads" just to test it...no dice. I see the following logged while attempting connection:		TCP Conn 0x28395f780 event 1. err: 0	TCP Conn 0x28395f780 complete. fd: 26, err: 0	TCP Conn 0x28395f780 starting SSL negotiation	Trust evaluate failure: [leaf SystemTrustedCTRequired]	CFNetwork SSLHandshake failed (-9807)	TCP Conn 0x28395f780 SSLHandshake failed (-9807)"
53675028,94273751,53675028,3,0,Mon Dec 10 16:22:00 EST 2018,2949616,"I will gladly report back here if I find anything new @kalyan"
53675028,94228244,53675028,3,0,Sat Dec 08 18:55:00 EST 2018,5200512,"@darkmatter I have edited the Description. Do you have any solution for the Current Problem?"
53675028,94346988,53675028,3,0,Wed Dec 12 16:23:00 EST 2018,2949616,"If the provided answer solved your issue. Please accept it as the correct answer. If it didn't, please comment on the answer with any additional questions or observations. Thank you."
53675028,53713500,53675028,2,6,Mon Dec 10 20:54:00 EST 2018,2949616,"<p>iOS 12.1.1 introduced Apple's new Certificate Transparency policy. From Apple's release notes:</p>		<blockquote>	  <p>iOS 12.1.1 requires that publicly-trusted Transport Layer Security (TLS) server authentication certificates issued after October 15, 2018 meet the Certificate Transparency policy to be evaluated as trusted on Apple platforms.</p>	</blockquote>		<p>This policy is becoming a widespread standard which Google already enforces in its Chrome browser. Amazon knew this was coming and, in response to these new policies, released updates to their MQTT backend (AWS IoT) to include appropriate certification on a new endpoint. See <a href="https://aws.amazon.com/blogs/iot/aws-iot-core-ats-endpoints/" rel="noreferrer">https://aws.amazon.com/blogs/iot/aws-iot-core-ats-endpoints/</a>:</p>		<blockquote>	  <p>You must explicitly request an Amazon Trust Services endpoint for each region in your account. Any existing customer endpoint you have is most likely a VeriSign endpoint. If your endpoint has â€œ-atsâ€? at the end of the first subdomain, then it is an Amazon Trust Services endpoint. For example, â€˜asdfasdf-ats.iot.us-east-2.amazonaws.comâ€™ is an ATS endpoint.</p>	</blockquote>		<p>In short, for my iOS App, we were using our AWS provided MQTT endpoint <code>asdfasdf.iot.us-east-2.amazonaws.com</code> (just an example), without the <code>-ats</code>. I updated the endpoint to <code>asdfasdf-ats.iot.us-east-2.amazonaws.com</code> and we were able to accomplish our SSL handshake.</p>		<p>I hope this helps with your issue! Good Luck!</p>	"
53675028,94761232,53713500,3,0,Fri Dec 28 16:59:00 EST 2018,3762105,"In my case, there's something different. It seems AWS had already changed my endpoint from prefix.iot.xxx to prefix-ats.iot.xxx."
53675028,94856981,53713500,3,0,Wed Jan 02 16:50:00 EST 2019,2949616,"Hi troy, indeed AWS automatically provided the `-ats` endpoint for all MQTT endpoints. Ensure your client is pointed at the correct endpoint that includes `-ats`. This answer is specific to iOS 12.1 working and iOS 12.1.1 not working (per OPs question). If this is not the case for your client application, then your problem is different."
