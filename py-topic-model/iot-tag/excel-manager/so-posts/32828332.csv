thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
32828332,32828332,null,1,0,Mon Sep 28 17:09:00 EDT 2015,1073912,"<p>I want to set the Date and Time of a remote device (<em>Raspberry Pi 2 running Windows IoT</em>) to the value of the Date Time of a local device.</p>		<p>I create a variable $dateTime to hold the local DateTime.	I assign a password to connect to  a remote device to a variable $password.	I create a credential object.	I connect to the remote device using Enter-PSSession.	Now that I'm connected I try assigning the remote devices DateTime using Set-Date = $dateTime | Out-String.</p>		<p>I get <em>cannot convertvalue "=" to type "System.TimeSpan"</em> error.</p>		<pre><code>$dateTime = Get-Date	$password = ConvertTo-SecureString "mypassword" -AsPlainText -Force	$cred = New-Object System.Management.Automation.PSCredential ("myremotedevice     \Administrator",$password)	Enter-PSSession -ComputerName myremotedevice -Credential $cred	Set-Date = $dateTime | Out-String	</code></pre>		<p>It seems as if the $dateTime variable is out of scope once I am connected via the PSSession.  Is there a way around this ?</p>	"
32828332,32828593,32828332,2,1,Mon Sep 28 17:26:00 EDT 2015,696808,"<p>I wouldn't use Enter-PSSession for this at all, since that's for interactive sessions.</p>		<p>I'd use this:</p>		<pre><code>$dateTime = Get-Date;	$password = ConvertTo-SecureString "mypassword" -AsPlainText -Force;	$cred = New-Object System.Management.Automation.PSCredential ("myremotedevice     \Administrator",$password);	Invoke-Command -ComputerName myremotedevice -Credential $cred -ScriptBlock {	    Set-Date -Date $using:datetime;	}	</code></pre>		<p>Or, if I had multiple things to execute:</p>		<pre><code>$dateTime = Get-Date;	$password = ConvertTo-SecureString "mypassword" -AsPlainText -Force;	$cred = New-Object System.Management.Automation.PSCredential ("myremotedevice     \Administrator",$password);	$session = New-PsSession -ComputerName -Credential $cred;	Invoke-Command -Session $session -ScriptBlock {	    Set-Date -Date $using:datetime;	}	Invoke-Command -Session $session -ScriptBlock { [...] }	.	.	Disconnect-PsSession -Session $session;	</code></pre>		<p><a href="http://www.powershellmagazine.com/2013/01/23/pstip-passing-local-variables-to-a-remote-session-in-powershell-3-0/" rel="nofollow">Passing local variables to a remote session</a> usually requires the <code>using</code> namespace.</p>	"
32828332,53492846,32828593,3,0,Mon Sep 28 17:27:00 EDT 2015,1073912,"I will give it a try and report back.  Thanks Bacon Bits,"
