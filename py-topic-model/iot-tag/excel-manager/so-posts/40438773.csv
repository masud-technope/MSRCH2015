thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40438773,40438773,null,1,1,Sat Nov 05 13:27:00 EDT 2016,5710094,"<p>My sensor data consists of temperature and humidity. I can already console those datas temp and humid, to a single graph using simple example provided by pubnub. Now I decide to separate the temp and humid into 2 different graph, the temperature graph on top and humidity graph on bottom so that it can be viewed better and clearer due to resolution. How can I implement this using the eon sdk?	The formatted json data sent is,</p>		<pre><code>"eon":{"tpr":%.1f,"hum":%.1f}	</code></pre>		<p>Here's the code i'm following,</p>		<pre class="lang-js prettyprint-override"><code>&lt;body&gt;	    &lt;h1&gt;Getting Started with EON&lt;/h1&gt;	    &lt;p&gt;Create real-time charts and maps.&lt;/p&gt;	    &lt;div id="chart12"&gt;&lt;/div&gt;	    &lt;div id="chart13"&gt;&lt;/div&gt;	    &lt;script&gt;	          var pubnub = PUBNUB.init({	            publish_key:   'pub-c-3d6b4414-redacted', // replace with your own pub-key	            subscribe_key: 'sub-c-0d045036-redacted' // replace with your own sub-key	          });		          eon.chart({	            pubnub: pubnub,         	            channel: "birdpeek", // the pubnub channel for real time data	            limit:20,	            flow:true,	            generate: {           // c3 chart object	              bindto: '#chart12',	              data: {	                type: 'spline',	                labels: true	              }	            }	          });	        &lt;/script&gt;	&lt;/body&gt;	</code></pre>	"
40438773,68188144,40438773,3,1,Mon Nov 07 18:16:00 EST 2016,3753982,"You need to create two different eon charts in one page, maybe one in each div. You can probably create a [line chart](https://github.com/pubnub/eon-chart/blob/master/examples/simple.html) for the temperature, and a [gauge chart](https://github.com/pubnub/eon-chart/blob/master/examples/gauge.html) for the humidity. You are just pulling out the same data in different places(charts)"
40438773,68198626,40438773,3,0,Tue Nov 08 00:30:00 EST 2016,5710094,"How to bind to chart13 as it'd been done in chart12? Chart12 does not separate the tem and hum but it consoles both output in single graph."
40438773,40493002,40438773,2,2,Tue Nov 08 17:28:00 EST 2016,1342232,"<h1>PubNub EON Chart - Two Charts, Same Page</h1>		<p>Publishing this data: <code>{"eon":{"tpr":"%.1f","hum":"%.1f"}}</code></p>		<h2>Two Channels</h2>		<p>If publishing to two different channels, you can do it like this:</p>		<pre class="lang-js prettyprint-override"><code>&lt;div id="chart-temp"&gt;&lt;/div&gt;	&lt;div id="chart-humid"&gt;&lt;/div&gt;	&lt;script&gt;	  var pubnub = new PubNub({	    publishKey:   'your-pub-key', 	    subscribeKey: 'your-sub-key'	  });	  var charTemp = eon.chart({	    pubnub: pubnub,	    channels: ["temperature"],	    generate: {	      bindto: '#chart-temp',	      data: {	        labels: true	      }	    }	  });	  var chartHumid = eon.chart({	    pubnub: pubnub,	    channels: ["humidity"],	    generate: {	      bindto: '#chart-humid',	      data: {	        labels: true	      }	    }	  });	&lt;/script&gt;	</code></pre>		<h2>One Channel</h2>		<p>If you must publish to a single channel then each <code>eon.chart</code> will have to use the same channel and mutate the received data to only include the necessary data for that chart.</p>		<pre class="lang-js prettyprint-override"><code>&lt;div id="chart-temp"&gt;&lt;/div&gt;	&lt;div id="chart-humid"&gt;&lt;/div&gt;	&lt;script&gt;	  var pubnub = new PubNub({	    publishKey:   'your-pub-key', 	    subscribeKey: 'your-sub-key'	  });	  var charTemp = eon.chart({	    pubnub: pubnub,	    channels: ["birdpeek"],	    generate: {	      bindto: '#chart-temp',	      data: {	        labels: true	      }	    }	    transform : function(data) {	        return {eon:{'Humidity': data.eon.hum}  }	    }	  });	  var chartHumid = eon.chart({	    pubnub: pubnub,	    channels: ["birdpeek"],	    generate: {	      bindto: '#chart-humid',	      data: {	        labels: true	      }	    }	    transform : function(data) {	        return {eon:{'Humidity': data.eon.tpr}}	    }	  });	&lt;/script&gt;	</code></pre>	"
40438773,68246371,40493002,3,1,Wed Nov 09 06:53:00 EST 2016,5710094,"I appreciate your attention. Million thanks!"
40438773,68245385,40493002,3,0,Wed Nov 09 06:02:00 EST 2016,5710094,"Your transform code appears nothing in the console but i managed to grab the format idea from the sdk example transform. The correct code below."
40438773,68240807,40493002,3,0,Tue Nov 08 23:54:00 EST 2016,5710094,"From your code it retrieves the data sources (tpr n humid) from 2 different channels namely ["temperature"] and ["humidity"] but my iot device publishing the datas on a single same channel namely "birdpeek". My problem how to extract the data --> "eon":{"tpr":%.1f,"hum":%.1f} then output to 2 different id of <div>"
40438773,68241132,40493002,3,0,Wed Nov 09 00:17:00 EST 2016,1342232,"Use the same channel for both charts and mutate the result using the `transform` callback function of the `eon.chart` object. I will update my answer with proper `transform` code."
40438773,40500894,40438773,2,1,Wed Nov 09 06:02:00 EST 2016,5710094,"<pre class="lang-js prettyprint-override"><code>&lt;script&gt;	          var pubnub = PUBNUB.init({	            publish_key:   'pub-c-3d6b4414-xxx', // replace with your own pub-key	            subscribe_key: 'sub-c-0d045036-xxx' // replace with your own sub-key	          });		          eon.chart({	            pubnub: pubnub,         	            channel: "birdpeek", // the pubnub channel for real time data	            limit:20,	            flow:true,	            generate: {           // c3 chart object	              bindto: '#chart12',	              data: {	                type: 'spline',	                x: 'x',	                labels: true	              },	              axis: {	                x: {	                    type: 'timeseries',	                    tick: {	                        format: '%H:%m:%S'	                    }	                }	              }	            },	            transform : function(data) {		                return {eon:{'Humidity': data.eon.hum}  }			            }	          });		          eon.chart({	            pubnub: pubnub,         	            channel: "birdpeek", // the pubnub channel for real time data	            limit:20,	            flow:true,	            generate: {           // c3 chart object	              bindto: '#chart13',	              data: {	                type: 'spline',	                x: 'x',	                labels: true	              },	              axis: {	                x: {	                    type: 'timeseries',	                    tick: {	                        format: '%H:%m:%S'	                    }	                }	              }	            },	            transform : function(data) {		                return {eon:{'Temperature': data.eon.tpr}   }			            }	          });			    &lt;/script&gt;	</code></pre>	"
40438773,68263301,40500894,3,0,Wed Nov 09 15:36:00 EST 2016,1342232,"nice - I changed my code to match yours - but upvoting you, too."
