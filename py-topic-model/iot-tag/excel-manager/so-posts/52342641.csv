thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
52342641,52342641,null,1,0,Sat Sep 15 07:31:00 EDT 2018,10264762,"<p>I compiled an Arduino Sketch for NodeMCU v1.0 (ESP8266-12E) which have no error while i test with verifiy button in Arduino IDE 1.8.6 but i don't know what is the problem when i upload and test it . it [ NodeMCU v1.0 (ESP8266-12E) ] is not showing an static IP address while there is turned ON WiFi hotspot from my android phone.	I'm sharing two codes (code 1, code 2) here. Code 1 is modified form of code 2.</p>		<p>Code 2 connect to the WiFi Hotspot but i make changes in code 2 to make code 1 for desired output which is not working. Need help for making proper code.</p>		<p>For better understanding, what i want you can check <a href="https://www.youtube.com/watch?v=A-UUTwhI3Kw" rel="nofollow noreferrer">this video</a> on Youtube or by typing in search bar in youtube.com</p>		<p>Home automation circuit using NodeMCU v1.0 (ESP8266-12E).</p>		<pre><code>**code 1**		#include	int pin1 = 2; // GPIO 14 (D5) 	int pin2 = 3; // GPIO 5 (D1) 	int pin3 = 6; // GPIO 5 (D2)		const char* ssid = "wifi"; 	const char* password = "12345678";		WiFiServer server(80);		void setup() {		Serial.begin(115200); 	delay(10);		pinMode(2, OUTPUT); 	pinMode(3, OUTPUT);	pinMode(6, OUTPUT);		// Connect to WiFi network	 Serial.println();	Serial.println();	Serial.print("Connecting to ");	Serial.println(ssid);		WiFi.begin(ssid, password);		 while (WiFi.status() != WL_CONNECTED) {	  delay(500);	  Serial.print(".");	  }	  Serial.println("");	  Serial.println("WiFi connected");		// Start the server	  server.begin();	  Serial.println("Server started");		// Print the IP address	  Serial.print("Use this URL to connect: ");	  Serial.print("http://");	  Serial.print(WiFi.localIP());	  Serial.println("/");		}		void loop() {	  // Check if a client has connected	  WiFiClient client = server.available();	  if (!client) {	  return;	}		// Wait until the client sends some data	  Serial.println("new client");	  while(!client.available()){	  delay(1);	}	// Read the first line of the request	  String request = client.readStringUntil('\r');	  Serial.println(request);	  client.flush();	// Match the request	  int value = LOW;	  if (request.indexOf("/pin1=ON") != -1) {	  digitalWrite(2, HIGH);	  value = HIGH;		}	  if (request.indexOf("/pin1=OFF") != -1) {	  digitalWrite(2, LOW);	  value = LOW;		}		  if (request.indexOf("/pin2=ON") != -1) {	  digitalWrite(3, HIGH);	  value = HIGH;		}	  if (request.indexOf("/pin2=OFF") != -1) {	  digitalWrite(3, LOW);	  value = LOW;		}		  if (request.indexOf("/pin3=ON") != -1) {	  digitalWrite(6, HIGH);	  value = HIGH;		}	  if (request.indexOf("/pin3=OFF") != -1) {	  digitalWrite(6, LOW);	  value = LOW;		}			// Set ledPin according to the request	//digitalWrite(ledPin, value);	// Return the response	// Return the response	  client.println("HTTP/1.1 200 OK");	  client.println("Content-Type: text/html");	  client.println(""); //  do not forget this one	  client.println("&lt;!DOCTYPE HTML&gt;");	  client.println("&lt;html&gt;");	  client.println("&lt;head&gt;");	  client.println("&lt;meta name='apple-mobile-web-app-capable' content='yes' /&gt;");	  client.println("&lt;meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' /&gt;");	  client.println("&lt;/head&gt;");	  client.println("&lt;body bgcolor = \"#f7e6ec\"&gt;");	  client.println("&lt;hr/&gt;&lt;hr&gt;");	  client.println("&lt;h4&gt;&lt;center&gt;Wifi Based Project&lt;/center&gt;&lt;/h4&gt;");	  client.println("&lt;/center&gt;");	  client.println("&lt;hr/&gt;&lt;hr&gt;");	  client.println("&lt;center&gt;");	  client.println("&lt;a href=\"/a\"\"&gt;&lt;button&gt;Data &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	  client.println("&lt;/center&gt;");	  client.println("&lt;br&gt;&lt;br&gt;");	  client.println("&lt;center&gt;");	  client.println("Load 1");	  client.println("&lt;a href=\"/l1on\"\"&gt;&lt;button&gt;Turn On &lt;/button&gt;&lt;/a&gt;");	  client.println("&lt;a href=\"/l1off\"\"&gt;&lt;button&gt;Turn Off &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	  client.println("&lt;/center&gt;");	  client.println("&lt;br&gt;&lt;br&gt;");	  client.println("&lt;center&gt;");	  client.println("Load 2");	  client.println("&lt;a href=\"/l2on\"\"&gt;&lt;button&gt;Turn On &lt;/button&gt;&lt;/a&gt;");	  client.println("&lt;a href=\"/l2off\"\"&gt;&lt;button&gt;Turn Off &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	  client.println("&lt;/center&gt;");	  client.println("&lt;br&gt;&lt;br&gt;");	  client.println("&lt;center&gt;");	  client.println("Load 3");	  client.println("&lt;a href=\"/l3on\"\"&gt;&lt;button&gt;Turn On &lt;/button&gt;&lt;/a&gt;");	  client.println("&lt;a href=\"/l3off\"\"&gt;&lt;button&gt;Turn Off &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	  client.println("&lt;/center&gt;");	  client.println("&lt;br&gt;&lt;br&gt;");	  client.println("&lt;center&gt;");	  client.println("&lt;br&gt;&lt;br&gt;");	  client.println("&lt;center&gt;");	  client.println("&lt;table border=\"5\"&gt;");	  client.println("&lt;br&gt;&lt;br&gt;");	  client.println("&lt;tr&gt;");		  if(digitalRead(pin1)){client.print("&lt;td&gt;Load 1 is ON&lt;/td&gt;");}	  else{client.print("&lt;td&gt;Load 1 is OFF&lt;/td&gt;");}		  if(digitalRead(pin2)){client.print("&lt;td&gt;Load 2 is ON&lt;/td&gt;");}	  else{client.print("&lt;td&gt;Load 2 is OFF&lt;/td&gt;");}		  if(digitalRead(pin3)){client.print("&lt;td&gt;Load 3 is ON&lt;/td&gt;");}	  else{client.print("&lt;td&gt;Load 3 is OFF&lt;/td&gt;");}			  client.println("&lt;/tr&gt;");	  client.println("&lt;/table&gt;");	  client.println("&lt;/center&gt;");	  client.println("&lt;/html&gt;");	  delay(1);	  Serial.println("Client disonnected");	  Serial.println("");		}	</code></pre>		<p>if you will upload this code in your NodeMCU v1.0 (ESP8266-12E) , this will 	connect with your Android phone. You can consider it, code 2 and above code 1.</p>		<p><strong>code 2</strong></p>		<pre><code>#include &lt;ESP8266WiFi.h&gt;		int pin1 = 14; // GPIO 14 (D5)	int pin2 = 5; // GPIO 5 (D1)	int pin3 = 4; // GPIO 5 (D2)		const char* ssid = "wifi";	const char* password = "12345678";		WiFiServer server(80);		void setup()	{		Serial.begin(115200);	delay(10);		pinMode(pin1, OUTPUT);	pinMode(pin2, OUTPUT);	pinMode(pin3, OUTPUT);		// Connect to WiFi network	Serial.println();	Serial.println();	Serial.print("Connecting to ");	Serial.println(ssid);		WiFi.begin(ssid, password);		while (WiFi.status() != WL_CONNECTED) {	delay(500);	Serial.print(".");	}	Serial.println("");	Serial.println("WiFi connected");		// Start the server	server.begin();	Serial.println("Server started");		// Print the IP address	Serial.print("Use this URL to connect: ");	Serial.print("http://");	Serial.print(WiFi.localIP());	Serial.println("/");		}			void loop() {	// Check if a client has connected	WiFiClient client = server.available();	if (!client) {	return;	}		// Wait until the client sends some data	Serial.println("new client");	while(!client.available()){	delay(1);	}			// Read the first line of the request	String request = client.readStringUntil('\r');	Serial.println(request);	client.flush();					// Read the first line of the request	String request = client.readStringUntil('\r');	Serial.println(request);	client.flush();		if (request.indexOf("/l1on") &gt; 0)  {	digitalWrite(pin1, HIGH);		}	if (request.indexOf("/l1off") &gt;0)  {	digitalWrite(pin1, LOW);		}		if (request.indexOf("/l2on") &gt; 0)  {	digitalWrite(pin2, HIGH);		}	if (request.indexOf("/l2off") &gt;0)  {	digitalWrite(pin2, LOW);		}	if (request.indexOf("/l3on") &gt;0)  {	digitalWrite(pin3, HIGH);		}	if (request.indexOf("/l3off") &gt; 0)  {	digitalWrite(pin3, LOW);		}			// Set ledPin according to the request	//digitalWrite(ledPin, value);		// Return the response	client.println("HTTP/1.1 200 OK");	client.println("Content-Type: text/html");	client.println(""); //  do not forget this one	client.println("&lt;!DOCTYPE HTML&gt;");	client.println("&lt;html&gt;");	client.println("&lt;head&gt;");	client.println("&lt;meta name='apple-mobile-web-app-capable' content='yes' /&gt;");	client.println("&lt;meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' /&gt;");	client.println("&lt;/head&gt;");	client.println("&lt;body bgcolor = \"#f7e6ec\"&gt;");	client.println("&lt;hr/&gt;&lt;hr&gt;");	client.println("&lt;h4&gt;&lt;center&gt;Wifi Based Project&lt;/center&gt;&lt;/h4&gt;");	client.println("&lt;/center&gt;");	client.println("&lt;hr/&gt;&lt;hr&gt;");	client.println("&lt;center&gt;");	client.println("&lt;a href=\"/a\"\"&gt;&lt;button&gt;Data &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	client.println("&lt;/center&gt;");	client.println("&lt;br&gt;&lt;br&gt;");	client.println("&lt;center&gt;");	client.println("Load 1");	client.println("&lt;a href=\"/l1on\"\"&gt;&lt;button&gt;Turn On &lt;/button&gt;&lt;/a&gt;");	client.println("&lt;a href=\"/l1off\"\"&gt;&lt;button&gt;Turn Off &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	client.println("&lt;/center&gt;");	client.println("&lt;br&gt;&lt;br&gt;");	client.println("&lt;center&gt;");	client.println("Load 2");	client.println("&lt;a href=\"/l2on\"\"&gt;&lt;button&gt;Turn On &lt;/button&gt;&lt;/a&gt;");	client.println("&lt;a href=\"/l2off\"\"&gt;&lt;button&gt;Turn Off &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	client.println("&lt;/center&gt;");	client.println("&lt;br&gt;&lt;br&gt;");	client.println("&lt;center&gt;");	client.println("Load 3");	client.println("&lt;a href=\"/l3on\"\"&gt;&lt;button&gt;Turn On &lt;/button&gt;&lt;/a&gt;");	client.println("&lt;a href=\"/l3off\"\"&gt;&lt;button&gt;Turn Off &lt;/button&gt;&lt;/a&gt;&lt;br /&gt;");	client.println("&lt;/center&gt;");	client.println("&lt;br&gt;&lt;br&gt;");	client.println("&lt;center&gt;");	client.println("&lt;br&gt;&lt;br&gt;");	client.println("&lt;center&gt;");	client.println("&lt;table border=\"5\"&gt;");	client.println("&lt;br&gt;&lt;br&gt;");	client.println("&lt;tr&gt;");		if(digitalRead(pin1)){client.print("&lt;td&gt;Load 1 is ON&lt;/td&gt;");}	else{client.print("&lt;td&gt;Load 1 is OFF&lt;/td&gt;");}		if(digitalRead(pin2)){client.print("&lt;td&gt;Load 2 is ON&lt;/td&gt;");}	else{client.print("&lt;td&gt;Load 2 is OFF&lt;/td&gt;");}		if(digitalRead(pin3)){client.print("&lt;td&gt;Load 3 is ON&lt;/td&gt;");}	else{client.print("&lt;td&gt;Load 3 is OFF&lt;/td&gt;");}			client.println("&lt;/tr&gt;");	client.println("&lt;/table&gt;");	client.println("&lt;/center&gt;");	client.println("&lt;/html&gt;");	delay(1);	Serial.println("Client disonnected");	Serial.println("");		}	</code></pre>	"
52342641,91633009,52342641,3,0,Sat Sep 15 09:38:00 EDT 2018,7059512,"Also asked at: https://arduino.stackexchange.com/q/56093 and http://forum.arduino.cc/index.php?topic=568674 If you're going to do that then at least be considerate enough to add links to the other places you cross posted. This will let us avoid wasting time due to duplicate effort and also help others who have the same questions and find your post to discover all the relevant information."
52342641,52438289,52342641,2,0,Fri Sep 21 07:02:00 EDT 2018,3518383,"<p>You can't use io 6. IO 6 is for internal use to connect the flash memory to esp8266. IO 6 has no Dx pin on the board. And io 3 is Serial RX connected to USB. </p>		<p>Use <code>Dx</code> constants and the corresponding 'D' labeled pins of the NodeMcu. (and remove conflicting comments)</p>		<pre><code>const int pin1 = D2;	const int pin2 = D3;	const int pin3 = D6;	</code></pre>		<p>pin D3 is io 0 used to put the board into flashing mode. do not connect there something that pulls the pin LOW at reset or power-up</p>	"
