thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41718710,41718710,null,1,9,Wed Jan 18 11:51:00 EST 2017,6124487,"<p>I'm trying to build a project where i must pilot an IoT device from smartphone via wifi.</p>		<p>This device has the SPWF01 Wifi Module integrated, and is configured as an access point(that has no Internet access) with security type WEP. On this access point configuration we also have a TCP Socket Server that intercepts smartphone communications.</p>		<p>On the smartphone side, we have the part which scans and connects to our device's access point(which works, although i get the esclamation point on the wifi icon since it has no Internet access). After we've connected, we start the Client Socket which connects to the server on our IoT device(the ip address of the server socket is actually the gateway of the access point). And here is where the trouble starts, because the client socket won't start. Here is the code:</p>		<pre><code>public void SocketInit(String ip, int port) throws IOException {	    InetAddress addr = InetAddress.getByName(ip);	    SocketAddress sockaddr = new InetSocketAddress(addr, port);	    nsocket = new Socket();	    nsocket.setReuseAddress(true);       	    nsocket.setTcpNoDelay(false);	    nsocket.setReceiveBufferSize(700);   //Must be less than 730byte witch is the module buffer	    nsocket.setSendBufferSize(700);	    nsocket.connect(sockaddr, 5000);     //5 second connection timeout	}	</code></pre>		<p>And here is the exception i get:</p>		<pre><code>java.net.SocketException: socket failed: ENONET (Machine is not on the network)	</code></pre>		<p>And i get that error even before reaching nsocket.connect(), precisely on setReuseAddress. </p>		<p>Since the exception i get is ENONET, i thought that it must be because the access point has no internet access so i used the solution proposed <a href="https://stackoverflow.com/questions/37218510/android-6-0-1-force-wifi-connection-with-no-internet-access">here</a> for testing purpose:</p>		<pre><code>adb shell settings put global captive_portal_detection_enabled 0	</code></pre>		<p>This is a solution that can't be done programmatically without having root access, but i wanted to test if that was the problem. But although the exclamation mark on the wifi icon had disappeared, the client socket still gave me the same exception error.  </p>		<p>Does anybody have a solution for this behaviour? Thank you in advance!</p>		<hr>		<p>Sometimes the client socket manages to open, with a success rate of 1 out of 20 times. But when it does, i usually get another exception after a couple of messages sent:</p>		<pre><code>java.net.SocketException: recvfrom failed: ECONNRESET (Connection reset by peer)	</code></pre>		<hr>		<p>Here is the code i used to connect to the access point from the smartphone:</p>		<pre><code>    WifiConfiguration wc=new WifiConfiguration();	    wc.SSID= host;	    wc.status = WifiConfiguration.Status.ENABLED;	    wc.priority = 40;	    wc.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.NONE);	    wc.allowedProtocols.set(WifiConfiguration.Protocol.RSN);	    wc.allowedProtocols.set(WifiConfiguration.Protocol.WPA);	    wc.allowedAuthAlgorithms.set(WifiConfiguration.AuthAlgorithm.OPEN);	    wc.allowedAuthAlgorithms.set(WifiConfiguration.AuthAlgorithm.SHARED);	    wc.allowedGroupCiphers.clear();	    wc.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.CCMP);	    wc.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.TKIP);	    wc.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP40);	    wc.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP104);	    wc.wepKeys[0] = password;	    wc.wepTxKeyIndex = 0;		    int netId=mainWifi.addNetwork(wc);	    try {	        //mainWifi.setWifiEnabled(true);	        mainWifi.disconnect();	        mainWifi.enableNetwork(netId, true);	        mainWifi.reconnect();		        startConnectionCheck = true;	        System.out.println("enabled network");	    } catch (Exception e) {	        e.printStackTrace();	        System.out.println(e.getMessage());	    }	</code></pre>		<p>The access point's security type is WEP. That is because the wifi module can't implement WPA. </p>		<hr>		<p>Tests done on Marshmallow.</p>	"
41718710,70641884,41718710,3,0,Wed Jan 18 15:44:00 EST 2017,6124487,"yes, i tried with "fing" app on smartphone and was working.."
41718710,70642348,41718710,3,0,Wed Jan 18 15:56:00 EST 2017,4166517,"Try to turn off _Data Transfer_ setting on the smartphone with wifi enabled and try to connect to the device. There's a small possibility the smartphone's default gateway is set improperly."
41718710,70642784,41718710,3,0,Wed Jan 18 16:06:00 EST 2017,6124487,"@Vovanrock2002 I already tried with Mobile Data off... I forgot to mention it but when is on it gives me more trouble, because the access point doesn't have Internet so Mobile data would stay on while connected via wifi."
41718710,70641300,41718710,3,0,Wed Jan 18 15:30:00 EST 2017,4166517,"Are you able to ping the device from a PC or a smartphone?"
41718710,72375039,41718710,3,0,Mon Mar 06 10:41:00 EST 2017,1685748,"@Starivore have you found a solution yet?"
