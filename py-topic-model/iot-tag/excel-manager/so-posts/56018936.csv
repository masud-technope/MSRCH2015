thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56018936,56018936,null,1,0,Tue May 07 08:55:00 EDT 2019,1259464,"<p>I have built a prototype using a raspberry and a sim5320E module. The goal is to send a large amount of data (~100Kb) through HTTP using this 3G module.</p>		<p>I have followed the instructions specified in section 16.5 (HTTPS) of the AT Command set for the SIM5320:	<a href="http://AT%20command%20set" rel="nofollow noreferrer">https://cdn-shop.adafruit.com/datasheets/SIMCOM_SIM5320_ATC_EN_V2.02.pdf</a></p>		<p>And it worked fine, except that it is slow.</p>		<p>From what I understand from the documentation (and seen from my tests), the data to be sent must be divided in chunks of max 4096 bytes.</p>		<p>Every chunk must be sent to what is called the "sending buffer" using the command AT+CHTTPSSEND.</p>		<p>Every now and then, we must check that the sending buffer does not have too much data in cache using the AT+CHTTPSSEND? command.</p>		<p>The last AT+CHTTPSSEND command commits all sending data.</p>		<p>My problem is that every AT+CHTTPSSEND takes around 10 seconds to complete, which means that my HTTP request will take around 250 seconds to complete. </p>		<p>Anybody knows what might cause this slowness?</p>		<p>Here is some code to illustrate the issue:</p>		<pre class="lang-py prettyprint-override"><code>    def send_chunk(self, chunk):		        # Send chunk	        self._send('CHTTPSSEND={}'.format(len(chunk)), wait_for="&gt;")	        self._send_raw(chunk.encode())		        # Check how much data is left in the sending buffer	        # Wait for this data to be under 3Kb	        data_left = 3001	        while data_left &gt; 3000:	            response = self._send('CHTTPSSEND?', wait_for="+CHTTPSSEND:")	            data_left = int(response.strip().split(" ")[1])	            time.sleep(2)		</code></pre>		<p>And here are the logs I get:</p>		<pre><code>&gt;&gt; AT+CHTTPSSEND=4096     -&gt; This commands takes ~10 seconds	&lt;&lt; &gt;	&gt;&gt; Sending chunk of data	&lt;&lt; OK	&gt;&gt; AT+CHTTPSSEND?	&lt;&lt; +CHTTPSSEND: 0	</code></pre>	"
56018936,98682323,56018936,3,0,Tue May 07 09:13:00 EDT 2019,10123217,"But, does it actually send whatever you're trying to send? Or just gets stuck for 10 seconds with every AT+CHTTPSSEND?"
56018936,98683237,56018936,3,0,Tue May 07 09:40:00 EDT 2019,1259464,"Good question. On the server side, the apache logs do not show any incoming request until the last chunk is sent."
56018936,98683407,56018936,3,0,Tue May 07 09:44:00 EDT 2019,10123217,"Would you mind to post the concerning piece of code? (Or at least a minimal code example whose behaviour is the same). AT commands responses could be of help as well..."
56018936,98683812,56018936,3,0,Tue May 07 09:57:00 EDT 2019,1259464,"I just edited my question"
56018936,98697152,56018936,3,0,Tue May 07 16:16:00 EDT 2019,1259464,"I understood what was wrong. The AT response does not have any carriage return so it was waiting until the timeout which is 10 seconds. It works better now but I still find it pretty slow (~ 2  seconds). Anyway, thanks for your help, you put me on the right tracks."
56018936,98697265,56018936,3,0,Tue May 07 16:20:00 EDT 2019,10123217,"Yeah, I suspected that it had something to do with the carriage return/line feed and the timeout, that's why I wanted to take a look over the chunks of data...You're welcome :) Indeed, it still is quite slow. It could be something related to the serial speed and/or read/write timing configuration."
56018936,98685122,56018936,3,1,Tue May 07 10:35:00 EDT 2019,10123217,"What python package are you using in order to communicate with the module? pyserial? Can I see the code of _send() function? As well as the vlaue of an arbitrary 'chunk' and of the last 'chunk' of the https request that is being sent."
