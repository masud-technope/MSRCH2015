thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38415792,38415792,null,1,0,Sat Jul 16 21:26:00 EDT 2016,2620725,"<p>I try to communicate between a raspberry pi 3 running windows 10 IOT build 14376 insiders and a T-REX <a href="https://www.dropbox.com/s/qodfg7lmtlrzjhz/T%27REX%20Controller%20Instruction%20Manual.pdf?dl=0" rel="nofollow">Manual here</a> using I2C protocol. The thing is that it always crash, so after some debug process I've found that it looks like it doesn't retrieve anything from the <code>DeviceInformation.FinAllAsync(..)</code> and that cause after an <code>ArgumentOutOfRangeException</code>. It should have some thing I don't understand, maybe in the device capabilities or permissions, which Microsoft tutorial doesn't mention <a href="https://developer.microsoft.com/en-us/windows/iot/win10/samples/pinmappingsrpi2" rel="nofollow">here</a></p>		<pre><code>var settings = new I2cConnectionSettings(0x07);	settings.BusSpeed = I2cBusSpeed.StandardMode;	var aqs = I2cDevice.GetDeviceSelector("I2C1");	var dis = await DeviceInformation.FindAllAsync(aqs);	int a = dis.Count; //is always equal to 0	</code></pre>		<p>Then I have a <code>using (I2cDevice device = await I2cDevice.FromIdAsync(dis[0].Id, settings)){...}</code> which fails with the <code>ArgumentOutOfRangeException</code> mentionned before</p>		<p>A second way I tried was using this code:</p>		<pre><code>I2CDevice device;	var settings = new I2cConnectionSettings(0x07);	settings.BusSpeed = I2cBusSpeed.StandardMode;		var controller = await Windows.Devices.I2c.I2cController.GetDefaultAsync();	device = controller.GetDevice(settings);	</code></pre>		<p>which produce a <code>NullReferenceException</code> with the last line</p>	"
38415792,64250193,38415792,3,0,Sun Jul 17 13:47:00 EDT 2016,5730046,"It has nothing to do with the I2C device.  Exception is thrown before talking to that slave."
38415792,38422458,38415792,2,2,Sun Jul 17 14:44:00 EDT 2016,5730046,"<p>You might be having the "Direct Memory Mapped Driver" enabled. You need to switch back to "Inbox Driver".</p>		<p>Your code should work just fine with the "Inbox Driver". However, with "Direct Memory Mapped Driver", you have to use the "Microsoft.IoT.Lightning" package to talk to your IoT device.</p>		<p>Follow this <a href="https://docs.microsoft.com/en-us/windows/iot-core/develop-your-app/lightningproviders" rel="nofollow noreferrer">tutorial</a> to use "Lightning" library, the way you setup your I2c controller looks like something below,</p>		<pre><code>        if (LightningProvider.IsLightningEnabled)	        {	            LowLevelDevicesController.DefaultProvider = LightningProvider.GetAggregateProvider();	        }		        var i2cProvider = LightningI2cProvider.GetI2cProvider();	        var i2cControllers = await I2cController.GetControllersAsync(i2cProvider);	        var i2cController = i2cControllers[0];	        var i2cDevice = i2cController.GetDevice(new I2cConnectionSettings(0x07));	</code></pre>		<p>Note that you'll need to include</p>		<pre><code>&lt;iot:Capability Name="lowLevelDevices"/&gt;	&lt;DeviceCapability Name="109b86ad-f53d-4b76-aa5f-821e2ddf2141"/&gt;	</code></pre>		<p>in your package <a href="https://msdn.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations" rel="nofollow noreferrer">manifest</a> file, otherwise you don't have the access to all the serial peripherals.</p>		<p>Follow this <a href="https://docs.microsoft.com/en-us/windows/iot-core/develop-your-app/lightningsetup" rel="nofollow noreferrer">tutorial</a> to switch your device driver between "Inbox Driver" and "Direct Memory Mapped Driver".</p>	"
38415792,74018830,38422458,3,0,Tue Apr 18 20:21:00 EDT 2017,1999833,"Had the same Problem and your answer had been the solution in my case. Thank you very much!"
38415792,64301279,38422458,3,0,Tue Jul 19 00:54:00 EDT 2016,5730046,"How is it going? A little bit curious to find out."
38415792,64251843,38422458,3,0,Sun Jul 17 15:17:00 EDT 2016,2620725,"Oh I haven't thought on this, thanks, I'll try this in a few hours an keep this thread up to date"
