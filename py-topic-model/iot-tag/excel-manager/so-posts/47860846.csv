thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
47860846,47860846,null,1,0,Mon Dec 18 00:43:00 EST 2017,405894,"<p>I have created an Azure IoT edge gateway running in Docker with a custom module that is just a pass through (takes the message and sends it upstream).</p>		<p>I created a simple .net console application to send a message to the gateway so that it can be evaluated.</p>		<p>This is the code that I have in the console app.</p>		<pre><code>DeviceClient client =	            DeviceClient.CreateFromConnectionString("HostName=&lt;my iot hub in azure&gt;.azure-devices.net;DeviceId=&lt;the name of the device&gt;;SharedAccessKey=&lt;my access key&gt;;GatewayHostName=&lt;the name of the IoT Edge Device&gt;");		Message message = new Message();		message.Properties.Add("testproperty", "test");		client.SendEventAsync(message).Wait();	</code></pre>		<p>It appears that when the SendEventAsync method is called that it will hang forerver. I waited 5 minutes and the app is stuck waiting. If I remove the GatewayHostName from the connection string it executes immediately and my message is sent directly to the IoT Hub in Azure.</p>		<p>Why will it not send the message to the IoT Edge gateway?</p>	"
47860846,82711539,47860846,3,0,Mon Dec 18 17:01:00 EST 2017,2932840,"Have you looked at and followed the steps described on https://docs.microsoft.com/en-us/azure/iot-edge/how-to-create-transparent-gateway?"
47860846,82712664,47860846,3,0,Mon Dec 18 17:37:00 EST 2017,8084828,"it looks like your downstream device is not correct configured for its connectivity to the IoT Edge gateway, see more details in the https://docs.microsoft.com/en-us/azure/iot-edge/how-to-create-transparent-gateway#configure-a-downstream-device"
47860846,82714727,47860846,3,1,Mon Dec 18 18:52:00 EST 2017,8080,"Are you able to reach the host that you put in the `GatewayHostName` property in the connection string from the device where you're running the console app? For example, using something like *netcat*, what happens when you run: `nc -v -v -z <GatewayHostName value> 8883`?"
47860846,82709089,47860846,3,0,Mon Dec 18 15:47:00 EST 2017,1537195,"are your edgeAgent and edgeHub running on your IoT Edge device? Just check with `docker ps`"
47860846,47876565,47860846,2,1,Mon Dec 18 21:19:00 EST 2017,1274727,"<p>The client.SendEventAsync call implicitly tries to open a connection to the server (in this case the IoT Edge gateway), which is not able to complete and that is why you are seeing the call hang. </p>		<p>And I feel the problem is in your connection string - 	"HostName=.azure-devices.net;DeviceId=;SharedAccessKey=;<em>GatewayHostName=</em>"</p>		<p>Here the GatewayHostName is not the <em>name</em> of the Edge device, but instead the <em>hostname</em> of the physical device on which the modules are running (fqdn hostname, if available).	So the connection string should be something like this - 	"HostName=.azure-devices.net;DeviceId=;SharedAccessKey=;<em>GatewayHostName=</em>"</p>		<p>If your code is executing in your custom module, then you can simply use the the environment variable $EdgeHubConnectionString, which should contain the connection string you can use. </p>		<p>If it is a downstream device, then along with using the right connection string, you also need to make sure the device trusts the certificate used to accept the connection by the gateway device. You can find more info on that here - <a href="https://docs.microsoft.com/en-us/azure/iot-edge/how-to-create-transparent-gateway" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/azure/iot-edge/how-to-create-transparent-gateway</a></p>	"
47860846,82739392,47876565,3,0,Tue Dec 19 12:20:00 EST 2017,405894,"I did follow the instructions about the transparent gateway and added the certificates before I tried it. So that was not the problem. The problem was exactly that I needed to add the FQDN of the machine running my docker container with Edge in the GatewatHostName property. After I did that the message went through. Now I just need to get it to hit my break point in my custom module."
