thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40794117,40794117,null,1,0,Thu Nov 24 20:30:00 EST 2016,4111264,"<p><strong>Scenario:</strong></p>		<p>We've migrating our backend to Azure, as part of an assigment, and we must develop a push notification to an Android app (that we also develop from scratch). Basically, we have a electronic sensor that collect data from the environment and send (via socket, at the moment) a call to our backend, which stores this data in a mysql database.</p>		<p>The same backend is also responsible for receiving calls to the Android app (also via socket, at the moment). The app then shows the info on the screen (among other features).</p>		<p><strong>Problem:</strong></p>		<p>When the backend receives a specific data from the sensor (set point would be stored in the database through a user input in the app), we would like to send a push notification to the Android app. We believe this could be achieve in Azure using triggers and the push notification hub. The part we cannot figure it out is how/where to trigger this push event. First, we thought a timer trigger would be a solution. It seems to take care of the job, but not so efficient, and we do not know if it is possible (or any good) to make a query to the db in this trigger function. Then, we thought to implement a trigger when an input is being done in the database, which seems a better solution.</p>		<p><strong>Question:</strong></p>		<p>Is this the correct approach to do it? Is it achievable? We are new to the Azure platform.</p>	"
40794117,40798806,40794117,2,1,Fri Nov 25 06:15:00 EST 2016,5341577,"<p>According to your description, I am not sure why you find triggers in achieving your requirement. In my opinion, you could try to send a push notification to the Android app directly in your backend when the backend receives data from the sensor. </p>		<p>For how to use Notification Hubs from Java, you can refer <a href="https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-java-push-notification-tutorial" rel="nofollow noreferrer">here</a>. Also, there are other languages SDK and Rest API provided in Azure, here I assume that your backend is in java platform.</p>		<p>For more details of Azure Notification Hubs, you can refer to <a href="https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-push-notification-overview" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-push-notification-overview</a>.</p>		<p>If any concern, please feel free to let me know.</p>	"
40794117,68919109,40798806,3,0,Mon Nov 28 18:41:00 EST 2016,4111264,"Thanks for the response. My backend is split into two parts: one that is responsible for communicating with the sensors-end, developed in Mono; the second one, developed in Java, which communicates with the Android app. Both share the same database. I've developed a simple assigment where we used a C# backend which used Notification Hub to send a push to an Android app. But now I'd like this push to be triggered by an event. That's why using triggers seemed good."
40794117,40801490,40794117,2,1,Fri Nov 25 09:24:00 EST 2016,371933,"<p>Have a look at <a href="https://azure.microsoft.com/en-us/services/functions/" rel="nofollow noreferrer">Azure Functions</a>. </p>		<p>This suggestion is to send the push notification in an event hub that triggers an Azure Function that executes the push. </p>		<p>Azure Functions are basically serverless code that runs on a schedule, or are triggered by something. A trigger can a blob(file) being saved, or reacting to a message on an event hub, both very easy to get started with.  You can also trigger code by setting up a WebHook if you prefer that.</p>		<p>Functions are written in C# or JavaScript, and the beauty of it is that you basically don't even have to write an application. The code compiles and runs there &amp; then - inputs and outputs to a function are also super-easy to set up. </p>	"
40794117,68919157,40801490,3,0,Mon Nov 28 18:42:00 EST 2016,4111264,"That was precisely my first stop, but I was completely sure that it was the correct approach. I believe I'll have to implement it and see for myself. Thanks!"
