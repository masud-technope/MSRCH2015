thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55279694,55279694,null,1,1,Thu Mar 21 11:42:00 EDT 2019,917338,"<p>What is the proper way to connect an app to a device? At the moment, I have a raspberry pi 3 that controls something about electricity and an iPhone app I created. Every time the app goes to foreground, it sends a UDP broadcast message, when the app receives a response from the raspberry pi, it uses that IP address (in the IP header) to consume the web services I created in the hub. This UDP process is done all the time you run the app. Is this what IOT devices usually do? I assume the raspberry pi IP will change sooner or later.</p>		<p>A colleague of mine told me another way: After the first time I get the IP address, instead of using UDP broadcast messages every time the app runs, use ICMP to ping the previously saved IP address to see if it is responding. In that case, I use the web services with that IP address, otherwise, use the UPD broadcast message again.</p>		<p>I don't see the point of that. Basically because the system is not faster using ICMP. (a UDP request is more or less as fast as an ICMP request). Moreover, maybe, another device started using that IP address now (like a smart TV or a smart plug) and for that reason, it is not going to reply to the network requests sent by the app. In that case, the app cannot recover, because it thinks it is already connected to the proper device. As far as I understand, ICMP is a protocol use for diagnosis, not for devices discovery.</p>		<p>What do you think? What's the process used by devices like Alexa, Philips Hue, Smart plugs... to solve the problem of discovering the devices by their apps?	It seems Philips HUE is using SSDP, which under the hood uses a UDP broadcast message. Is it used every time you run the app to discover the IP address? (I am going to check this later with wireshark)</p>		<p>Thanks for suggestions.</p>	"
55279694,97327829,55279694,3,0,Fri Mar 22 12:37:00 EDT 2019,1870387,"Just a side note: Your discussion seem to discuss the issue in closed networks, e.g. home network. The alternatives you discuss can be used in that environment. However, they cannot and should not be used in the open Internet. In the open Internet, the IoT devices should not be addressable IP endpoints for security reasons (see attacks to Jeep, Web Cams, etc.)"
55279694,97371243,55279694,3,0,Sun Mar 24 09:43:00 EDT 2019,917338,"@StefanVaillant Yes,I am talking about a LAN, not interested on Internet right now."
55279694,55284399,55279694,2,1,Thu Mar 21 15:52:00 EDT 2019,904907,"<p>You can enable the hostname of your Raspberry Pi to be accessible on your local network through:</p>		<blockquote>	  <p><a href="http://raspberrypi.local" rel="nofollow noreferrer">http://raspberrypi.local</a></p>	</blockquote>		<p>To enable it, you need to install <em>Bonjour</em> support on your Raspberry Pi by installing the <strong>Avahi mDNS daemon</strong> (implements Apple's Zeroconf architecture):</p>		<pre><code>$ sudo apt-get install avahi-daemon	</code></pre>		<p>Update boot startup:</p>		<pre><code>$ sudo insserv avahi-daemon	</code></pre>		<p>Restart to apply the new configuration:</p>		<pre><code>$ sudo /etc/init.d/avahi-daemon restart	</code></pre>	"
