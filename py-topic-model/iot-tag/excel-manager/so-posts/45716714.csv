thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
45716714,45716714,null,1,0,Wed Aug 16 14:46:00 EDT 2017,8149062,"<p>I have an ASP.NET Core website in the Azure Cloud which can send messages to a simulated IoT device (console app) that sits on my private network.</p>		<p>I want to be able to respond to the Cloud-to-Device website generated message with data from my private network device, not just a delivery acknowledgement.</p>		<p>The two options I can think of are:</p>		<ul>	<li>Have a message listener on both applications.  When the website sends a message to the device, the device sends a Device-to-Cloud message back with the JSON data.  The problem here is if there are multiple messages flying around, I need to distinguish between them.</li>	<li>Have the device respond by uploading the data to a cloud database via stream analytics where it can be retrieved by the website.  I think this would work quite well but I don't necessarily need to store this data for future retrieval.</li>	</ul>		<p>Has anyone experience in doing this?  If so, what other options do I have and what do people recommend as best practice?</p>		<p>Thanks.</p>	"
45716714,45717572,45716714,2,1,Wed Aug 16 15:27:00 EDT 2017,3682967,"<p>You can use direct method invocation from the Cloud (<a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-csharp-csharp-direct-methods" rel="nofollow noreferrer">MS tutorial</a>) - calling a method on your simulated device and waiting for a response, but this will only work for small payloads (up to 8KB, I think)</p>		<p>For larger payloads, I'd suggest sending a Cloud to Device message containing a GUID that identifies the message, then sending a file back to BLOB storage (see <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-csharp-csharp-file-upload" rel="nofollow noreferrer">this</a> Microsoft tutorial), using the GUID as a filename, and then having the IoT hub send a notification event to your cloud code when the file is delivered. The GUID allows you to tie the response back to the initial request.</p>	"
45716714,78406984,45717572,3,0,Wed Aug 16 23:54:00 EDT 2017,8149062,"Direct methods worked a treat.  I was able to request a bunch of JSON data in a fraction of a second!"
