thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41791237,41791237,null,1,0,Sun Jan 22 13:05:00 EST 2017,7453575,"<p>I want to send message to my Raspberry PI from  web app using MQTT. Which service is feasible to do the same?  Do I need to install mqtt broker both the end?</p>	"
41791237,70771257,41791237,3,0,Sun Jan 22 13:19:00 EST 2017,2836621,"You only need one broker which can run on the sender or the receiver or somewhere else altogether. Where are you sending the message from?"
41791237,41791629,41791237,2,0,Sun Jan 22 13:44:00 EST 2017,3151330,"<p>As far as using node.js is concenrned, there's a light weight mqtt server mosca (<a href="http://mosca.io" rel="nofollow noreferrer">http://mosca.io</a>) and client MQTT js (<a href="https://github.com/mqttjs/MQTT.js" rel="nofollow noreferrer">https://github.com/mqttjs/MQTT.js</a>)</p>		<p>MQTT follows pub-sub messaging pattern. You just need to have broker on one end (either end).</p>		<p><strong>Option 1:</strong>	<br>	Have a broker server running along with your webapp and <code>publish</code> messages on a topic which the mqtt client (running on raspberry pi) will subscribe to</p>		<p><strong>Option 2:</strong>	<br>	If raspberry pi is the only one static device, just run a broker (MQTT server) on it and <code>publish</code> messages from the webservice </p>		<p><strong>Alternative Option:</strong>	<br>	If your messages do not require extremely high throughput just use websockets. Even though they are not as much fast as MQTT (which is lightweight protocol), websockets provide a good bidirectional communication especially if any of your components are attached to or relying on http interfaces.</p>		<p>In fact the security mechanism of MQTT is not well established in M2M communication whereas websockets follow http security mechanisms (TLS ecnryption)</p>		<p><strong>Update:</strong>	I used a misleading sentence <strong>not well established</strong>. What I meant was no simple out-of-the-protocol MQTT security (something like mqtts)	<br> 	I understand this is not a right statement. The options are:</p>		<ol>	<li>Either use underlying TCP security (SSL) by presharing the certificate. This is pain in case of many devices and certificate renewals or</li>	<li>Use an application level security which compromises the metadata such as topic, qos etc.</li>	</ol>		<p>And websockets are only useful if the publishing is not frequent and payload is not huge.</p>	"
41791237,70773466,41791629,3,0,Sun Jan 22 15:18:00 EST 2017,6659347,"Hi , Can you provide a reference about "security mechanism of MQTT is not well established in M2M""
41791237,70773758,41791629,3,0,Sun Jan 22 15:33:00 EST 2017,3151330,"I would direct you to this topic. Check the advantages and disadvantages of payload encryption. The main problem is the key exchange has to be done manually, so keystore safety on client becomes an important problem. Also since MQTT protocol is completely topic, qos driven, the metadata cannot be encrypted which is then not safe for communicating over the internet. I'm implementing a IOT solution for our clients and we are using zeromq with curve encryption instead of MQTT	http://www.hivemq.com/blog/mqtt-security-fundamentals-payload-encryption"
