thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55541316,55541316,null,1,0,Fri Apr 05 18:21:00 EDT 2019,10591683,"<p>Suppose we have several (100) nodes in an IOT network. Each node has limited resources. There is a postgresql database server running in one of these nodes. Now every node has several (4-5) processes which need to interact with this server to perform some insert and select queries. Each query response has to be as fast as possible for the process to work as it should. Now i think of some ways to do this are :</p>		<ol>	<li>Each process in a node makes one database client and performs queries.     </li>	<li>All processes in a node send their queries to a destination in localhost itself from where the queries are performed through an optimum number of database clients. This way we have some sort of control over the number of database clients like  optimisation of queries getting performed through a priority queue implementation or  performing queries in separate thread/process through a separate  database client in each thread/process. In this case somewhat we have the control over the optimisation of number of clients,number of threads/processes , priority of in what order queries must be executed.</li>	<li>Each node sends all queries through some network protocol directly to the database server which then uses a limited number of database clients performing queries now in its own localhost database and then returning the response to each node through same channel. This way it increases the latency but keeps number of clients minimum. Plus we can also implement some optimisation here running each client in different process/thread etc. Database interaction can be faster in this case since number of clients can be kept minimum, it is running in localhost machine itself  but it adds some overhead to transfer the query response data back to the node's process.     </li>	</ol>		<p>In order to keep the resource usage as minimum as possible in every node and queries response as fast as possible , what is the best strategy to solve this problem ? </p>	"
55541316,55549523,55541316,2,0,Sat Apr 06 13:27:00 EDT 2019,1870387,"<p>Without knowing the networking details, option 3 would be used normally.	Reasons:</p>		<ul>	<li>Authentication: Typically you do not want to use database users to authenticate IoT devices.</li>	<li>Security: By using a specific IoT protocol, you can be sure to use TLS and certificate based server authentication.</li>	<li>Protocol compatibility: In upgrade cases, you must ensure that you can upgrade the client nodes independently from the server nodes, or vice versa. This may not be the case for database protocol.</li>	</ul>	"
