thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
32894870,32894870,null,1,3,Thu Oct 01 18:57:00 EDT 2015,391895,"<p>I develop a capacitive I2C keyboard for a Raspberry Pi 2 with Windows 10 IoT, so when my I2C controller detects a key stroke I need to send a key to the current page. </p>		<p>How can I send keys?</p>		<p>In windows forms I have used:</p>		<pre><code>SendKeys.Send("{ENTER}");	</code></pre>	"
32894870,53724212,32894870,3,2,Mon Oct 05 13:24:00 EDT 2015,134204,"What do you mean? If it's your own application, you can directly modify the UI or perform some action when you detect a keystroke. You *don't* need to send any keystrokes. Have you put all business logic in the screen's event handlers perhaps? That a *bad* design even for desktop apps. You should separate *actions* from the UI, especially in this case where the UI no longer generates events"
32894870,91112882,32894870,3,0,Wed Aug 29 15:39:00 EDT 2018,865643,"Is this still the case? Did you get round it in the end?"
32894870,34226545,32894870,2,0,Fri Dec 11 15:06:00 EST 2015,5655988,"<p>Sorry but it is not allowed in UWP due to some APIs restriction to be called only by user interaction. Refer this forum: <a href="http://msdev.developer-works.com/article/29629099/%5BUWP%5DIs+SendKeys+available+within+Windows+Universal+App%3F" rel="nofollow">http://msdev.developer-works.com/article/29629099/%5BUWP%5DIs+SendKeys+available+within+Windows+Universal+App%3F</a></p>		<p>Instead you can programmatically write text to the textboxes like:</p>		<pre><code>// To simulate key 'A' and 'B'	Textbox1.Text += 'A';	Textbox1.Text += 'B';		// To simulate backspace if Textbox contains any character	if (Textbox1.Text.Length &gt; 0)	{	    Textbox1.Text = Textbox1.Text.Remove(Textbox1.Text.Length - 1);	}	</code></pre>		<p>Problem with this snippet is, you can't simulate special key like ALT, CTRL, F1-F12, Shift and WinKey.</p>		<p>Hope this will help you to resolve your issues a bit.</p>	"
