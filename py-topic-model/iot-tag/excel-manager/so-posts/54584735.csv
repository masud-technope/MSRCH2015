thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54584735,54584735,null,1,0,Fri Feb 08 01:07:00 EST 2019,4182371,"<p>My scenario is the following: Android acting like a Master Bluetooth and I have 2+ shimmer2r devices as slave mode, sending me data, e.g. accelerometer data. </p>		<p>I have my android in the mode that my android device listens on RFCOMM through of BluetoothAdapter that open BluetoothSocketServer and my Bluetooth socket for every slave device will open differents BluetoothSocket. But I would like to know if I put in this way my android device will act like a normal server as in TCP i.e. my slave must connect to my Bluetooth server or from my Bluetooth Server must start the communication to every slave. 	In summary, I have two public methods in my class BluetoothServer: start and stop and I have two private methods to connect and connected similar to ChatBluetooth.</p>		<pre><code>class BluetoothServer private constructor() {	  /** Log tag, apps may override it.  */	  private var TAG = "BluetoothServer"	  private val NAME: String = "BLUETOOTH_SERVER"	  private val MY_UUID: UUID = UUID.fromString("a86de605-7069-41dc-96a3-83e9dabec5b3")	  private val mAdapter: BluetoothAdapter	  // Variables to check out the states of the conections	  private var currentState: Int = 0	  // Threads	  private var mAcceptThread: AcceptThread? = null	  private var mConnectThread: ConnectThread? = null	  private var mStreamThread: StreamThread? = null	  // Constants that indicate the current connection state	  private val STATE_NONE = 0       // we're doing nothing	  private val STATE_LISTEN = 1     // now listening for incoming connections	  private val STATE_CONNECTING = 2 // now initiating an outgoing connection	  private val STATE_CONNECTED = 3 // now connected to a remote device	//List of clients	  var clientList: ArrayList&lt;BluetoothDevice&gt;	     get() {	         return this.clientList	    }		init {	    mAdapter = BluetoothAdapter.getDefaultAdapter();	    clientList = ArrayList()	    currentState = STATE_NONE	}			private object GetInstance {	    val INSTANCE = BluetoothServer()	}		companion object {	    val instance: BluetoothServer by lazy { GetInstance.INSTANCE }	}	</code></pre>		<p>My android application listen but i have created an python application in client mode and from this client i could not arrive until to my srv bluetooth server. So I don't have idea what is the wrong.</p>	"
