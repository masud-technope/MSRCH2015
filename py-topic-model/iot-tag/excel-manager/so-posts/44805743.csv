thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44805743,44805743,null,1,1,Wed Jun 28 14:44:00 EDT 2017,7536875,"<p>I did a lot of research (here and on github) to find out how Iot Data Plane class works.</p>		<p>I wonder how I could publish data on a topic with the c++ sdk and use of port 443. I would like to establish my connection, and have the connection alive until I close it. </p>		<p>In brief, I need help to use the cpp sdk to send MQTT over Web Socket, on Linux.</p>		<p>Does anyone can help?</p>		<pre><code> Aws::SDKOptions options;	 options.loggingOptions.logLevel = Aws::Utils::Logging::LogLevel::Info;	 Aws::InitAPI(options);		 Aws::Auth::AWSCredentials credentials;	 credentials.SetAWSAccessKeyId("a valid key id generated in Aws IAM");	 credentials.SetAWSSecretKey("a valid secret key generated in Aws IAM");		 Aws::IoTDataPlane::IoTDataPlaneClient client(credentials);	 Aws::IoTDataPlane::Model::PublishRequest request;	 std::shared_ptr&lt;Aws::StringStream&gt; stream = std::make_shared&lt;Aws::StringStream&gt;("Something to publish.");		 request.SetBody(stream);	 request.SetTopic("MyTopic");		 Aws::IoTDataPlane::Model::PublishOutcome outcome(client.Publish(request));	 if(outcome.IsSuccess())	 {	    printf("Success");	 }	 else	 {	    printf("%s", outcome.GetError().GetMessage().c_str());	 }	 Aws::ShutdownAPI(options);	</code></pre>	"
44805743,76595221,44805743,3,2,Wed Jun 28 16:05:00 EDT 2017,3172183,"Can you show some code you've written or some links that you have searched for ? It'll help others to help"
44805743,44811027,44805743,2,0,Wed Jun 28 19:29:00 EDT 2017,7536875,"<p>What I want to do is not yet possible, as answered by a software engineer of Aws on Git Hub.</p>		<p><a href="https://github.com/aws/aws-sdk-cpp/issues/594" rel="nofollow noreferrer">https://github.com/aws/aws-sdk-cpp/issues/594</a></p>		<blockquote>	  <p>the c++ sdk does not support mqtt at the moment. We have plans to add this to an upcoming c99 sdk. We'll keep you posted. In the meantime, if you need to use mqtt you can use the iot sdk.</p>	</blockquote>	"
