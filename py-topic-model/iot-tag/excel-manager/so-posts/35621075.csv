thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
35621075,35621075,null,1,2,Thu Feb 25 07:37:00 EST 2016,5972060,"<p>is there any support in python to subscribe on mqtt broker with port 8080</p>		<pre><code> import sys	 import paho.mqtt.client as mqtt		 def on_connect(mqttc, obj, flags, rc):	     print("rc: "+str(rc))		 def on_message(mqttc, obj, msg):	     print(msg.topic+" "+str(msg.qos)+" "+str(msg.payload))		 def on_publish(mqttc, obj, mid):	     print("mid: "+str(mid))		 def on_subscribe(mqttc, obj, mid, granted_qos):	     print("Subscribed: "+str(mid)+" "+str(granted_qos))		 def on_log(mqttc, obj, level, string):	     print(string)		 mqttc = mqtt.Client()   	 mqttc.on_message = on_message	 mqttc.on_connect = on_connect	 mqttc.on_publish = on_publish	 mqttc.on_subscribe = on_subscribe	 mqttc.connect("test.mosquitto.org", 8080, 60)	 mqttc.subscribe("test/iot", 0)		 mqttc.loop_forever()	</code></pre>		<p>i can not connect with this code. Mosquitto has websocket support at port 8080 but this paho library does not work for it. any solution for python?	i am using python 2.7 on windows 10.</p>	"
35621075,58928145,35621075,3,0,Thu Feb 25 09:21:00 EST 2016,2318649,"I think websocket is its own protocol, not same as MQ, that is (or uses) a different protocol, it's like trying to compare apples and tomatoes, it doesn't work except that they are both roundish (i.e. both are IP-based protocols). Try port 1883 which is unencrypted MQTT."
35621075,59077222,35621075,3,0,Mon Feb 29 13:13:00 EST 2016,2318649,"You have a client app that can only talk MQTT over websocket on 8080. So does that mean your question should be 'Is there a python lib which provides MQTT server over websocket (on 8080)?"
35621075,59128364,35621075,3,0,Tue Mar 01 15:25:00 EST 2016,5972060,"I want to know whether any library that can subscribe to MQTT on websocket in python is available not or any way to do it? I am using broker named test.mosquito.org which is MQTT broker"
35621075,58987162,35621075,3,0,Fri Feb 26 13:52:00 EST 2016,5972060,"I tried and it worked on 8080 but i want to do with 8080 as mosquitto broker has support of websocket on 8080 but this library does not work for 8080."
35621075,58990746,35621075,3,0,Fri Feb 26 15:10:00 EST 2016,504554,"What benefit do you think there is to running a native client over Websockets?"
35621075,59034538,35621075,3,0,Sun Feb 28 02:35:00 EST 2016,5972060,"dear hardlib i made an IOT application in android and iOS that can send MQTT message only on websocket port 8080 so i need to connect my client device on port 8080.... javascript has support of mqtt on websocket library but python dsnt have it..."
35621075,59874168,35621075,3,0,Sun Mar 20 17:15:00 EDT 2016,504554,"You shouldn't be using test.mosquito.org for anything other than a little light testing. But it (and pretty much any other broker) is listening on 1883 for native MQTT"
35621075,35629460,35621075,2,1,Thu Feb 25 14:01:00 EST 2016,504554,"<p>No, the Python version of the Paho library does not support MQTT over Websockets.</p>		<p>In fact I believe the only native client side (not in a browser) MQTT library that supports MQTT over Websockets is the NodeJS module (<a href="https://www.npmjs.com/package/mqtt" rel="nofollow">https://www.npmjs.com/package/mqtt</a>)</p>	"
35621075,58988832,35629460,3,0,Fri Feb 26 14:28:00 EST 2016,2318649,"Have you tried goggling for _python mqtt websocket_?"
35621075,58987222,35629460,3,0,Fri Feb 26 13:53:00 EST 2016,5972060,"i already have done it on Nodejs with library named "mows" that is mqtt on websocket but i want to do it in python so any idea do you have to implement it on python?"
35621075,59014196,35629460,3,0,Sat Feb 27 08:12:00 EST 2016,5972060,"yes barny , i have done it but i cant find anything useful in google... if you have solution then tell me"
35621075,99441247,35629460,3,0,Mon Jun 03 07:58:00 EDT 2019,8432239,"@SmitGardhariya I used `hbmqtt` python library in one of my work projects. It had a great support and active contributions. I found some limitations though: 1. Hbmqtt won't support proxy as it uses `websockets 7` library for sock connections under the hood which haven't had a full support for proxies. 2. Message sent is not using a asyncio.StreamReader or Writer which makes the library to silently crash when you run on slow networks[ You can achieve this by sending pack in chunks of smaller bits than bandwidth]."
35621075,99441307,35629460,3,0,Mon Jun 03 08:00:00 EDT 2019,8432239,"@SmitGardhariya HBMQTT does support ws, wss, mqtt, mqtts, wss with the username and password authentication. Most importantly Last_will_and_testament. QOS_1 and QOS_2 acks are bit tricky to handle sometimes; if dealing with continuous message streams."
35621075,37678415,35621075,2,4,Tue Jun 07 11:41:00 EDT 2016,2599670,"<p>The Paho MQTT module introduced websocket support some days ago. I don't think it is released yet, but you can install from the master under Linux branch using</p>		<pre><code>pip install git+git://github.com/eclipse/paho.mqtt.python.git	</code></pre>		<p>Also works under windows. (Thanks for info from the comments)</p>		<p>You can use the websockets as transport by connecting with</p>		<pre><code>mqttc = mqtt.Client(transport="websockets")	</code></pre>		<p><strong>UPDATE:</strong></p>		<p>If you try to use the websocket protocol with the python client because you also need to connect a browser client (for example MQTT.js) then you can also configure mosquitto to listen to <em>websockets</em> and the normal <em>mqtt protocol</em>.</p>		<p>Simply create a configuration file for example in </p>		<pre><code>/etc/mosquitto/mosquitto.conf	</code></pre>		<p>with the following contents:</p>		<pre><code>listener 1883	protocol mqtt		listener 9001	protocol websockets	</code></pre>		<p>Then you can then run mosquitto with</p>		<pre><code>mosquitto -c /etc/mosquitto/mosquitto.conf	</code></pre>		<p>You should see similar output:</p>		<pre><code>1469015320: mosquitto version 1.4.8 (build date 2016-05-3112:07:40+0200) starting	1469015320: Config loaded from /etc/mosquitto/mosquitto1.conf.	1469015320: Opening ipv4 listen socket on port 1883.	1469015320: Opening ipv6 listen socket on port 1883.	1469015320: Opening websockets listen socket on port 9001.	</code></pre>		<p>Your python client then connects to port 1883 and the browser client to 9001</p>		<p>You can use <a href="http://mitsuruog.github.io/what-mqtt/" rel="nofollow">what-mqtt browser client</a> to test the websocket listener. Just point it to <code>ws://localhost:9001</code></p>	"
35621075,67347991,37678415,3,0,Fri Oct 14 05:48:00 EDT 2016,5972060,"@FI0v0 ... ya i have started the broker with my configuration ... i am running it on websocket support given by "paho" in python and agular JS"
35621075,67350812,37678415,3,0,Fri Oct 14 07:23:00 EDT 2016,2599670,"@SmitGardhariya So it works? You should be able to connect to mosquitto with the python client on port 1883 without websocket and from the browser with the js client on port 9001 via websocket"
35621075,67353564,37678415,3,0,Fri Oct 14 08:45:00 EDT 2016,5972060,"No u didn't get me ..... I m doing communication on port 8080 instead of 1883...... So my mobile app can communicate to device directly"
35621075,63244990,37678415,3,0,Sat Jun 18 10:11:00 EDT 2016,5972060,"Still not getting my messages..... this code let me connect to websocket but I m not getting messages."
35621075,63245095,37678415,3,1,Sat Jun 18 10:18:00 EDT 2016,5972060,"Pip installation works with windows"
35621075,63861769,37678415,3,0,Wed Jul 06 08:30:00 EDT 2016,2599670,"@SmitGardhariya After reading the comments on your questions, it seems to me, that you want to use websockets because another client needs to connect to mosquitto using websockets. What i found out, was that mosquitto can listen to websockets AND the normal mqtt connections. You can add an extra listener in the config file:		`listener 9001	protocol websockets`"
35621075,64357358,37678415,3,0,Wed Jul 20 09:28:00 EDT 2016,5972060,"@FI0v0 I got the solution with above suggestions . but can you tell me where the config file stored for python  library named "paho" I also would like to try your suggestion. Thank You buddy .... :)"
35621075,64363488,37678415,3,0,Wed Jul 20 12:02:00 EDT 2016,2599670,"@SmitGardhariya I added an example how to configure the mosquitto broker. I don't understand what you mean with: but can you tell me 'where the config file stored for python library named "paho"'. You are using mosquitto as a broker right?"
35621075,65499772,37678415,3,0,Mon Aug 22 09:36:00 EDT 2016,2599670,"@SmitGardhariya Ok, what also is important is that you have mosquitto compiled with websocket support. Have you managed to start the broker with your configuration?"
35621075,65497025,37678415,3,0,Mon Aug 22 08:27:00 EDT 2016,5972060,"@FI0v0 yes i m using tht one"
35621075,37850922,35621075,2,3,Thu Jun 16 05:54:00 EDT 2016,362754,"<p>Between Feb and now the paho.mqtt.python codebase has been fixed. Just add <code>transport='websockets'</code> as Fl0v0 suggested, it simply works. Below is the full code which subscribes to everything or everything under <code>$SYS/</code>. The code tested is on the master branch with commit hash <code>e56f913</code> on June 3 of 2016. </p>		<pre><code>#!/usr/bin/python		import sys	import paho.mqtt.client as mqtt		def on_connect(mqttc, obj, flags, rc):	    print("rc: "+str(rc))		def on_message(mqttc, obj, msg):	    print(msg.topic+" "+str(msg.qos)+" "+str(msg.payload))		def on_publish(mqttc, obj, mid):	    print("mid: "+str(mid))		def on_subscribe(mqttc, obj, mid, granted_qos):	    print("Subscribed: "+str(mid)+" "+str(granted_qos))		def on_log(mqttc, obj, level, string):	    print(string)		mqttc = mqtt.Client(transport='websockets')   	mqttc.on_message = on_message	mqttc.on_connect = on_connect	mqttc.on_publish = on_publish	mqttc.on_subscribe = on_subscribe		mqttc.connect("test.mosquitto.org", 8080, 60)		mqttc.subscribe("#", 0)	#mqttc.subscribe("$SYS/#", 0)		mqttc.loop_forever()	</code></pre>		<p>Update: The code above does not work on Windows 7 with python 2.7.6 that I tested with, by invoking from one version of Cygwin (not the cygwin python though). None of the topic <code>"#"</code> or <code>"$SYS/#"</code> gives any published message back. </p>		<p>Instead, pub or sub to solid topics works as the example follows. Patch paho.mqtt.python <code>examples/pub-single.py</code> and <code>examples/sub-simple.py</code>. Then run <code>sub-simple.py</code> in one terminal. Run <code>pub-single.py</code> in another terminal, twice. The subscriber terminal will print out two messages published by the publisher. </p>		<p>Patch to <code>examples/pub-single.py</code>:</p>		<pre><code>-publish.single("paho/test/single", "boo", hostname="test.mosquitto.org")	+publish.single("/HelloWorld", "boo", hostname="test.mosquitto.org",	+               port=8080, transport='websockets')	</code></pre>		<p>Patch to <code>examples/sub-simple.py</code>: </p>		<pre><code>-topics = ['#']	+topics = ['/HelloWorld']		-m = subscribe.simple(topics, hostname="iot.eclipse.org", retained=False, msg_count=2)	+m = subscribe.simple(topics, hostname="test.mosquitto.org",	+                         retained=False, msg_count=2,	+                         port=8080, transport='websockets')	</code></pre>	"
35621075,63244975,37850922,3,0,Sat Jun 18 10:10:00 EDT 2016,5972060,"Thnx minghua .... I tried it but I still not getting my messages..... this code let me connect to websocket but I m not getting messages."
35621075,63335775,37850922,3,1,Tue Jun 21 11:51:00 EDT 2016,5972060,"thnx minghua it is working on windows too.... jst need to add transport=websocket"
35621075,63180002,37850922,3,0,Thu Jun 16 13:59:00 EDT 2016,362754,"the june 3 commit is one after the tag v1.2. that hints the feature was added or fixed by v1.2. the previous v1.1 was tagged on jan 29 of 2016."
35621075,63160962,37850922,3,0,Thu Jun 16 06:04:00 EDT 2016,362754,"by the way the paho code implemented websocket protocol by itself. you don't even need to install a websocket package."
35621075,63262288,37850922,3,0,Sun Jun 19 07:23:00 EDT 2016,362754,"wonder the environment you run in. cygwin? just tried it again, it works for me. put the file into the paho checkout under `paho.mqtt.python/src` and run from within that directory. guess subscribing to # may be problematic on some platforms."
35621075,63397949,37850922,3,0,Wed Jun 22 18:37:00 EDT 2016,362754,"thanks smit for sharing the good news about windows. maybe it's just my mix of windows/python/cygwin having a problem."
