thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
37400666,37400666,null,1,0,Mon May 23 21:13:00 EDT 2016,2208562,"<p>I have a device configured with a public static IP that reports vehicle GPS data over UDP. The device can send events, receive commands and send command acknowledgements. </p>		<p>I have an app which opens a Datagram socket and listens for inbound device events on, let's say, port X. </p>		<p>When the device sends an event, my app receives and processes the message no problem. The issue I'm having is sending ACK'd commands. For scalability/performance reasons, I'm processing device ACKs as regular events. (i.e. ACKs should be sent on port X) When my apps sends a command, I need the response acknowledgement to be redirected back to my apps event listener. Right now, the device is replying back to the source ip/port of the originating packet and not on port X so my app is never receiving command acknowledgement.</p>		<p>I guess my question here is, is there a way to overload the outgoing UDP header to use port X even though that port is already bound to a socket? Is there some trick that I could do at a lower level such as iptables to port forward? Do I need some proxy or forwarding agent to sit in front of my app that will manage packet routing? Is it possible to send commands and receive events over the same socket connection?</p>		<p>What is the best way to solve this issue? My app is build on Apache Camel and uses 2 routes.. one for events and the other for commands. If there is a workaround for this in Camel maybe?</p>		<p>Thanks</p>	"
37400666,62310499,37400666,3,0,Mon May 23 21:34:00 EDT 2016,162634,"what if you could put app port X into cmds to device, so device knows where to send cmd acks to?"
37400666,62336892,37400666,3,0,Tue May 24 13:43:00 EDT 2016,2208562,"@VictorSorokin The device command does not accept such data."
37400666,62336984,37400666,3,0,Tue May 24 13:44:00 EDT 2016,2208562,"@AndrewWilliamson I do but my project is more of a framework which will work for any UDP-based device so if it works for one device with modified behavior it may not with another that cannot be modified."
37400666,62310744,37400666,3,0,Mon May 23 21:41:00 EDT 2016,2363967,"Do you have the option to modify the device's behaviour?"
37400666,37402350,37400666,2,0,Mon May 23 23:54:00 EDT 2016,207421,"<p>I don't know why you're using a separate port to send the ACKs from, but the answer is not to. Send them from the same port as you are sending everything else.</p>		<blockquote>	  <p>as regular events (i.e. ACKs should be sent on port X)</p>	</blockquote>		<p><em>Non sequitur.</em> 'Regular events' does not imply 'should be sent on port X'.</p>	"
37400666,62348654,37402350,3,0,Tue May 24 18:51:00 EDT 2016,207421,"Yes, of course. You don't need two sockets."
37400666,62337968,37402350,3,0,Tue May 24 14:06:00 EDT 2016,2208562,"Sorry I meant to say device "ACKs should be sent **to** port X". In this way an ACK is treated like a regular event. "Send them from the same port as you are sending everything else." So are you saying I should use the same socket port X is bound to for sending commands?"
