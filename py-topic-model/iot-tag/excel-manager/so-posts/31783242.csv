thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
31783242,31783242,null,1,2,Mon Aug 03 08:56:00 EDT 2015,5183348,"<p>I have tried a lot but I can't find out how to update a GUI element for example a <code>TextBlock.Text</code> from an running Task on Windows Universal App for Windows IoT on Raspberry.</p>		<p>Is there any way to do this?</p>		<p>It should work out of the running task without stopping it.</p>		<p>According to an answer I have tried this:</p>		<pre><code>Task t1 = new Task(() =&gt;	        {	            while (1 == 1)	            {		                byte[] writeBuffer = { 0x41, 0x01, 0 }; // Buffer to write to mcp23017	                byte[] readBuffer = new byte[3]; // Buffer to read to mcp23017	                SpiDisplay.TransferFullDuplex(writeBuffer, readBuffer); // Send writeBuffer to mcp23017 and receive Results to readBuffer	                byte readBuffer2 = readBuffer[2]; // extract the correct result	                string output = Convert.ToString(readBuffer2, 2).PadLeft(8, '0'); // convert result to output Format		                // Update the frontend TextBlock status5 with result	                Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal,	                () =&gt;	                {	                    // Your UI update code goes here!	                    status6.Text = output;	                });		            }	        });	        t1.Start(); 	</code></pre>		<p>But I get the following 2 errors:</p>		<pre><code>Error   CS0103  The name 'CoreDispatcherPriority' does not exist in the current context	</code></pre>		<p>and </p>		<pre><code>CS4014  Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.	</code></pre>		<p>Am I doing something wrong using the code?</p>	"
31783242,51497877,31783242,3,0,Mon Aug 03 10:00:00 EDT 2015,5183348,"I have tried it with invoke but this is not running under Universal Windows Apps."
31783242,51495859,31783242,3,1,Mon Aug 03 09:04:00 EDT 2015,1997232,"I am not experienced with Windows-universal, but in winforms/wpf there is an `Invoke` method to do that. As well as an asynchronous version (`InvokeAsync`/`BeginInvoke`)."
31783242,51501539,31783242,3,0,Mon Aug 03 11:49:00 EDT 2015,5109947,"CS0103: add using Windows.UI.Core (see edited sample below)	CS4014: add await keyword and mark scope async (see edited sample below)"
31783242,31784301,31783242,2,1,Mon Aug 03 09:50:00 EDT 2015,5109947,"<p>I'm not sure where your problem is, I guess it might be a problem with different threads.	Try to use the dispatcher. You need to integrate the Windows.UI.Core namespace:</p>		<pre><code>using Windows.UI.Core;	</code></pre>		<p>Here's your call (slightly modified to work out of the box).</p>		<pre><code>private void DoIt()	        {		            Task t1 = new Task(async () =&gt;	            {	                while (1 == 1)	                {	                    await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal,	                                        () =&gt;	                                        {	                                            // Your UI update code goes here!	                                            status6.Text = "Hello" + DateTime.Now;	                                        });	                    await Task.Delay(1000);	                }	            });	            t1.Start();		        }  	</code></pre>		<p>Little hint: while (1=1) sounds like an infinite loop to me.	Another hint: I added "await Task.Delay(1000);" to have a little break during the loops.</p>		<p>Also check out this answer regarding dispatcher.	<a href="https://stackoverflow.com/questions/16477190/correct-way-to-get-the-coredispatcher-in-a-windows-store-app">Correct way to get the CoreDispatcher in a Windows Store app</a></p>	"
31783242,51502098,31784301,3,0,Mon Aug 03 12:05:00 EDT 2015,5183348,"thank you a lot! It works perfectly!"
31783242,51498800,31784301,3,0,Mon Aug 03 10:28:00 EDT 2015,5183348,"Thx for your help, I have tried it to use the code from you but it won't work (I have added the code in the question)."
