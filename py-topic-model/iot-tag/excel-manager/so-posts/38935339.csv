thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38935339,38935339,null,1,1,Sat Aug 13 17:35:00 EDT 2016,5308481,"<p>My publisher and broker are working on different systems. The publisher has local DB in which it stores new outbound messages. I want to ask It is possible to have sync between publisher local DB with broker DB (mosquitto.db) when publisher lost connection with the broker and then broker automatically send these messages to the subscriber if subscriber connected to a broker or when connected to a broker. </p>	"
38935339,38935650,38935339,2,0,Sat Aug 13 18:15:00 EDT 2016,504554,"<p>The <code>mosquitto.db</code> store is purely for the the Mosquitto broker to keep internal state, this includes which clients have persistent sessions and any queued messages for those client. There is no access to it from anywhere else.</p>		<p>If the publisher goes off line and then you try and publish a message it will throw an exception, it is up to you as the developer to catch the exception, store the message and try and resend it later when the publisher is reconnected to the broker.</p>		<p>The paho client callback has a method (<a href="http://www.eclipse.org/paho/files/javadoc/org/eclipse/paho/client/mqttv3/MqttCallback.html#deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken)" rel="nofollow">deliveryComplete()</a>) that is called once a message has left the control of the  client (this is effectively when it has reached the broker for QOS 1 or 2). When sending a message you should follow these steps:</p>		<ol>	<li>Store any new message in the publishers local database</li>	<li>Try to send it to the broker</li>	<li>Remove it (or mark it published) from the database when the <code>deliveryComplete</code> is called.</li>	</ol>		<p>On reconnection to the broker the database should be checked for any outstanding messages and they should be published.</p>	"
