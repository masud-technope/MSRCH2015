thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
30594724,30594724,null,1,0,Tue Jun 02 11:24:00 EDT 2015,2165027,"<p>This question concerns the CoAP protocol and the CoRE link format as implemented in Contiki-OS. </p>		<p>Suppose a Contiki device sharing several resources which are: </p>		<ul>	<li>Sensors	<ul>	<li>Temperature</li>	<li>Humidity</li>	<li>Motion</li>	<li>Battery voltage</li>	<li>Solar panel voltage</li>	</ul></li>	</ul>		<p>A client can access these resources with their respective URL like for example: </p>		<p><code>REQ: GET /sensors/humidity</code></p>		<p>Each of these resources is periodic (except Motion obviously) and observable, but the maximum number of allowed observers configured by default is limited to 3 actually.</p>		<p>We could increase this number to be equal to the number of observable resources and create an observer for each of these resource (I don't know what would be the consequences). We may furthermore create a global "Sensors" periodic resource and share all resource at once. </p>		<p>But is there a better way to do that? Is the standard providing a mechanism which allow us to combine several periodic resources in one observer?</p>		<p>Thanks.</p>	"
30594724,32456680,30594724,2,0,Tue Sep 08 11:31:00 EDT 2015,1537998,"<p><a href="http://%20https://tools.ietf.org/html/draft-ietf-core-observe-16#section-1.2" rel="nofollow noreferrer">Coap observe draft</a> says:</p>		<blockquote>	  <p>If multiple subjects are of interest to an observer, the observer must register separately for all of them.</p>	</blockquote>		<p>So, to reply to your question, no, there is no standard way, at most you could add another url that returns all the sensors if you prefer (but imho it's a very bad solution). </p>		<p>Instead I would just override the default maximum observers setting. In fact the <a href="https://stackoverflow.com/questions/31582853/coap-too-many-observers/32442528">observe draft doesn't say anything about a maximum number of observers</a>, it's just up to you to set one to be sure that your device doesn't crash because of memory allocation. </p>	"
