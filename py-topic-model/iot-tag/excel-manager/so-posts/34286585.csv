thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
34286585,34286585,null,1,5,Tue Dec 15 10:21:00 EST 2015,5681490,"<p>Trying to learn AWS IoT, I created a few "Things" + a Policy and I am even able to use IoT CLI to <strong><em>list-things</em></strong> or <strong><em>list-policies</em></strong>. I am even able to update the shadow through CLI with <strong><em>update-thing</em></strong> command through CLI. But once I try to access a Shadow through REST GET / POST request (through a .Net program or directly like <a href="https://XXXXXXXXXXXXX.iot.us-west-2.amazonaws.com/things/mything/shadow" rel="nofollow">https://XXXXXXXXXXXXX.iot.us-west-2.amazonaws.com/things/mything/shadow</a>), I receive a </p>		<blockquote>	  <p>"Missing Authentication Token"</p>	</blockquote>		<p>. So I started to use a certificate. Here is part of my code:</p>		<pre><code>string Certificate = "xxxxxxxxx-certificate.crt"; // downloaded from my thing	X509Certificate cert = new X509Certificate(Certificate);	WebRequestHandler handler = new WebRequestHandler();	handler.ClientCertificates.Add(cert);	HttpClient client = new HttpClient(handler);	// url = @"https://xxxxxxxxxxxxx.iot.us-west-2.amazonaws.com/things/&lt;mything&gt;/shadow";	HttpResponseMessage webResponse = client.GetAsync(url, HttpCompletionOption.ResponseContentRead).Result;	</code></pre>		<p><strong>The result is:</strong></p>		<blockquote>	  <p>StatusCode: 403, ReasonPhrase: 'Forbidden', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:<br>	  {<br>	     x-amzn-RequestId: 25f3c1dc-9ddd-4787-a4cf-cb79dc96748b<br>	     connection: Keep-Alive<br>	     x-amzn-ErrorType: ForbiddenException:<br>	     Date: Tue, 15 Dec 2015 08:53:56 GMT<br>	     Content-Length: 91<br>	     Content-Type: application/json<br>	  }  </p>	</blockquote>		<p>Any assistance?</p>	"
34286585,34354181,34286585,2,2,Fri Dec 18 11:05:00 EST 2015,5685257,"<p>If you want to publish and/or subscribe to topics, you can take two different approach.</p>		<ol>	<li>HTTPS calls to API endpoints. </li>	<li>Using any of the supported AWS SDKs of your choice (python, java, .NET etc.,) or AWS CLI</li>	</ol>		<p>For the "missing authentication token" exception you get is due to unavailability of authentication tokens and amazon specific headers in your request. To make your HTTPS request work, You either use a rest client to add amazon specific headers or write a program. </p>		<p>You should try doing the following steps to make your https requests to work.</p>		<p>For detailed steps, refer <a href="http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html" rel="nofollow">http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html</a></p>		<p>TASK 1: CREATE A CANONICAL REQUEST</p>		<ul>	<li>Step 1 is to define the verb (GET, POST, etc.)</li>	<li>Step 2: Create canonical URI.</li>	<li>Step 3: Create the canonical query string.</li>	<li>Step 4: Create the canonical headers and signed headers.</li>	<li>Step 5: Create the list of signed headers.</li>	<li>Step 6: Create payload hash (hash of the request body content)</li>	<li>Step 7: Combine elements to create create canonical request</li>	</ul>		<p>TASK 2: CREATE THE STRING TO SIGN	 Using SHA256 algorithm, hash the canonical request (using any programming language/tools) and create a string to sign like below</p>		<blockquote>	  <p>string_to_sign = YourHashingAlgorithm + '\n' +  CurrentDateInUTC+ '\n'	  +  credential_scope + '\n' +  yourHashedCanonicalRequest</p>	</blockquote>		<p>API's to AWS services are uniquely identified by service paths. For IOT it is <strong>"iotdata/aws4_request"</strong>. So your credential_scope in the above 'string_to_sign' should be like </p>		<blockquote>	  <p>credential_scope = datestamp + '/' + us-west-2+ '/' + iotdata+ '/' +	  'aws4_request'</p>	</blockquote>		<p>TASK 3: CALCULATE THE SIGNATURE</p>		<p>Calculate the hash using the same algorithm used in previous steps. </p>		<p>Refer the above said link for more details.</p>		<p>TASK 4: ADD SIGNING INFORMATION TO THE REQUEST</p>		<p>Here you need to set some of the headers like 'x-amz-date','Authorization', 'SignedHeaders' and 'Signature'. This Signature header will carry the final value of the Step 3.</p>		<p><strong>Note:</strong> None of these headers are optional. Every HTTPS request should have all this information for authentication and authorization. Else AWS API will reject it.</p>		<p>You should get a 200 OK response to assure that your request is actually processed.</p>		<p>Coming to your .Net approach, you can try using AWS's .NET SDK and try inspecting the final request. I never tried using x.509 certificates directly in code. I think you are missing headers in your requests. </p>		<p>In cURL it would be something like below</p>		<blockquote>	  <p>curl "<a href="https://iot.amazonaws.com" rel="nofollow">https://iot.amazonaws.com</a>" \	  --request GET \	  --form "Action=UpdateThing" \	  --form "UserName=iam_user" \	  --form "CertificateBody=@~/.aws/credentials/sample/cert.pem" \	  --form "Version=2010-05-08" \	  --form "<em>AUTHPARAMS</em>"</p>	</blockquote>		<p>Hope this helps</p>	"
