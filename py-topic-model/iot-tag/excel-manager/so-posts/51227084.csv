thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
51227084,51227084,null,1,0,Sat Jul 07 21:30:00 EDT 2018,4408364,"<p>I have <code>raspberry pi 3 B</code>. </p>		<p><strong>Use case</strong>: To print <code>ip address</code> and <code>time</code> to a <code>2 * 16 character lcd</code> display on system startup or reboot.</p>		<p>For this, I am using python code which is <strong>working fine</strong> when I am running from the terminal.</p>		<p><strong>Problem</strong>: 	On system startup, nothing is getting displayed in lcd screen.</p>		<p><strong>Details</strong>:  </p>		<p>I tried three ways:</p>		<p><strong>way 1:</strong></p>		<p>I have added to <code>/etc/rc.local</code> the following lines</p>		<pre><code>echo "Display ip to 2*16 char display from /etc/rc.local" &gt;&gt; /home/pi/Workspace/python/pi-screen/logs.log		sudo /usr/bin/python /home/pi/Workspace/python/pi-screen/src/display.py &gt;&gt; /home/pi/Workspace/python/pi-screen/logs-1.log	</code></pre>		<p>On system reboot it was expected that it should print to the <code>lcd display</code> but <strong>it didn't.</strong> </p>		<p>When I am running <code>display.py</code> from console using <code>python display.py</code> it's running file and printing to <code>2 * 16 characters lcd display</code> as expected.</p>		<p><strong>Way 2:</strong></p>		<p>I have even tried adding script to <code>/etc/init.d/lcd</code>.</p>		<p>when running using <code>/etc/init.d/lcd start</code> it worked but on system startup but it <strong>didn't work</strong> too.</p>		<p><strong>way 3:</strong></p>		<p>Using <code>.bashrc</code> <strong>worked</strong> (Not preferred )</p>		<p>I added the below line to <code>.bashrc</code> file and <strong>it worked</strong>.</p>		<pre><code>#Show IP Address (temp solution)	/home/pi/Workspace/python/pi-screen/src/display.py	</code></pre>		<p>Adding to <code>.bashrc</code> is not preferred as it prints to lcd screen on every login.</p>		<p><code>----------------------------------------------------------------------</code></p>		<p><strong>Code used</strong>:</p>		<p><strong>lcd init file</strong> <code>/etc/init.d/lcd</code></p>		<pre><code>### BEGIN INIT INFO	# Provides: LCD - date / time / ip address	# Required-Start: $remote_fs $syslog	# Required-Stop: $remote_fs $syslog	# Default-Start: 2 3 4 5	# Default-Stop: 0 1 6	# Short-Description: Liquid Crystal Display	# Description: date / time / ip address	### END INIT INFO			#! /bin/sh	# /etc/init.d/lcd			export HOME	case "$1" in	    start)	        echo "Starting LCD"	        /home/pi/Workspace/python/pi-screen/src/display.py  2&gt;&amp;1 &amp;	    ;;	    stop)	        echo "Stopping LCD"	        LCD_PID=`ps auxwww | grep pi-screen | head -1 | awk '{print $2}'`	        kill -9 $LCD_PID	    ;;	    *)	        echo "Usage: /etc/init.d/lcd {start|stop}"	        exit 1	    ;;	esac	exit 0	</code></pre>		<p><strong>display.py</strong> </p>		<pre><code>#!/usr/bin/python	import time	import display_conf	import utils		lcd = display_conf.get_lcd()		def show_msg(msg, how_long):	    lcd.message(msg)	    time.sleep(how_long)	    lcd.clear()			if __name__ == "__main__":	    now = utils.get_time()	    ip = utils.get_host_ip()	    msg = now + "\n" + ip		    show_msg(msg, 10)	</code></pre>		<p><strong>display_config.py</strong></p>		<pre><code>import Adafruit_CharLCD as LCD		def get_lcd():	    # Raspberry Pi pin setup	    lcd_rs = 25	    lcd_en = 24	    lcd_d4 = 23	    lcd_d5 = 17	    lcd_d6 = 18	    lcd_d7 = 22	    lcd_backlight = 2		    # Define LCD column and row size for 16x2 LCD.	    lcd_columns = 16	    lcd_rows = 2		    lcd = LCD.Adafruit_CharLCD(lcd_rs, lcd_en, lcd_d4, lcd_d5, lcd_d6, lcd_d7, lcd_columns, lcd_rows, lcd_backlight)		    return lcd	</code></pre>		<p><strong>utils.py</strong></p>		<pre><code>import socket	import time		def get_host_ip():	    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)	    s.connect(("8.8.8.8", 80))	    ip = s.getsockname()[0]	    s.close()		    return ip		def get_time():	    now = time.strftime("%Y-%m-%d %H:%M:%S")	    return now	</code></pre>		<p><strong>Note</strong>: <code>/home/pi/Workspace/python/pi-screen/src/display.py</code> and <code>/etc/init.d/lcd</code> both have executable permission.</p>	"
51227084,51229250,51227084,2,1,Sun Jul 08 05:55:00 EDT 2018,4902099,"<p>To run python script via /etc/rc.local:</p>		<p>1) Edit the file using <code>sudo /etc/rc.local</code>;</p>		<p>2) Add the following to the file <strong>right before</strong> <code>exit 0</code>:</p>		<pre><code>(sleep 5;python /home/pi/Workspace/python/pi-screen/src/display.py)&amp;	</code></pre>		<p>The parentheses allows your to run multiple commands in the background. The <code>sleep 5</code> will delay the running of script by 5 seconds, as some of the services that your script depend on may not be available yet at the time of booting rc.local.</p>		<p>Alternatively you can use crontab <code>@reboot</code> to automate the execution of your script.</p>		<p>Using crontab:</p>		<p>1) run command line <code>sudo crontab -e</code>;</p>		<p>2) add the command to the end of the file:</p>		<pre><code>@reboot /usr/bin/python /home/pi/Workspace/python/pi-screen/src/display.py	</code></pre>	"
51227084,51534363,51227084,2,-1,Thu Jul 26 08:30:00 EDT 2018,10110209,"<p>simple code don't take tension its to easy 	1. connection properly <a href="http://www.circuitbasics.com/raspberry-pi-lcd-set-up-and-programming-in-python/" rel="nofollow noreferrer">http://www.circuitbasics.com/raspberry-pi-lcd-set-up-and-programming-in-python/</a>  using this link help 	2. follow all instruction which written in this page 	3. use this code </p>		<pre><code>import time	import datetime	from RPLCD.gpio import CharLCD	from RPi import GPIO	GPIO.setmode (GPIO.BCM)	GPIO.setwarnings(False)	lcd = CharLCD(numbering_mode=GPIO.BCM, pin_rs=22, pin_rw=24, pin_e=23, pins_data=[26, 12, 16, 27],cols=16, rows=2,auto_linebreaks=True)	lcd.cursor_pos = (0,1) 	lcd.write_string(u'WELCOME EZIMAX')	while 1:    	    lcd.cursor_pos =(1,10)	    lcd.write_string("%s" %time.strftime("%H:%M")) 	    lcd.cursor_pos = (1,0)	    lcd.write_string("%s" %time.strftime("%d/%m/%y"))	</code></pre>		<ol start="4">	<li>use this code if your connection wire is BCM </li>	<li>otherwise change code according to BOARD wire connection .</li>	</ol>		<p>if you have again any problrm or error so follow me and contact me </p>	"
