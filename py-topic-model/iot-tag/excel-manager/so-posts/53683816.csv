thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53683816,53683816,null,1,-3,Sat Dec 08 15:09:00 EST 2018,2632816,"<p>I am trying use AWS connection keys in Android for connection with Device using MQTT websocket but did not find a solution yet, please help me on that. If any one provide MQTT over SSL/TLS with 3 certificate AWS (ca,cert,private) android code.</p>		<pre><code>final MqttAndroidClient mqttAndroidClient = new MqttAndroidClient(MainActivity.this, "ssl://" + pref.getMqttUrl(), clientId, persistence);		try {	     String clientId = MqttClient.generateClientId();		     MqttConnectOptions connectionOptions = new MqttConnectOptions();	     connectionOptions.setCleanSession(true);		    Log.e("Test", "ssl://" + pref.getMqttUrl());		    try {	        InputStream trustStoresIs = context.getResources().openRawResource(R.raw.ca_key);			        String trustStoreType = KeyStore.getDefaultType();	        KeyStore trustStore = KeyStore.getInstance(trustStoreType);	        trustStore.load(trustStoresIs, context.getString(R.string.bks_password).toCharArray());		        String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();	        TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);	        tmf.init(trustStore);		        InputStream keyStoreStream = context.getResources().openRawResource(R.raw.user_cer_key);	        KeyStore keyStore = null;	        keyStore = KeyStore.getInstance("BKS");	        keyStore.load(keyStoreStream, context.getString(R.string.bks_password).toCharArray());		        KeyManagerFactory keyManagerFactory = null;	        keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());	        keyManagerFactory.init(keyStore, context.getString(R.string.bks_password).toCharArray());		        SSLContext context = SSLContext.getInstance("SSL");	        context.init(keyManagerFactory.getKeyManagers(), tmf.getTrustManagers(), null);		        SSLSocketFactory sslsocketfactory = (SSLSocketFactory) context.getSocketFactory();	        connectionOptions.setSocketFactory(sslsocketfactory);		    } catch (KeyManagementException | CertificateException | KeyStoreException | IOException | NoSuchAlgorithmException | UnrecoverableKeyException e) {	        // TODO Auto-generated catch block	        e.printStackTrace();	    }		    mqttAndroidClient.connect(connectionOptions, null, new IMqttActionListener() {	        @Override	        public void onSuccess(IMqttToken asyncActionToken) {	            Log.e("Mqtt","Connection Success!");		        }		        @Override	        public void onFailure(IMqttToken asyncActionToken, Throwable exception) {	            Log.e("Mqtt","Connection Failure!");		        }	    });		    mqttAndroidClient.setCallback(new MqttCallback() {	        @Override	        public void connectionLost(Throwable cause) {	            Log.e("Mqtt","Connection was lost!");		        }		        @Override	        public void messageArrived(String topic, MqttMessage message) throws Exception {				        }		        @Override	        public void deliveryComplete(IMqttDeliveryToken token) {	            System.out.println("mqtt Delivery Complete!");	        }		    });			} catch (Exception ex) {	    ex.printStackTrace();		}	</code></pre>		<p>Got error like </p>		<pre><code>Mqttjavax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.	</code></pre>		<p>Thanks.</p>	"
53683816,94225579,53683816,3,0,Sat Dec 08 16:22:00 EST 2018,504554,"If you don't show us what you've tried we can't help you fix it."
53683816,53693864,53683816,2,1,Sun Dec 09 15:34:00 EST 2018,504554,"<p>The error implies your truststore doesn't have either the right or the full certificate chain for to authenticate the server.</p>		<p>The following line bothers me:</p>		<pre><code>InputStream trustStoresIs = 	    context.getResources().openRawResource(R.raw.ca_key);	</code></pre>		<p>It implys you are loading a key not a certificate for your CA chain. Also CA chains tend to have more than one layer (Primary CA cert signs Intermediate CA cert) so I would expect you to need to add more than one cert to the trust store.</p>	"
53683816,94252491,53693864,3,0,Mon Dec 10 02:10:00 EST 2018,2632816,"can you please provide sample source code?"
53683816,94270118,53693864,3,0,Mon Dec 10 14:35:00 EST 2018,504554,"No, not really as I can only guess at what you have in the resources you are loading."
