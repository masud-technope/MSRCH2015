thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55232482,55232482,null,1,7,Tue Mar 19 01:40:00 EDT 2019,73228,"<p>I am trying to setup a basic example of sending a message from the Arduino MKR1000 to the Azure IOT Event Hub but can't seem to get any of the online examples to work and I am new to Arduino.</p>		<p>Any pointers for a simple working example?</p>		<p>I tried this example and changing slightly to POST a message rather than receive but no luck. I can connect to the Wifi with no issues, its just when posting the HTTP request it errors with "HTTP Error 411. The request must be chunked or have a content length". It also doesn't seem like the most clean approach but I just wan't to get something basic up and running for now to play with :)</p>		<p>Code Example:</p>		<pre><code>#include &lt;SPI.h&gt;	#include &lt;WiFi101.h&gt;		#include "arduino_secrets.h"		///////please enter your sensitive data in the Secret tab/arduino_secrets.h	char ssid[] = SECRET_SSID;        // your network SSID (name)	char pass[] = SECRET_PASS;    // your network password (use for WPA, or use as key for WEP)		const int MKR1000_LED = 6 ;			///*** Azure IoT Hub Config ***///	//see: http://mohanp.com/  for details on getting this right if you are not sure.		char hostname[] = "*****.azure-devices.net";    // host name address for your Azure IoT Hub	char feeduri[] = "/devices/MKR1000/messages/events?api-version=2018-06-30"; //feed URI	char authSAS[] = "SharedAccessSignature sr=******.azure-devices.net%2Fdevices%2FMKR1000&amp;sig=*****&amp;se=******";		///*** Azure IoT Hub Config ***///		unsigned long lastConnectionTime = 0;	const unsigned long pollingInterval = 5L * 1000L; // 5 sec polling delay, in milliseconds		int status = WL_IDLE_STATUS;		WiFiSSLClient client;		void setup() {	  Serial.println("setup...");	  pinMode(MKR1000_LED, OUTPUT);		  //check for the presence of the shield:	  if (WiFi.status() == WL_NO_SHIELD) {	    // don't continue:	    while (true);	  }		  // attempt to connect to Wifi network:	  while (status != WL_CONNECTED) {	    status = WiFi.begin(ssid, pass);	    // wait 10 seconds for connection:	    delay(10000);	  }	  Serial.println("Wifi connected...");	}		void loop()	{	  String response = "";	  char c;	  ///read response if WiFi Client is available	  while (client.available()) {	    c = client.read();	    response.concat(c);	  }		  if (!response.equals(""))	  {	    Serial.println(response);	    //if there are no messages in the IoT Hub Device queue, Azure will return 204 status code.	    if (response.startsWith("HTTP/1.1 204"))	    {	      //turn off onboard LED	      digitalWrite(MKR1000_LED, LOW);	    }	    else	    {	      //turn on onboard LED	      digitalWrite(MKR1000_LED, HIGH);	    }	  }		  // polling..if pollingInterval has passed	  if (millis() - lastConnectionTime &gt; pollingInterval) {	    digitalWrite(MKR1000_LED, LOW);	    azureHttpRequest("{TEST MESSAGE!}");	  }	}		// this method makes an HTTPS connection to the Azure IOT Hub Server:	void azureHttpRequest(String data) {		  // close any connection before send a new request.	  // This will free the socket on the WiFi shield	  client.stop();		  // if there's a successful connection:	  if (client.connect(hostname, 443)) {	    //make the GET request to the Azure IOT device feed uri	    client.print("POST ");  //Do a GET	    client.print(feeduri);  // On the feedURI	    client.println(" HTTP/1.1");	    client.print("Host: ");	    client.println(hostname);  //with hostname header	    client.print("Authorization: ");	    client.println(authSAS);  //Authorization SAS token obtained from Azure IoT device explorer	    //client.println("Connection: close");	    client.println("Content-Type: application/json");	    client.println("Content-Length: " + data.length());	    client.println("\r\n\r\n" + data);				    // note the time that the connection was made:	    lastConnectionTime = millis();	  }	  else {	    // if you couldn't make a connection:	    Serial.println("connection failed");	  }	}	</code></pre>		<p>Edit: I have seen that there is a full Azure IOT library with a simple HTTP example, but this also doesn't run (it gets passed the wifi connection and failing with call to azure) but this example project is fairly large and I was hoping for a simple example to build upon!</p>		<p><a href="https://github.com/Azure/azure-iot-arduino" rel="noreferrer">https://github.com/Azure/azure-iot-arduino</a></p>	"
55232482,97309794,55232482,3,0,Thu Mar 21 22:39:00 EDT 2019,73228,"No joy:22:39:23.631 -> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN""http://www.w3.org/TR/html4/strict.dtd">	22:39:23.631 -> <HTML><HEAD><TITLE>Bad Request</TITLE>	22:39:23.631 -> <META HTTP-EQUIV="Content-Type" Content="text/html; charset=us-ascii"></HEAD>	22:39:23.631 -> <BODY><h2>Bad Request - Invalid Header</h2>	22:39:23.631 -> <hr><p>HTTP Error 400. The request has an invalid header name.</p>	22:39:23.631 -> </BODY></HTML>"
55232482,97209074,55232482,3,1,Tue Mar 19 09:53:00 EDT 2019,1537195,"is there any specific reason why you are not using the IoT Device SDK and instead constructing the connection yourself?"
55232482,97288481,55232482,3,1,Thu Mar 21 11:25:00 EDT 2019,4148708,"You absolutely sure `data.length()` returns something in the `client.println` near the end there? Print it out to serial console. [`Transfer-Encoding: chunked`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding#Syntax) should work as well (instead of `Content-Length`)."
55232482,97289184,55232482,3,0,Thu Mar 21 11:45:00 EDT 2019,73228,"I will double check when back near the Arduino, but i presume it should as I have passed in a static string. I will also try changing the header to use transfer-encoding"
55232482,97436390,55232482,3,0,Tue Mar 26 11:49:00 EDT 2019,8442930,"I had similar issue till yesterday but now it suddenly started working as if there has been update to Iot service. I noticed one thing that your content-type is "application/json" but actual message is not in key/value format like "{ "messagestring" : "test message" } ..  I used NodeMCU esp32 module to test this"
55232482,97267006,55232482,3,0,Wed Mar 20 18:37:00 EDT 2019,73228,"Are you referring to the Azure specific library as per my link? I have taken the code mainly from an example online so I am trying to get something working initially. If you have a clearer approach though please share"
55232482,97267208,55232482,3,0,Wed Mar 20 18:42:00 EDT 2019,73228,"Also: "I have seen that there is a full Azure IOT library with a simple HTTP example, but this also doesn't run (it gets passed the wifi connection and failing with call to azure) but this example project is fairly large and I was hoping for a simple example to build upon!""
55232482,97421703,55232482,3,0,Tue Mar 26 01:13:00 EDT 2019,73228,"I also confirmed the length did return an integer greater than zero"
55232482,98587244,55232482,3,0,Fri May 03 10:49:00 EDT 2019,10322229,"In addition to Rahul: if you're not sending a (correct) json file, you could replace Content-Type with: Content-Type: application/x-www-form-urlencoded; charset=UTF-8. I also suggest not to send a newline command on the last print (not a newline after the data)"
55232482,58121735,55232482,2,0,Thu Sep 26 17:13:00 EDT 2019,1051634,"<p>You have a ready-to-use example here: <a href="https://github.com/firedog1024/mkr1000-iotc" rel="nofollow noreferrer">https://github.com/firedog1024/mkr1000-iotc</a>.</p>		<p>Note that it uses Azure IoT Device Provisioning Service for provisioning so you will need to <a href="https://docs.microsoft.com/azure/iot-dps/quick-setup-auto-provision" rel="nofollow noreferrer">setup a DPS instance</a> alongside your IoT Hub.</p>	"
