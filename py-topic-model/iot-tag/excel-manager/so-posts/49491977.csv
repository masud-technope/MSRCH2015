thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
49491977,49491977,null,1,0,Mon Mar 26 12:53:00 EDT 2018,9550774,"<p>I'm trying to control LED using rpi that is a peer in hyperledger fabric network. My network (PC and RPI) is as follow:</p>		<ul>	<li>A Certificate Authority (CA) — PC1</li>	<li>An Orderer — PC1</li>	<li>1 PEER (peer0) on — PC1</li>	<li>1 PEER (peer1) on — RP</li>	<li>CLI on —  RPI</li>	</ul>		<p>I setup the above network successfully, and i'm able to run the chaincode example 2 that is provided by hyperledger fabric (install, query,invoke). 	i have developed my own chaincode that can be used to turn on and off a LED connected to the rpi from the blockchain. The problem is that i'm getting the below error (Timeout):</p>		<blockquote>	  <p>Error: Error endorsing chaincode: rpc error: code = Unknown desc =	  timeout expired while starting chaincode mychaincode:1.0</p>	</blockquote>		<p>This is my chaincode:</p>		<pre><code>    package main	import (	    "fmt"	    "strconv"	    "os"	    "github.com/stianeikeland/go-rpio" //To Map GPIO of RPI	    "github.com/hyperledger/fabric/core/chaincode/shim"	    pb "github.com/hyperledger/fabric/protos/peer"	)	var (	        pin = rpio.Pin(3)	)		// SimpleChaincode example simple Chaincode implementation	type SimpleChaincode struct {			}	func (t *SimpleChaincode) Init(stub shim.ChaincodeStubInterface) pb.Response {	    fmt.Println("LED ON")	    _, args := stub.GetFunctionAndParameters()	    var A string    // Entities	    var Aval int // Asset holdings	    var err error		    if len(args) != 2 {	        return shim.Error("Incorrect number of arguments. Expecting 2")	    }	    if err := rpio.Open(); err != nil {	        fmt.Println(err)	        os.Exit(1)	     }	    A = args[0]	    Aval, err = strconv.Atoi(args[1])	    if err != nil {	        return shim.Error("Expecting integer value for asset holding")	    }		    fmt.Printf("Aval = %d", Aval)	    if Aval == 1{	     pin.High() //turn on	    } else {	     pin.Low() //turn off	    }	    // Write the state to the ledger	    err = stub.PutState(A, []byte(strconv.Itoa(Aval)))	    if err != nil {	        return shim.Error(err.Error())	    }			    return shim.Success(nil)	}		func (t *SimpleChaincode) Invoke(stub shim.ChaincodeStubInterface) pb.Response {	    fmt.Println("ex02 Invoke")	    function, args := stub.GetFunctionAndParameters()	    if function == "invoke" {	        // Make payment of X units from A to B	        return t.invoke(stub, args)	    } else if function == "delete" {	        // Deletes an entity from its state	        return t.delete(stub, args)	    } else if function == "query" {	        // the old "Query" is now implemtned in invoke	        return t.query(stub, args)	    }		    return shim.Error("Invalid invoke function name. Expecting \"invoke\" \"delete\" \"query\"")	}		// Transaction makes payment of X units from A to B	func (t *SimpleChaincode) invoke(stub shim.ChaincodeStubInterface, args []string) pb.Response {	    var A string    // Entities	    var Aval int // Asset holdings	    var X int          // Transaction value	    var err error		    if len(args) != 2 {	        return shim.Error("Incorrect number of arguments. Expecting 2")	    }		    A = args[0]		    // Get the state from the ledger	    // TODO: will be nice to have a GetAllState call to ledger	    Avalbytes, err := stub.GetState(A)	    if err != nil {	        return shim.Error("Failed to get state")	    }	    if Avalbytes == nil {	        return shim.Error("Entity not found")	    }	    Aval, _ = strconv.Atoi(string(Avalbytes))			    // Perform the execution	    X, err = strconv.Atoi(args[1])	    if err != nil {	        return shim.Error("Invalid transaction amount, expecting a integer value")	    }	    Aval = X	    fmt.Printf("Aval = %d", Aval)	    if Aval == 1{	     pin.High()	    } else {	     pin.Low()	    }	    // Write the state back to the ledger	    err = stub.PutState(A, []byte(strconv.Itoa(Aval)))	    if err != nil {	        return shim.Error(err.Error())	    }	    return shim.Success(nil)	}	// Deletes an entity from state	func (t *SimpleChaincode) delete(stub shim.ChaincodeStubInterface, args []string) pb.Response {	    if len(args) != 1 {	        return shim.Error("Incorrect number of arguments. Expecting 1")	    }		    A := args[0]		    // Delete the key from the state in ledger	    err := stub.DelState(A)	    if err != nil {	        return shim.Error("Failed to delete state")	    }		    return shim.Success(nil)	}		// query callback representing the query of a chaincode	func (t *SimpleChaincode) query(stub shim.ChaincodeStubInterface, args []string) pb.Response {	    var A string // Entities	    var err error		    if len(args) != 1 {	        return shim.Error("Incorrect number of arguments. Expecting name of the person to query")	    }		    A = args[0]		    // Get the state from the ledger	    Avalbytes, err := stub.GetState(A)	    if err != nil {	        jsonResp := "{\"Error\":\"Failed to get state for " + A + "\"}"	        return shim.Error(jsonResp)	    }		    if Avalbytes == nil {	        jsonResp := "{\"Error\":\"Nil amount for " + A + "\"}"	        return shim.Error(jsonResp)	    }		    jsonResp := "{\"Name\":\"" + A + "\",\"Amount\":\"" + string(Avalbytes) + "\"}"	    fmt.Printf("Query Response:%s\n", jsonResp)	    return shim.Success(Avalbytes)	}		func main() {	    err := shim.Start(new(SimpleChaincode))	    if err != nil {	        fmt.Printf("Error starting Simple chaincode: %s", err)	    }	}	</code></pre>		<p>How can i solve this issue as there is no syntax errors at all ?</p>	"
49491977,86109123,49491977,3,0,Thu Mar 29 08:11:00 EDT 2018,1109065,"Please paste the log. In which step you get this error, chain code instantiate?"
49491977,86022242,49491977,3,0,Tue Mar 27 09:26:00 EDT 2018,6160507,"Did you vendor "github.com/stianeikeland/go-rpio" with your chaincode?"
49491977,86022357,49491977,3,0,Tue Mar 27 09:29:00 EDT 2018,9550774,"I have import the "github.com/stianeikeland/go-rpio" on my Chaincode, and also before installing the Chaincode I have run the following command: go get github.com/stianeikeland/go-rpio"
49491977,86051804,49491977,3,0,Tue Mar 27 21:47:00 EDT 2018,6160507,"You actually need to "vendor" the go-rpio package ... you can use a tool like "govendor" to accomplish this"
