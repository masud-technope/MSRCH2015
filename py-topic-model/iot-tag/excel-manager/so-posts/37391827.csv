thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
37391827,37391827,null,1,27,Mon May 23 13:05:00 EDT 2016,1049104,"<p>I am developing a mobile messaging app. I was going through technology needed and found two MQTT &amp; Apache Kafta. To me both seems doing the same thing in the same way (in terms of subscribing &amp; publishing to a topic). </p>		<p>I heard that MQTT is fit for mobiles as it is very light weight ? So basically what is the difference between these two and what are the advantage of each on other?</p>	"
37391827,62293340,37391827,3,0,Mon May 23 13:18:00 EDT 2016,504554,"Stackoverflow is not the venue to ask for comparisons of technologies"
37391827,37407079,37391827,2,36,Tue May 24 07:30:00 EDT 2016,3182574,"<p>The main motive behind Kafka is scalability.</p>		<p><strong>MQTT</strong> is a protocol with public specification for lightweight client / message broker communications, allowing publish/subscribe exchanges. Multiple implementations of client libraries and brokers (Mosquitto, JoramMQ...) exist and are virtually compatible. MQTT just specifies the transport, and vaguely the application part (i.e. how data is handled and possibly stored, how clients are authorized...). The spec is not clear if data consumed on a topic is only real-time or possibly persistent. The spec doesn't state anything about how the message broker implementing MQTT could/should scale.</p>		<p>On the other hand, <strong>Apache Kafka</strong> is a message broker based on an internal "commit log": its focus is storing massive amounts of data on disk, and allowing consumption in real-time or later (as long as data is still available on disk). It's designed to be deployable as cluster of multiple nodes, with good scalability properties. Kafka uses its own network protocol.</p>		<p>So you are comparing two different things here: a standard pub/sub protocol (with multiple implementations), and a specific message storing/distributing software, vaguley of the same family with its own protocol.</p>		<p>I'd say that if you need to store massive amount of messages, to ensure batch processing, look more at Kafka. If you have lots of clients/apps exchanging messages in real-time on many independent topics look more at the MQTT (or even AMQP) message broker implementations.</p>	"
37391827,62323856,37407079,3,0,Tue May 24 08:40:00 EDT 2016,1049104,"Is kafta ideal for mobile app messageing like whatsapp?"
37391827,62323889,37407079,3,2,Tue May 24 08:41:00 EDT 2016,3182574,"yes, why not! it depends on us how we design the architecture.."
37391827,62325289,37407079,3,0,Tue May 24 09:15:00 EDT 2016,1049104,"why i asked because i came to knew that MQTT is `light weight` and small footprint so suitable for mobile devices. So what about kafta?"
37391827,62325725,37407079,3,1,Tue May 24 09:26:00 EDT 2016,3182574,"it is similar only, not only mqtt, their are more similar protocols for those use case. me too rely on mqtt."
37391827,82680200,37407079,3,2,Sun Dec 17 17:56:00 EST 2017,258689,"It's all about capabilities, kafka has no built in msg priority, poor security, heavy protocol. It takes some work to expose kafka on mobile app, this is typically done by adding a rest layer on top. MQTT can solve those... but now comes the flip side of it, kafka scales much better than all the mqtt impl I played with..."
37391827,51656205,37391827,2,11,Thu Aug 02 14:33:00 EDT 2018,538775,"<p>MQTT is a standard protocol (with many implementations). Kafka (which is also a protocol) is normally used by downloading it from the Apache website or e.g. a Confluent Docker image.</p>		<p>It is like comparing apples and oranges, both exist for very different reasons.</p>		<p>Most use cases I see in IoT environments combine both MQTT and Apache Kafka. The edge devices speak MQTT protocol (for the benefits it has in edge environments. These are then forwarded to Apache Kafka to get the events into the rest of the enterprise architecture. </p>		<p>You can do this either via a MQTT Broker like HiveMQ + Apache Kafka or via a MQTT Proxy (so that you don't need the MQTT Broker). Both options have trade-offs, of course. </p>		<p>See this <a href="http://www.kai-waehner.de/blog/2018/08/02/deep-learning-kafka-ksql-udf-anomaly-detection-mqtt-iot-sensor/" rel="noreferrer">example of how to combine MQTT with Apache Kafka</a>. Or go directly to the Github code: "<a href="https://github.com/kaiwaehner/ksql-udf-deep-learning-mqtt-iot" rel="noreferrer">Deep Learning UDF for KSQL for Streaming Anomaly Detection of MQTT IoT Sensor Data</a>".</p>		<p>I also created a live demo about how to integrate <a href="https://www.youtube.com/watch?v=L38-6ilGeKE" rel="noreferrer">Apache Kafka and MQTT</a>.</p>	"
