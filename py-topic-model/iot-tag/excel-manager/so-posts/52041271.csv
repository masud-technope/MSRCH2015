thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
52041271,52041271,null,1,2,Mon Aug 27 14:13:00 EDT 2018,1066721,"<p>We have devices connected to <strong>IoT Hub via MQTT</strong> (default settings) and they all keep reconnecting precisely every <strong>65 minutes</strong> (to the millisecond).</p>		<p>Device app details:</p>		<ul>	<li>.net Core 2.1</li>	<li>Libraries: 		<ul>	<li><code>Microsoft.Azure.Devices v1.17.0</code></li>	<li><code>Microsoft.Azure.Devices.Client v1.18.0</code></li>	</ul></li>	<li>Connection Type: MQTT</li>	<li>OS: Windows 10 IoT Enterprise (Dell Industrial PC), Raspbian (Raspberry PI 3) and Windows IoT Core (Raspberry PI 3) - All behave the same.</li>	</ul>		<p>We are using the <strong>free version/tier of IoT Hub</strong>.</p>		<p>When the reconnection occurs:</p>		<ul>	<li><code>DeviceClient StatusChangesHandler</code> reports ConnectionStatus: <code>Disconnected_Retrying</code> and Reason: <code>No_Network</code></li>	<li>IoT Hub Diagnostics reports 		<ol>	<li><code>deviceDisconnect</code> => <code>404104 DeviceConnectionClosedRemotely</code></li>	<li><code>deviceConnect</code> => <code>401003 IoTHubUnauthorized</code></li>	<li><code>deviceConnect</code> => No error, <strong>successful</strong></li>	</ol></li>	<li><code>DeviceClient StatusChangesHandler</code> reports ConnectionStatus: <code>Connected</code> and Reason: <code>Connection_Ok</code></li>	</ul>		<p>This is not a highly critical issue for our operation since at this stage it is a PoC and each reconnect takes about 2 seconds but, we'd like to know the root cause of this behaviour before we go live.</p>	"
52041271,91052477,52041271,3,0,Tue Aug 28 06:11:00 EDT 2018,1066721,"@MichaelXu-MSFT, the retry policy is set to no_retry - `DeviceClient.RetryPolicy = RetryPolicyType.No_Retry` but, it is retrying so, that's a strange behavior by itself. - The cause of reconnection is what I am investigating, so, I don't know it. - Also, to clarify, I don't have any custom logic to trigger a reconnect when the disconnect occurs"
52041271,91049635,52041271,3,0,Tue Aug 28 03:11:00 EDT 2018,8546089,"What retry policy did you set, a custom retry policy or default retry policy(ExponentialBackoff)? In addition, how did you cause the disconnection?"
52041271,52051758,52041271,2,0,Tue Aug 28 06:51:00 EDT 2018,8546089,"<p><code>DeviceClient.RetryPolicy = RetryPolicyType.No_Retry</code> has been deprecated in Microsoft.Azure.Devices.Client v1.18.0.  Please try to use <strong>Microsoft.Azure.Devices.Client.SetRetryPolicy(IRetryPolicy retryPolicy)</strong> instead, like following code.</p>		<pre><code>deviceClient.SetRetryPolicy(new NoRetry());	</code></pre>	"
52041271,91055888,52051758,3,0,Tue Aug 28 08:00:00 EDT 2018,1066721,"The retry policy is not set explicitly, we are using the default which is No_Retry. What do you think the relevance of retry policy setting is with regards to the reconnects that happen every 65 minutes?"
52041271,91060167,52051758,3,0,Tue Aug 28 09:55:00 EDT 2018,8546089,"I mean that the method `DeviceClient.RetryPolicy = RetryPolicyType.No_Retry` is obsolete. Even though you set the retry policy with this method,it is no effort for actual running, there was also a retry policy created by default. If you use SetRetryPolicy method with NoRetry, you will find that the app will not retry to connect the IoT Hub when disconnected. About keep reconnecting precisely every 65 minutes, you should check what caused the disconnection in this frequency, such as network block."
52041271,52066782,52041271,2,2,Tue Aug 28 22:02:00 EDT 2018,8876218,"<p>Are you using SAS Token to authenticate with IoT Hub?  If so, you are most likely encounter a disconnect when your token is refreshed.  This is handled by the SDK and SDK uses retry policy to reconnect in this case.  If the retry policy is not set explicitly, it is using the default (exponential backoff with 4 minutes timeout).  If you set the default to no retry, the connection cannot be re-established without interference.</p>		<p><a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-reliability-features-in-sdks" rel="nofollow noreferrer">Reliability features in the SDKs</a></p>		<p><a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-security#security-tokens" rel="nofollow noreferrer">Security tokens in IoT Hub</a></p>	"
52041271,91257333,52066782,3,0,Mon Sep 03 16:37:00 EDT 2018,1066721,"Yi Zhong, thanks for your answer. I read the articles you suggested and looked into the source code of the c# device client sdk. All implementations of IAuthenticationMethod have a token expiry date of 1 hour and give us no control over the expiry / TTL. As you pointed out all reconnects seem to be originating from the refresh logic indeed. The only way I could have more control on the refresh logic and expiry / TTL was to use DeviceAuthenticationWithToken by generating SAS tokens with the SharedAccessSignatureBuilder class using my own TTL timespan. I'll accept your response as an answer."
