thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33035243,33035243,null,1,6,Fri Oct 09 09:56:00 EDT 2015,5352886,"<p>I have just started learning Azure IoT and it's quite interesting. I am confuse about does IoT Hub stores data somewhere? <br/><br/>	i.e. Suppose i am passing room Temperature to IoT hub and want to store it in database for further use. How it's possible?<br/><br/>	I am clear on how device-to-cloud and cloud-to-device works with IoT hub.</p>	"
33035243,33038898,33035243,2,8,Fri Oct 09 12:57:00 EDT 2015,2210944,"<p>IoT Hub exposes device to cloud messages through an event hubs endpoint. Event Hubs has a retention time expressed in days. It's a stream of data that the reading client could re-read more time because the cursor is on client side (not on server side like queues and topics). With IoT Hub the related retention time is 1 day by default but you can change it.</p>		<p>If you want to store received messages from device you need to have a client reading on the Event Hubs exposed endpoint (for example with an Event Processor Host) that has the business logic to process the messages and store them into a database for example.</p>		<p>Of course you could use another decoupling layer so that the client reads from event hubs and store messages into queues. Then you have another client that at its own pace reads from queues and store into database. In this way you have a fast path reading event hubs.</p>	"
33035243,33068784,33035243,2,6,Sun Oct 11 18:48:00 EDT 2015,2424442,"<p>This is pretty much the use case for all IoT scenarios.</p>		<p>Step 1: High scale data ingestion via Event Hub.</p>		<p>Step 2: Create and use a stream processing engine (Stream Analytics or HDInsight /Storm). You can run conditions (SQL like queries) to filter and store appropriate data in either cold or hot store for further analytics.</p>		<p>Step 3: Storage for cold-path analytics can be Azure BLOB. Stream Analytics can directly be configured to write the Data into it. Cold can contain all other data that doesn't require querying and will be cheap.</p>		<p>Step 4: Processing for hot-path analytics. This is data that is more regularly queries for. Or data where real time analytics needs to be carried on. Like in your case checking for Temperature values going beyond a threshold! needs an urgent trigger! </p>		<p>Let me know if you face any challenges while configuring the Stream analytics job! :)</p>	"
33035243,60577805,33068784,3,1,Thu Apr 07 18:19:00 EDT 2016,249605,"Hmmm. This is insightful into what MS Azure IoT is designed for. Very heavy emphasis (perhaps bias?) towards real-time action.  What I see left out here is analytics on cold-path (which does require querying). For example, reviewing and learning about a devices behavior over the course of time (such as the past month, or year), not just real-time."
33035243,34063995,33035243,2,1,Thu Dec 03 10:49:00 EST 2015,50911,"<p>If you take a look at the IoT Suite remote monitoring preconfigured solution (<a href="https://azure.microsoft.com/documentation/articles/iot-suite-remote-monitoring-sample-walkthrough/" rel="nofollow">https://azure.microsoft.com/documentation/articles/iot-suite-remote-monitoring-sample-walkthrough/</a>) you'll see that it persists telemetry in blob storage and maintains device status information in DocumentDb. This preconfigured solution gives you a working illustration of the points made in the previous answers.</p>	"
