thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41490635,41490635,null,1,0,Thu Jan 05 17:01:00 EST 2017,5905678,"<p>I want to use mongodb as timeseries database and query via timestamp + id.</p>		<p>Mongodb as shown a way to store data <a href="https://www.mongodb.com/blog/post/schema-design-for-time-series-data-in-mongodb" rel="nofollow noreferrer">here</a>.</p>		<pre><code>{	  timestamp_hour: ISODate("2013-10-10T23:00:00.000Z"),	  ID: â€œSystem1â€?,	  values: {	    0: { 0: 999999, 1: 999999, â€¦, 59: 1000000 },	    1: { 0: 2000000, 1: 2000000, â€¦, 59: 1000000 },	    â€¦,	    58: { 0: 1600000, 1: 1200000, â€¦, 59: 1100000 },	    59: { 0: 1300000, 1: 1400000, â€¦, 59: 1500000 }	  }	}	</code></pre>		<p>but i have multiple values and for every value a timestamp, its not periodic.	Data has some time a delay or is not coming for days.	So i dont want to use 0-24 for my hours and 0-59 for my minutes.	Can i use instead my measured timestamp? every value in my document has the same timestamp, so if value1 has 50 entries , value2 has also 50 entries and equal timestamp. </p>		<pre><code>     {	          timestamp_hour: ISODate("2013-10-10T23:00:00.000Z"),	          ID: â€œSystem1â€?,	          values1: {	            "2013-10-10T22:00: {	         "2013-10-10T22:01:00.000Z": 999999, 	         "2013-10-10T22:02:00.000Z": 999999,	         "2013-10-10T22:03:00.000Z": 1000000 	                                },	            "2013-10-10T23:00:": { 	         "2013-10-10T23:01:00.000Z": 2000000,	         "2013-10-10T23:02:00.000Z": 2000000, 	                                 },	          }	         values2: {	            "2013-10-10T22:00: {	         "2013-10-10T22:01:00.000Z": 999999, 	         "2013-10-10T22:02:00.000Z": 999999,	         "2013-10-10T22:03:00.000Z": 1000000 	                                },	            "2013-10-10T23:00:": { 	         "2013-10-10T23:01:00.000Z": 2000000,	         "2013-10-10T23:02:00.000Z": 2000000, 	                                 },	         }	    }	</code></pre>	"
41490635,41490969,41490635,2,1,Thu Jan 05 17:18:00 EST 2017,12388,"<p>You could store your values with the incoming timestamp, and use a separate <strong><a href="https://docs.mongodb.com/manual/core/map-reduce/" rel="nofollow noreferrer">mongodb map-reduce</a> process</strong> to transform your values and store them in different collections with the granularity you need (ex. hourly, daily, monthly). See also <a href="https://docs.mongodb.com/manual/tutorial/perform-incremental-map-reduce/" rel="nofollow noreferrer">incremental map-reduce</a>.</p>		<p>You could also find these posts inspiring:</p>		<ul>	<li><a href="https://www.mongodb.com/blog/post/schema-design-for-time-series-data-in-mongodb" rel="nofollow noreferrer">Schema Design for Time Series Data in MongoDB</a></li>	<li><a href="https://www.quora.com/What-is-the-best-way-to-store-time-series-data-in-MongoDB" rel="nofollow noreferrer">What is the best way to store time series data in MongoDB?</a></li>	<li><a href="https://stackoverflow.com/questions/7368759/mongodb-as-a-time-series-database">MongoDB as a Time Series Database</a></li>	</ul>	"
41490635,70188685,41490969,3,0,Thu Jan 05 17:48:00 EST 2017,5905678,"you mean the way iam trying it is right?"
