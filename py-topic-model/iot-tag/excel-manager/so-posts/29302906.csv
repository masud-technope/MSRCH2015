thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
29302906,29302906,null,1,3,Fri Mar 27 14:19:00 EDT 2015,3546133,"<p>I'm working on a project based on Intel Edison(Running Debian based Ubilinux).I need Edison to execute some code whenever,my android phone(running CM11) connects to the same WiFi as the Edison.How can I detect the presence of my phone in Edison? I have tried the following.</p>		<p><strong>1.Pinging:</strong> But the problem is that router assigns different IP's every time because of DHCP.So,I will not be knowing the IP address of my phone.	Is there any way to ping based on device's MAC address? </p>		<p><strong>2.</strong> I thought of broadcasting a special discovery packet from my phone,whenever it gets connected to the WiFi.But,I don't know where to start with this approach.</p>	"
29302906,46801105,29302906,3,0,Fri Mar 27 14:40:00 EDT 2015,3546133,"@deets I agree.But,second part of your comment explains why I tagged "python" :)"
29302906,46800347,29302906,3,1,Fri Mar 27 14:22:00 EDT 2015,84308,"this is not a python-question. It's a question about the wifi-protocol and its exposure within a given OS. Once you know what to do there, you need to do it from python - but that will be a different question."
29302906,48040279,29302906,3,0,Thu Apr 30 05:47:00 EDT 2015,145574,"@Heisenberg if either question helped you (and arp is the way to go, so they both did..) click on the tick next to the question."
29302906,29303296,29302906,2,2,Fri Mar 27 14:37:00 EDT 2015,5868,"<p>Finding the mac-address would probably work.  Basically you can run the <code>arp</code> command to see what mac-address matches which IP.  There's a question on doing that here:</p>		<p><a href="https://stackoverflow.com/questions/1750803/obtain-mac-address-from-devices-using-python">Obtain MAC Address from Devices using Python</a></p>	"
29302906,29303585,29302906,2,2,Fri Mar 27 14:52:00 EDT 2015,1554386,"<p><a href="https://pypi.python.org/pypi/arprequest" rel="nofollow">Arprequest</a> allows you to "arping" MAC addresses within Python:</p>		<pre><code>from arprequest import ArpRequest	&gt;&gt;&gt; ar = ArpRequest('10.0.0.1', 'eth0')	&gt;&gt;&gt; ar.request()	True	</code></pre>		<p>Pop that in a loop and you've got a MAC monitor.</p>		<p>As alternative, you could take an event based approach and use Scapy to monitor for DHCP requests from your Android device and take an action when it sees it.</p>	"
