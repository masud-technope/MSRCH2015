thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
29417252,29417252,null,1,0,Thu Apr 02 15:53:00 EDT 2015,4672750,"<p>I have a UDP server and client connection. The stack is 802.15.4, TSCH, 6lowpan, IPv6. I believe there is a function in contiki that lists the IP addresses of clients when it is associated to server. I would like to know which function I can use to access this list, save to this list and get stored IP's from this list.</p>	"
29417252,29508009,29417252,2,0,Wed Apr 08 07:01:00 EDT 2015,2165027,"<p>Whether or not you're using RPL, in a contiki server (device receiving DIO messages in case of RPL and RS message in case of NDP) you can access the list of clients by looking in the Neighbor Cache. This cache is located in the <code>ds6_neighbors</code> table.</p>		<p>I'd try something like that:</p>		<pre><code>#include "uip-ds6-nbr.h"	#include "nbr-table.h"		uip_ds6_nbr_t *nbr = nbr_table_head(ds6_neighbors);	while(nbr != NULL) {	    // do something with the neighbor here	    // its IP address is nbr-&gt;ipaddr	    // ...	    nbr = nbr_table_next(ds6_neighbors, nbr);	}	</code></pre>	"
29417252,47226734,29508009,3,0,Thu Apr 09 11:29:00 EDT 2015,4672750,"I found this example: https://github.com/adamdunkels/contiki-fork/blob/master/examples/rime/example-neighbors.c. It seems to do exactly what I want to do. But, the comparing function used is linkaddr_cmp. In that example the neighbor type is linkaddr_t. But if I use &UDP_IP_BUF->srcipaddr then the address type is uip_ipaddr_t, right? So is there a function to compare uip_ipaddr_t the same way as linkaddr_cmp() function. Can you use uip_ipaddr_cmp(addr1, addr2) in uip.h to compare the IPs."
29417252,47222132,29508009,3,0,Thu Apr 09 09:27:00 EDT 2015,4672750,"When the server receive data, I can access the source IP using  &UDP_IP_BUF->srcipaddr like you said. After that I should compare to neighbour cache. Is this neighbour cache automatically updated without me manually adding the IP address. Is there an example inside contiki that uses this caching process?"
29417252,47223375,29508009,3,0,Thu Apr 09 09:59:00 EDT 2015,2165027,"This neighbor cache is part of the protocol (either NDP or RPL), therefore you've nothing to do. The system add automatically to this list the IP address whenever there is a communication with a device in the vicinity. The function used for that purpose is `uip_ds6_nbr_add()`. A server can use this cache to create a list of connected devices. But depends on what you want you may have to create your own list and rely on this latter for the comparison."
29417252,47178413,29508009,3,0,Wed Apr 08 09:50:00 EDT 2015,4672750,"In the UDP side I want to collect the IP addresses of let say 4 clients before sending user data. So, the UDP server should be able to compare any incoming IP addresses with the IP addresses already stored. Is this possible?"
29417252,47184623,29508009,3,0,Wed Apr 08 12:25:00 EDT 2015,2165027,"Yes of course, have a look here: http://senstools.gforge.inria.fr/doku.php?id=contiki:examples at the "IPv6 UDP Communication" example and get inspiration from the tcpip_handler() function. Use `&UDP_IP_BUF->srcipaddr` to find the incoming IP addresses. Compare that with the already stored addresses from the neighbor cache as I showed you above."
29417252,47227865,29508009,3,0,Thu Apr 09 12:00:00 EDT 2015,2165027,"Yes use `uip_ipaddr_cmp()` to compare two 128-bits IPv6 addresses."
