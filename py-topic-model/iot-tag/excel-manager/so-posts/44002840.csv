thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44002840,44002840,null,1,0,Tue May 16 13:27:00 EDT 2017,7193862,"<p>ich trie since 3 Days to connect to the SAP MQTT over WSS (wss://iotmmsXXXXXXXXX.hana.ondemand.com/com.sap.iotservices.mms/v1/api/ws/mqtt).</p>		<p>With this i'm using a p12 client certificate.</p>		<p>But it goes to stuck on/ after the Handshake (see Wireshark Picture).</p>		<p><img src="https://cloud.githubusercontent.com/assets/20642456/26107911/2d7a2664-3a4b-11e7-9c65-8689b1e32abe.png" alt="wireshark">	10.XX.XX.XXX is my IP</p>		<p>155.XX.XX.XXX is the SAP IP </p>		<p>After 30 seconds i got this error:	<img src="https://cloud.githubusercontent.com/assets/20642456/26107508/d0df65c8-3a49-11e7-854f-6739166c7f75.png" alt="output">	And he try to connect again.</p>		<p>Here is the Source: </p>		<pre><code>const fs = require('fs');	const mqtt = require('mqtt');		// Parts of URL and Path	const hcp_account_id = 'WWWWWWWWW';	const hcp_landscape_host = '.hana.ondemand.com' // this is used on PROD with Client Certificate Authentication	const my_endpoint_url_path = '/com.sap.iotservices.mms/v1/api/ws/mqtt';		//Certificate	const client_p12 = "./YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY.p12";		// the following values need to be taken from the IoT Cockpit	const device_id = 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX';	const message_type_id_From_device = 'ZZZZZZZZZZZZZZZZZZZZ';		// for down- upstream communication	var my_publish_topic = "iot/data/" + device_id;	var my_subscription_topic = "iot/push/" + device_id;		var my_endpoint = "iotmms" + hcp_account_id + hcp_landscape_host;		var wsoptions =	    {	        host: my_endpoint,	        port: 443,	        pfx: fs.readFileSync(client_p12),	        passphrase: 'AAAAA',	        checkServerIdentity: false,	        protocol: 'mqttv3.1',	        protocolVersion: 13,	        perMessageDeflate: true,	        client_max_window_bits: true	    }		var options =	    {	        wsOptions: wsoptions,	        clientId: device_id,	        protocolId: 'MQIsdp',	        protocolVersion: 3,	        protocol: 'wss',	        hostname: my_endpoint,	        port: 443,	        path: my_endpoint_url_path	    }		const mqttc = mqtt.connect(options);		mqttc.subscribe(my_subscription_topic, 0);		mqttc.on('connect', () =&gt; console.log('connected!'));		mqttc.on('error', (msg) =&gt; console.log('error: ' + msg));		mqttc.on('offline', (msg) =&gt; console.log('offline: ' + msg));		mqttc.on('close', (msg) =&gt; console.log('close: ' + msg));		// message is Buffer	mqttc.on('message', (topic, message) =&gt; console.log('message(' + topic + '): ' + message.toString()));	</code></pre>	"
44002840,44062007,44002840,2,0,Fri May 19 05:20:00 EDT 2017,7193862,"<p>I have resolved it with chaning the "sendPacket" method in "mqtt/lib/client.js" to</p>		<pre><code>function sendPacket (client, packet, cb) {	  client.emit('packetsend', packet)	  var result = false	  try {	    var buf = mqttPacket.generate(packet)	    result = client.stream.write(buf)	  } catch (err){	    client.emit('error', err)	    result = false	  }	  if (!result &amp;&amp; cb) {	    client.stream.once('drain', cb)	  } else if (cb) {	    cb()	  }	}	</code></pre>	"
