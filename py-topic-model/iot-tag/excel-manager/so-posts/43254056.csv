thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43254056,43254056,null,1,5,Thu Apr 06 11:36:00 EDT 2017,3725739,"<p>I am trying to connect IBM Watson IoT platform using Paho MQTT Javascript client as mentioned in the below example code.</p>		<p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">	<div class="snippet-code">	<pre class="snippet-code-js lang-js prettyprint-override"><code> 	 var client = new Messaging.Client("myOqgId.messaging.internetofthings.ibmcloud.com", 8883, "myclientid_" + parseInt(Math.random() * 100, 10));		 //Gets  called if the websocket/mqtt connection gets disconnected for any reason	 client.onConnectionLost = function (responseObject) {	     //Depending on your scenario you could implement a reconnect logic here	     alert("connection lost: " + responseObject.errorMessage);	 };		 //Gets called whenever you receive a message for your subscriptions	 client.onMessageArrived = function (message) {	     //Do something with the push message you received	     $('#messages').append('&lt;span&gt;Topic: ' + message.destinationName + '  | ' + message.payloadString + '&lt;/span&gt;&lt;br/&gt;');	 };		 //Connect Options	 var options = {	     userName: API-Key here,	     password: Auth token here,	     timeout: 3,	     //Gets Called if the connection has sucessfully been established	     onSuccess: function () {	         alert("Connected");	     },	     //Gets Called if the connection could not be established	     onFailure: function (message) {	         alert("Connection failed: " + message.errorMessage);	     }	 };		 //Creates a new Messaging.Message Object and sends it to the HiveMQ MQTT Broker	 var publish = function (payload, topic, qos) {	     //Send your message (also possible to serialize it as JSON or protobuf or just use a string, no limitations)	     var message = new Messaging.Message(payload);	     message.destinationName = topic;	     message.qos = qos;	     client.send(message);	 }</code></pre>	</div>	</div>	</p>		<p>But not able to connect.	I am getting this error:	<em>WebSocket connection to 'ws://myOrgIdXYZ.messaging.internetofthings.ibmcloud.com:8883/mqtt' failed: Error during WebSocket handshake: net::ERR_CONNECTION_RESET</em></p>		<p>Please anybody out there who tried connecting IBM Watson IoT using Paho Mqtt client.</p>	"
43254056,73586187,43254056,3,1,Thu Apr 06 14:57:00 EDT 2017,2318649,"@hardillb is right - the docs say: "When you make an MQTT connection by using an API key, ensure that the following guidelines are applied: The MQTT client ID is in the format: a:orgId:appId ..." - see https://console.ng.bluemix.net/docs/services/IoT/applications/mqtt.html"
43254056,73581058,43254056,3,0,Thu Apr 06 13:11:00 EDT 2017,3725739,"I tried both 8883 and 1883. In both cases I could not connect. I am getting this error "Connection failed: AMQJS0006E Bad Connack return code:5 Connection Refused: not authorized"."
43254056,73576873,43254056,3,0,Thu Apr 06 11:42:00 EDT 2017,504554,"Shouldn't the client id be something defined in the IoT service rather than a randomly generated value?"
43254056,73577743,43254056,3,0,Thu Apr 06 12:00:00 EDT 2017,3725739,"Client id will be different for each user so it is dynamically generated."
43254056,73577807,43254056,3,0,Thu Apr 06 12:02:00 EDT 2017,504554,"But check the IoT Service doc, I'm sure the client id needs to match something declared in the service (at least for devices and gateways)"
43254056,73578418,43254056,3,0,Thu Apr 06 12:15:00 EDT 2017,3725739,"I am using as Application. So client id should be different for each user. I am already using same kind of client id in Node js client application."
43254056,73578834,43254056,3,0,Thu Apr 06 12:24:00 EDT 2017,323303,"Port 8883 is secure, so I would expect wss as protocol.  What happens if you try 1883? Agree with you on clientid for apps, they just have to be unique per connection so generating is common enough."
43254056,43271226,43254056,2,5,Fri Apr 07 06:35:00 EDT 2017,3725739,"<p>Thank you all for your responses. Based on all responses I have made changes in my code.</p>		<p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">	<div class="snippet-code">	<pre class="snippet-code-js lang-js prettyprint-override"><code>&lt;script type="text/javascript"&gt;		var clientId  = 'a:myOrgId:'+Math.random().toString(16).substr(2, 8);	var client = new Messaging.Client("myOqgId.messaging.internetofthings.ibmcloud.com", 1883, clientId);		 //Gets  called if the websocket/mqtt connection gets disconnected for any reason	 client.onConnectionLost = function (responseObject) {	     //Depending on your scenario you could implement a reconnect logic here	     alert("connection lost: " + responseObject.errorMessage);	 };		 //Gets called whenever you receive a message for your subscriptions	 client.onMessageArrived = function (message) {	     //Do something with the push message you received	     $('#messages').append('&lt;span&gt;Topic: ' + message.destinationName + '  | ' + message.payloadString + '&lt;/span&gt;&lt;br/&gt;');	 };		 //Connect Options	 var options = {	     userName: API-Key here,	     password: Auth token here,	     timeout: 3,	     //Gets Called if the connection has sucessfully been established	     onSuccess: function () {	         alert("Connected");    	 	     },	     //Gets Called if the connection could not be established	     onFailure: function (message) {	         alert("Connection failed: " + message.errorMessage);	     }	 };		 //Creates a new Messaging.Message Object and sends it to the HiveMQ MQTT Broker	 var publish = function (payload, topic, qos) {	     //Send your message (also possible to serialize it as JSON or protobuf or just use a string, no limitations)	     var message = new Messaging.Message(payload);	     message.destinationName = topic;	     message.qos = qos;	     client.send(message);	 }	client.connect(options);	&lt;/script&gt;</code></pre>	</div>	</div>	</p>		<p>You can see that I have made changes in ClientId. IBM Watson Iot will accept only the client ids in the below format <strong>if you are not using Watson IoT libraries</strong>.</p>		<p>var clientId = <em>'a:OrgId:'+RandomString;</em></p>		<p><strong>If you are using IBM Watson IoT libraries</strong> Client Id can be anything. Even I implemented in node.js</p>	"
43254056,73704172,43271226,3,1,Mon Apr 10 09:52:00 EDT 2017,3725739,"There is a documentation on IBM Watson IoT https://console.ng.bluemix.net/docs/services/IoT/applications/mqtt.html#shared_sub_mixed	And also if you are using library you can use client as mentioned in the code 	https://github.com/ibm-watson-iot/iot-nodejs"
43254056,73652438,43271226,3,0,Sat Apr 08 10:02:00 EDT 2017,2318649,"And are these behaviours as documented?"
