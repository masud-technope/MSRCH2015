thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
26622342,26622342,null,1,2,Wed Oct 29 03:30:00 EDT 2014,2163852,"<p>Among other devices, I have a Belkin WeMo switch and a 3M WiFi Thermostat. Both come with Android apps. When I open the app when at home (phone on the same WiFi subnet as the devices) the app says the devices are "local", or that the app is connected "directly" to the device. Any change I make is then directly reflected on the device.</p>		<p>If I connect from anywhere outside my house, it some how "knows" that the device is not local. If I understand correctly, it then updates its own server somewhere, and eventually the device at home gets the update.</p>		<p>How does an app do that? I want to replicate that functionality.</p>		<p>Basically, I have a Raspberry Pi that, let's say does something over GPIO and I can trigger that action by visiting a web page. On my home network, the web page is accessible at <code>http://192.168.10.25/do_something</code> ...Outside my home network, the web page is accessible at <code>http://my_custom_name.some_free_dynamic_dns.com:8080/do_something</code>. I have set up my router to port forward 8080 on WAN to 192.168.10.25:80 on LAN. This works.</p>		<p>How do I avoid having 2 pages? I want to write an app which effectively shows me the <code>192.168.10.25/do_something URL</code>. When I am at home, it should "automatically" detect that the phone is on the same network as the URL, and just open <code>192.168.10.25/do_something</code> directly ... and when I am outside, it should "automatically" detect that too and launch <code>http://my_custom_name.some_Free_dynamaic_dns.com:8080/do_something</code>. </p>		<p>The key part here is that when at home, even if my ISP is down and host names aren't resolving, it shouldn't matter because everything is local.</p>		<p>How do I go about doing this?</p>	"
26622342,26644977,26622342,2,1,Thu Oct 30 04:18:00 EDT 2014,1638010,"<p>Have your app try connecting to the Web server at 192.168.10.25 (or whatever local address you pick) first.  If there is no answer within a reasonable amount of time (5 seconds should be enough), then connect to the external webserver.</p>		<p>For security, you might want to make sure that the webserver at 192.168.10.25 is actually your webserver.  You can do this by using challenge and response and public key encryption.  I can give more details if you wish.</p>		<p>You can try to avoid waiting for the (non-existent) local webserver by looking at your phone's IP address.  If it isn't 192.168.x.y, you can assume that you are not local and go directly to the external web site.</p>		<p>If you embed 192.168.10.25 directly in your app, then no host lookup is necessary.</p>	"
