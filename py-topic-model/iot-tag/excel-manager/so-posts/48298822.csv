thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
48298822,48298822,null,1,0,Wed Jan 17 10:27:00 EST 2018,5606321,"<p>I am trying to a reliable way to send data from aws lambda function to a aws iot thing. The thing is basically a raspberry pi which is located remotely.</p>		<p>I have seen aws iot topics, but they don't seem to be reliable for my use case.</p>		<p>So far I have found the following functionalities about topics</p>		<p>Topics:</p>		<ul>	<li>Topics are asynchronous.</li>	<li>When something is added to topic all and only currently listening devices will receive the update.</li>	<li>There is no queueing.</li>	<li>No delivery notification for the publisher.</li>	</ul>		<p>In my use case I need to know if the delivery is made(retry otherwise), but if the device is not connected, the topic might lose the write.</p>		<p>Is there a way to solve this issue. Any help is much appreciated.</p>		<p>Edit:</p>		<p>What I am trying to do is send data about a user who can interact with the device from a remote server. </p>		<p>To over come the limitation of topic for my use case I came up with the following solution. </p>		<p>Step 1: Dynamo -> lambda1 -> sqs -> topic1 -> remote device</p>		<p>Step 2: remote device(after getting the data) -> topic2(acknowledgement) -> lambda2(delete message from sqs) -> Update DB about action</p>		<p>Does this solution seem reliable?</p>		<p><b>Edit 2:</b></p>		<p>Basically I am trying to send all the updates made to a DB to IOT Thing.</p>		<p>Based on answer from @dvd86,</p>		<p>Step 1: DynamoStream -> lambda1 -> sqs -> Thing shadow desired</p>		<p>Step 2: shadow reported updated -> lambda2(delete message from sqs) -> Update DB about action</p>	"
48298822,83588268,48298822,3,0,Wed Jan 17 13:07:00 EST 2018,962111,"You can do this, but this is not recommended for IOT devices. You'll have to either use a per device queue or some database tracking all devices. What's your use case?"
48298822,83613861,48298822,3,0,Thu Jan 18 04:59:00 EST 2018,5606321,"What I am trying to do is send data about a user who can interact with the device from a remote server. To over come the limitation of topic for my use case I came up with the following solution.		1) lambda1 -> sqs -> topic1 -> remote device	2) remote device(after getting the data) -> topic2(acknowledgement) -> lambda2(delete message from sqs		Is there any flaw in the above solution?"
48298822,48319020,48298822,2,0,Thu Jan 18 10:26:00 EST 2018,2146559,"<p>Your solution is not recommend because there is a lot of troubles that you are going to have to implement yourself that Aws iot already implemented.</p>		<p>Your answer for this scenario is using AWS IoT shadow: <a href="https://docs.aws.amazon.com/iot/latest/developerguide/using-thing-shadows.html" rel="nofollow noreferrer">https://docs.aws.amazon.com/iot/latest/developerguide/using-thing-shadows.html</a></p>	"
48298822,83662582,48319020,3,0,Fri Jan 19 10:17:00 EST 2018,5606321,"I like the idea of using the shadow, but even if I use thing shadow I will still have to maintain the sqs queue to maintain the list of things that need to be sent."
