thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56112465,56112465,null,1,0,Mon May 13 12:33:00 EDT 2019,5352886,"<p>I read a lot more about OPC UA which is standard for IIoT. I understand the OPC UA concepts like client-server communication. I install a few OPC nuggets (as I am .net guy) and played with it. Still, I am confused about actual implementation.</p>		<p>Can anyone help me with the start-up guide? Mostly answer the following questions,</p>		<ul>	<li>Is there any device dependency/pre-requisite to implement OPC? If	yes, how to run this check? </li>	<li>How exactly the end-to-end communication	happens? device->client->server? </li>	<li>Methods to connect with Azure IoT Hub while using OPC UA?</li>	</ul>		<p>In summary, I would like to understand a real technical implementation picture.</p>	"
56112465,56114329,56112465,2,4,Mon May 13 14:20:00 EDT 2019,869402,"<p>Your question is quite generic, but I will try to answer it anyway.</p>		<hr>		<blockquote>	  <p>Is there any device dependency/pre-requisite to implement OPC? If yes, how to run this check? </p>	</blockquote>		<p>In general there is no specific pre-requisite for the device. The only thing you need is some network connection (LAN, Wifi) and some memory. The rest really depends on your specific use-case. There are examples, where an OPC UA server is started on a small microcontroller, like the ESP32 (see <a href="https://github.com/pro/open62541-arduino" rel="nofollow noreferrer">https://github.com/pro/open62541-arduino</a>) or STM32 with LwIP (<a href="https://github.com/open62541/open62541/pull/2511" rel="nofollow noreferrer">https://github.com/open62541/open62541/pull/2511</a>)</p>		<hr>		<blockquote>	  <p>How exactly the end-to-end communication happens? device->client->server? </p>	</blockquote>		<p>In OPC UA you have Clients and Servers. A device normally offers its data through an OPC UA server. If it needs data from other devices, it has to instantiate a Client and get this data.</p>		<p>If you look into the OPC UA specification, Part 1 (can be accessed for free after registration, <a href="https://opcfoundation.org/developer-tools/specifications-unified-architecture/" rel="nofollow noreferrer">https://opcfoundation.org/developer-tools/specifications-unified-architecture/</a>) it states in chapter 6.1:</p>		<blockquote>	  <p>The OPC UA systems architecture models Clients and Servers as interacting partners. Each system may contain multiple Clients and Servers. Each Client may interact concurrently with one or more Servers, and each Server may interact concurrently with one or more Clients. An application may combine Server and Client components to allow interaction with other Servers and Clients...</p>	</blockquote>		<p>With the newly (as of 2018) released Part 14, the OPC Foundation added the specification for Publish/Subscribe. This allows devices to publish data as multicast UDP messages, and clients can subscribe to this data.</p>		<hr>		<blockquote>	  <p>Methods to connect with Azure IoT Hub while using OPC UA?</p>	</blockquote>		<p>This is a specific question for the Microsoft Azure cloud. There is the concept of an Azure IOT Edge, more specifically OPC Publisher and OPC Proxy.</p>		<p><a href="https://github.com/Azure/iot-edge-opc-publisher" rel="nofollow noreferrer">https://github.com/Azure/iot-edge-opc-publisher</a><br>	The OPC Publisher is basically mirroring local OPC UA servers in the cloud and creating an "OPC Twin".</p>		<p><a href="https://github.com/Azure/iot-edge-opc-proxy" rel="nofollow noreferrer">https://github.com/Azure/iot-edge-opc-proxy</a><br>	The OPC Proxy allows you to call methods, write variable values and interact with local OPC UA Servers from the cloud.</p>	"
