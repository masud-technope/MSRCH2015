thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
39561220,39561220,null,1,0,Sun Sep 18 18:32:00 EDT 2016,4315433,"<p>What should I change in a class from topic <a href="https://stackoverflow.com/questions/34284498/rfid-rc522-raspberry-pi-2-windows-iot?answertab=oldest#tab-top">RFID RC522 Raspberry PI 2 Windows IOT</a> if I want to connect second rfid reader via SPI?</p>		<p>I connected the second "ss line" to SPI_CE1_N pin and "reset line" to GPIO12 pin.</p>		<p>I added a constructor in class Mfrc522 and I used SPI_CONTROLLER_NAME, SPI_CHIP_SELECT_LINE, RESET_PIN as a parameters but without success.</p>	"
39561220,66479859,39561220,3,0,Tue Sep 20 03:00:00 EDT 2016,6601582,"Line 0 maps to physical pin number 24(CS0) on the Rpi2 and line1 maps to physical pin number 26(CS1). Because chip select line bind to SPI device when initializing. You can `Dispose` initialized SPI device and change its chip select line and reinitialize it."
39561220,66853133,39561220,3,0,Thu Sep 29 20:29:00 EDT 2016,4315433,"It doesn't work. During the next initialization program stops."
39561220,39782492,39561220,2,0,Fri Sep 30 01:50:00 EDT 2016,6601582,"<p>The first time initialization</p>		<pre><code>public async Task InitIO()	{	    ...	    ...		    try	    {	        settings = new SpiConnectionSettings(SPI_CHIP_SELECT_LINE);	        settings.ClockFrequency = 1000000;	        settings.Mode = SpiMode.Mode0;		        String spiDeviceSelector = SpiDevice.GetDeviceSelector();	        IReadOnlyList&lt;DeviceInformation&gt; devices = await DeviceInformation.FindAllAsync(spiDeviceSelector);		        _spi = await SpiDevice.FromIdAsync(devices[0].Id, settings);		    }	    catch (Exception ex)	    {	        throw new Exception("SPI Initialization Failed", ex);	    }		    ...	    ...	}	</code></pre>		<p>The second time initialization:</p>		<pre><code>public async Task ReInitSpi()	{	    _spi.Dispose(); //Here is important.		    try	    {	        if (settings.ChipSelectLine == 0)	        {	            settings = new SpiConnectionSettings(1); //CS1	        }	        else	        {	            settings = new SpiConnectionSettings(SPI_CHIP_SELECT_LINE); //CS0	        }		        settings.ClockFrequency = 1000000;	        settings.Mode = SpiMode.Mode0;		        String spiDeviceSelector = SpiDevice.GetDeviceSelector();	        IReadOnlyList&lt;DeviceInformation&gt; devices = await DeviceInformation.FindAllAsync(spiDeviceSelector);		        _spi = await SpiDevice.FromIdAsync(devices[0].Id, settings);		    }	    /* If initialization fails, display the exception and stop running */	    catch (Exception ex)	    {	        throw new Exception("SPI Initialization Failed", ex);	    }		}	</code></pre>		<p>Every time you use it, for example, do it like this:</p>		<pre><code>    await mfrc.ReInitSpi();		    var writeBuffer = new byte[] { 0x55, 0xaa };		    mfrc._spi.Write(writeBuffer);	</code></pre>		<p>This works for me. I hope it is helpful for you.</p>	"
39561220,66979948,39782492,3,0,Tue Oct 04 06:31:00 EDT 2016,6601582,"What's the version of your Windows IoT core?"
39561220,67005203,39782492,3,0,Tue Oct 04 17:46:00 EDT 2016,4315433,"I have 10.0.14393.0 Is it ok?"
39561220,66922800,39782492,3,0,Sun Oct 02 10:48:00 EDT 2016,4315433,"The program always stuck in line _spi = await SpiDevice.FromIdAsync(devices[0].Id, settings);"
39561220,40197189,39561220,2,0,Sat Oct 22 21:20:00 EDT 2016,4315433,"<p>Finally I solved the problem.</p>		<p>Thank You Rita Han for your help. Your code now work great. Now because I had hardware problem.</p>		<p>I connected devices as a picture:</p>		<p><a href="https://i.stack.imgur.com/RUNRl.png" rel="nofollow"><img src="https://i.stack.imgur.com/RUNRl.png" alt="Connection RFID-RC522 to the Raspberry Pi."></a></p>		<p>After connecting the oscilloscope noticed that the voltage of MISO bus is not correct. Both devices pulling down the voltage to ground. Instead of 3,3V was barely 1,24V. (The minimum voltage for 3,3V CMOS logic level 1 is 2,4V)</p>		<p><a href="https://i.stack.imgur.com/XDhwY.png" rel="nofollow"><img src="https://i.stack.imgur.com/XDhwY.png" alt="One of the devices trying to transmit."></a></p>		<p>To quickly test I used two diodes (for separating outputs) and resistor (to speed up the falling edge).</p>		<p><a href="https://i.stack.imgur.com/larwB.png" rel="nofollow"><img src="https://i.stack.imgur.com/larwB.png" alt="Solution - separation output."></a></p>		<p>Result: 3,3V - Vf = 2,56V</p>		<p><a href="https://i.stack.imgur.com/DqbRO.png" rel="nofollow"><img src="https://i.stack.imgur.com/DqbRO.png" alt="Result - separation output."></a></p>		<p>Now both devices working great. </p>		<p>I think that ultimately it would be better to use SN74HC125N.</p>		<p>BTW: Why can not change the SS pin by property? </p>		<pre><code>_spi.ConnectionSettings.ChipSelectLine = 1;	</code></pre>	"
