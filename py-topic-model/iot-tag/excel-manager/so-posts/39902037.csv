thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
39902037,39902037,null,1,1,Thu Oct 06 17:15:00 EDT 2016,6933391,"<p>My intent is to create a WebAPI for an IoT Device. It should give me informations about Hardware Ports, Device Status etc. My question now is, would it be okay to use it for controlling some of the ports. For example a LED which is connected to an output of the IoT Device is would be controlled like [GET] /api/led/{id}/on 	or 	[GET] /api/led/{id}/off</p>		<p>Would that contradict the actual meaning of a WebAPI?</p>	"
39902037,39909050,39902037,2,1,Fri Oct 07 03:48:00 EDT 2016,6720449,"<p>Yes - this is not a great structure, as the GET method is supposed to be <em>idempotent</em> AND <em>safe</em> - see <a href="http://restcookbook.com/HTTP%20Methods/idempotency/" rel="nofollow">http://restcookbook.com/HTTP%20Methods/idempotency/</a> for a more detailed definition, but practically speaking what it means to say it's <em>safe</em> is that a GET request should not modify state or data.  </p>		<p>So:</p>		<pre><code>GET /api/led/{id}/on	</code></pre>		<p>should return a representation to indicate if it is on or off, but should not actually modify the state of the led.  It could return <code>true</code> or <code>{"on" : true }</code> if it were on and <code>false</code> if it were off - whatever makes sense for your application.</p>		<p>To turn it on or off you should use a non-safe method, so what you could do is:</p>		<pre><code>PUT /api/led/{id}/on	</code></pre>		<p>and make the body <code>true</code> or <code>false</code>, or possibly <code>{"on":true}</code> or <code>{"on":false}</code></p>		<p>or possibly</p>		<pre><code>POST /api/led/{id}/on	</code></pre>		<p>to turn it on and</p>		<pre><code>POST /api/led/{id}/off	</code></pre>		<p>to turn it off.</p>		<p>All of the above are valid WebApi/REST techniques, but some may be more or less clear to the consumer depending on standard terminology/semantics in your context.</p>	"
39902037,67104708,39909050,3,0,Fri Oct 07 05:28:00 EDT 2016,6933391,"Great answer, thank you!"
