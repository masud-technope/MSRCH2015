thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
32821988,32821988,null,1,1,Mon Sep 28 11:33:00 EDT 2015,5371928,"<p>I am trying to establish real time communication between azure cloud and device like arm <a href="http://www.mbed.com/en/about-mbed/what-mbed/" rel="nofollow">mbed</a>. mbed is a C/C++ client.	The data is in cloud which is continuous and received by couple of web api.</p>		<p>Based on few condition/data processing I need to send command to arm mbed device. 	Currently device is requesting for information every few milliseconds to cloud and this is again handled by web api at cloud side.	we can say it polling from device. This works fine but all the time device needs to check if some commands are available for it or not. </p>		<p>Is there a way to improve the scenario? i.e. whenever server is having command it directly pushes the data/command to the device. Can SignalR be used here?</p>	"
32821988,32843913,32821988,2,1,Tue Sep 29 12:21:00 EDT 2015,416192,"<p>I'm not completely sure if Signalr will run on the mbed device. I have successfully used Signalr many times running on Raspberry PIs using Node and also Windows IoT core. There is very little latency. Here is one of my latest IoT projects that references the Hub.</p>		<p><a href="https://github.com/devdash/Gesticulatr/tree/master/IoTApp" rel="nofollow">https://github.com/devdash/Gesticulatr/tree/master/IoTApp</a> </p>	"
32821988,53523070,32843913,3,0,Tue Sep 29 12:53:00 EDT 2015,5371928,"@Devain: I was checking the requirement to run SignalR on client devices at http://www.asp.net/signalr/overview/getting-started/supported-platforms. It does not look like I can run it on mbed device. But still thoughtful if the scenario can be improved."
32821988,53523627,32843913,3,0,Tue Sep 29 13:06:00 EDT 2015,416192,"it looks like mbed-client is C++. There is a Cpp for signalr but it doesn't look like ARM is supported...https://github.com/aspnet/SignalR-Client-Cpp"
32821988,53523995,32843913,3,0,Tue Sep 29 13:15:00 EDT 2015,5371928,"mbed is C/C++ client. I should have included that in the question itself."
