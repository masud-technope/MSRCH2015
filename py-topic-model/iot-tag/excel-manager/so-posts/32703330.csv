thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
32703330,32703330,null,1,2,Mon Sep 21 19:46:00 EDT 2015,641985,"<p>I'm working on building a simple API to consume data sent from small network-connected sensors/devices (think arduino, raspberry pi, etc). I want to log a reasonably accurate timestamp of when an event occurred on this remote device. Due to potential connectivity issues, the event might not always get sent back to the server right away. I don't want to rely on synchronizing a clock on the device if I can avoid it, so I'm going to try sending back a parameter that just contains the number of seconds since the event occurred. So, for example, an event is detected on the device, but for some reason it gets sent to the server 5 seconds later. The data would include a number "5" signifying that this happened 5 seconds ago based on the device's internal clock. The server then would take it's own clock-time, and subtract 5 seconds to generate the timestamp.</p>		<p>I'd like to come up with a parameter name that describes this time span that makes sense. Some options may include:</p>		<ul>	<li>TimeSince</li>	<li>TimeAgo</li>	<li>DurationSince</li>	</ul>		<p>However since this is a simple numeric field, I want the name to include the unit of measure for extra clarity, such as:</p>		<ul>	<li>SecondsSince</li>	<li>SecondsAgo</li>	<li>TimeAgoSeconds</li>	</ul>		<p>Has anyone come across common and/or sensible naming conventions for this kind of thing? Time since an event, and additionally, where and how to indicate units in a parameter name? None of my naming ideas really feel "right" but perhaps some discussion here might help identify one approach as being better than another.</p>		<p>Thanks.</p>	"
32703330,53298468,32703330,3,0,Tue Sep 22 22:38:00 EDT 2015,2130006,"Your proposals are good, maybe _SecondsPassed_ or _SecondsElapsed_ would be even clearer.  		I agree that including the unit is a good idea; I would put it in the beginning, but I'm not native english, it's possible that to native speakers the opposite makes more sense.  		I wouldn't allow negative values, unless you anticipate there might be time machines among the devices.	Indeed it might be a sensible engineering practice to consider that a time machine could pop out at any time"
32703330,53298737,32703330,3,0,Tue Sep 22 22:50:00 EDT 2015,2130006,"If you want I noticed that the popular Clean Code has [some other ideas](http://www.itiseezee.com/?p=83). But I still think the ones I suggested before are better, in this case."
32703330,53253043,32703330,3,0,Mon Sep 21 21:22:00 EDT 2015,4636126,"This is clever as it mitigates timestamping issues with unreliable arduino clock, not so much with Raspberry PI which can be NTP-synchronized. I would go with one field. TimeOffset (`to` for short) which can be positive or negative and would be documented to be measured in seconds."
32703330,53299352,32703330,3,0,Tue Sep 22 23:23:00 EDT 2015,2130006,"Here's another, _SecondsSinceOccurrence_"
32703330,37663466,32703330,2,0,Mon Jun 06 17:26:00 EDT 2016,2726840,"<p>My feeling is that <code>ElapsedSeconds</code> sounds reasonable. </p>		<p>Now, are you buffering those events? If they are meant to happening "every n seconds", how do you handle a missed value? I mean, you can buffer for <code>n</code> events, if they are not transmitted than you probably would overwrite the first of those <code>n</code>. When you transmit all your buffer how do you account for the missing one? Depending on the application it would be interest to fill a NaN for the event on that moment.</p>		<p>Does this make sense?</p>	"
