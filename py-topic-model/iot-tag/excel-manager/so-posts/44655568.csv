thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44655568,44655568,null,1,1,Tue Jun 20 14:16:00 EDT 2017,2146559,"<p>I am building a web app that uses AWS IoT lifecycle events and logs device connection/disconnection.	Using AWS IoT rules, I am sending all events to a lambda and after some validation I'm saving all lifecycle events to a DynamoDB table. I'm aware that messages may be delayed, out of order and duplicates may happen.	I am validating for all these scenarios, so my connection log is as accurate as possible.</p>		<p>My question is: Is it possible for duplicate messages to come with a distinct timestamp? Such as a disconnection being sent twice with the same <code>sessionIdentifier</code> but a different timestamp?</p>	"
44655568,45991994,44655568,2,1,Fri Sep 01 00:58:00 EDT 2017,1467852,"<p>Just some guesses</p>		<ol>	<li><p>MQTT QoS 1 implies the "You might receive duplicate messages." thing. The message could be resend by one side if no ack is received from the other side. Thus, it is the same old message, and the timestamp would not change.</p></li>	<li><p>The timestamp field refers to the time the event occurred, not the time the message is sent. Thus, it should remain the same value.</p></li>	</ol>		<p>Reference: <a href="http://docs.aws.amazon.com/iot/latest/developerguide/life-cycle-events.html" rel="nofollow noreferrer">http://docs.aws.amazon.com/iot/latest/developerguide/life-cycle-events.html</a></p>	"
44655568,78961422,45991994,3,0,Fri Sep 01 12:45:00 EDT 2017,2146559,"Since the time I asked, I've been following this behavior and even talked to AWS about this.	It seems the value remains the same for the timestamp."
