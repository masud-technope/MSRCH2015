thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56555675,56555675,null,1,0,Wed Jun 12 06:11:00 EDT 2019,11193664,"<p>I'm currently doing my project on IOT.I need a GPS for that.I would like to use my Mobile's GPS for Arduino. How can the connection can be done?</p>	"
56555675,56556925,56555675,2,0,Wed Jun 12 07:38:00 EDT 2019,6700019,"<p>Actually, your question is a little broad. But I would give you some tips to do it.	If you want to get your Android phone GPS data you need to create two apps; one for the Android side and one for the Arduino side. The procedure can be something like this:</p>		<ol>	<li>Read Phone's GPS data based on what you need (E.g Lat/Long or other GPS parameters).</li>	<li>Create a JSON based on the data, e.g:</li>	</ol>		<pre><code>{	    "lat": 1.234,	    "lng": 5.678,	    "speed": 100,	    "hdop": 1.2	}	</code></pre>		<ol start="3">	<li>Send data to Arduino board through a <strong>proper connection</strong> (I will explain this).</li>	<li>Get data in Arduino board from the <strong>proper connection</strong>.</li>	<li>Parse received data (e.g JSON) and convert it to desired variables inside your Arduino code.</li>	<li>Continue your work with the received GPS data.</li>	</ol>		<p>Let me explain a little more about <strong>proper connection</strong>. There are many options to do that. A simple option is to use Android Bluetooth and based on that on the Arduino side you need a Bluetooth receiver module which there are many out there like <a href="https://components101.com/wireless/hc-05-bluetooth-module" rel="nofollow noreferrer">HC-05</a>.	There are a bunch of tutorials to get a Bluetooth module working that you can find based on your Bluetooth module like <a href="https://howtomechatronics.com/tutorials/arduino/arduino-and-hc-05-bluetooth-module-tutorial/" rel="nofollow noreferrer">this</a>.</p>		<p>Another solution for the connection is to use wifi. For the Arduino side, you can use <a href="http://esp8266.net/" rel="nofollow noreferrer">esp8266</a> and directly program it. There are some variants for it like <a href="https://www.nodemcu.com/index_en.html" rel="nofollow noreferrer">Node-MCU</a> 	 which has a builtin circuit to directly program it with an Arduino IDE software.</p>		<p>You can also go one step forward and use the newer <a href="https://docs.zerynth.com/latest/official/board.zerynth.nodemcu_esp32/docs/index.html" rel="nofollow noreferrer">ESP32</a> module which has both wifi and Bluetooth.</p>		<p>The good thing about using esp modules is that there are good APIs for creating your app and. You can find more about that on similar projects like <a href="https://github.com/kakopappa/bluetooth_android_esp32_example" rel="nofollow noreferrer">here</a> and <a href="https://www.instructables.com/id/ESP32-BLE-Android-App-Arduino-IDE-AWESOME/" rel="nofollow noreferrer">here</a>.</p>	"
56555675,99696594,56556925,3,0,Wed Jun 12 08:56:00 EDT 2019,11193664,"Actually I'm completely new to programming and IoT.. Can you explain in some easy words?"
56555675,99696822,56556925,3,0,Wed Jun 12 09:03:00 EDT 2019,6700019,"I gave you an insight into doing the job. But of course, you need to know coding and electronics a little bit. You need to read more about it. There are good samples out there. I'm not an Android developer and you need to figure it out by yourself. but on Hardware side, you can get your hands on an ESP module and follow its basic tutorial to get started."
56555675,99721168,56556925,3,1,Wed Jun 12 22:32:00 EDT 2019,8968982,"This is a relatively complicated project for someone who is "completely new". I suggest you start out with some simpler projects and gradually build up to the phone integration bits"
