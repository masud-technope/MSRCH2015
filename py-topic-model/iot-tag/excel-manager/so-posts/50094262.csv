thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
50094262,50094262,null,1,0,Mon Apr 30 05:07:00 EDT 2018,2841423,"<p>I have created a simulation of a device using Node red . Basically the device send UDP packets every second until it receives an acknowledgement. I have done that successfully</p>		<p>The problem is am trying to simulate 10000 of such devices. Hence I would need to automate the device creation/enrollment process. Is there a way I can achieve this in Node-red</p>		<p>The json below shows how one device is supposed to behave. it sends a UDP packet to a server and waits for an ACK . If the ACK is not received within a time period, It resends the packet.</p>		<p>Here is the node-red JSON of one device. </p>		<p>[{"id":"a53cc152.31f27","type":"comment","z":"d51aa60c.64d028","name":"Listener","info":"","x":106,"y":134,"wires":[]},{"id":"a972f44d.eaa9e8","type":"comment","z":"d51aa60c.64d028","name":"Sender","info":"","x":136,"y":332,"wires":[]},{"id":"ff1376ae.e08a58","type":"function","z":"d51aa60c.64d028","name":"stringToBytes ","func":"//var binary = msg.payload.toString(2);\n// 6 because it's zero based count\n//var bit7 = binary.charAt(6);\n//msg.payload = bit7;\n//return msg;\n  str=msg.payload\n  var ch, st, re = [];\n  for (var i = 0; i &lt; str.length; i++ ) {\n    ch = str.charCodeAt(i);  // get char \n    st = [];                 // set up \"stack\"\n    do {\n      st.push( ch &amp; 0xFF );  // push byte to stack\n      ch = ch >> 8;          // shift value down by 1 byte\n    }  \n    while ( ch );\n    // add stack contents to result\n    // done because chars have \"wrong\" endianness\n    re = re.concat( st.reverse() );\n  }\n  msg.payload=re\n  // return an array of bytes\n  return msg;\n\n","outputs":1,"noerr":0,"x":566,"y":381,"wires":[["98c6c5a8.aaf1c8"]]},{"id":"85d26758.5ee0f8","type":"function","z":"d51aa60c.64d028","name":"ConfigMessge","func":"msg.payload='830546613660520101010201225A8622475A862247E96665D15684EF030000242D0000000000E308000001FFA94F0A1F00FF0B08000000000000002E50000000000000000000000000000000000000000000000000'\nmsg.ip = '127.0.0.1'\nmsg.port='57920'\nreturn msg;","outputs":1,"noerr":0,"x":353,"y":375,"wires":[["ff1376ae.e08a58"]]},{"id":"c83f781f.ae3428","type":"debug","z":"d51aa60c.64d028","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":919,"y":632,"wires":[]},{"id":"98c6c5a8.aaf1c8","type":"http request","z":"d51aa60c.64d028","name":"ParserAPIRequest","method":"GET","ret":"txt","url":"http:/api","tls":"","x":590,"y":529,"wires":[["eac23a48.b479d8","66759bdf.7fd864"]]},{"id":"4a724471.e5158c","type":"inject","z":"d51aa60c.64d028","name":"TimerTrigger","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":148,"y":377,"wires":[[]]},{"id":"eac23a48.b479d8","type":"http response","z":"d51aa60c.64d028","name":"ParserAPIResponse","statusCode":"200","headers":{"content-type":"application/json"},"x":602,"y":614,"wires":[]},{"id":"66759bdf.7fd864","type":"function","z":"d51aa60c.64d028","name":"CheckForAck?","func":"// Loop function\n\ncontext.loops = context.loops || 0;\nmsg\nif (context.loops!==0)\n{\n\n\ncontext.ACK =0\ncontext.ACK=flow.get('ACK')|| 0;\n//msg.payload=context.ACK\nif(context.ACK === 1 ) \n  {  \n  //\n//return msg;\n    return [null, null];\n        }\nelse\n{\n    //  msg.payload='No ACK triggered'+ context.ACK\n    context.loops = context.loops + 1\n   \n}\n    \n    \n}\n     return [msg, msg];\n","outputs":"2","noerr":0,"x":857,"y":364,"wires":[["faa8c055.7dd7d","f8eb8444.61e8f8","a3286965.3120d8"],[]]},{"id":"a3286965.3120d8","type":"udp out","z":"d51aa60c.64d028","name":"Resend Packet","addr":"127.0.0.1","iface":"","port":"","ipv":"udp4","outport":"13500","base64":false,"multicast":"false","x":1116,"y":230,"wires":[]},{"id":"faa8c055.7dd7d","type":"debug","z":"d51aa60c.64d028","name":"Console.log","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1095,"y":494,"wires":[]},{"id":"f8eb8444.61e8f8","type":"delay","z":"d51aa60c.64d028","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":848,"y":420,"wires":[["66759bdf.7fd864"]]},{"id":"637d9a4c.1182d4","type":"udp in","z":"d51aa60c.64d028","name":"RecieveAck","iface":"","port":"13501","ipv":"udp4","multicast":"false","group":"","datatype":"utf8","x":173,"y":177,"wires":[["8b85adf3.38d6d"]]},{"id":"8b85adf3.38d6d","type":"switch","z":"d51aa60c.64d028","name":"AssignAck","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"'ACK'","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":384,"y":193,"wires":[["1d63307c.82e67"]]},{"id":"66ffd66c.b3c118","type":"function","z":"d51aa60c.64d028","name":"StoreAckInContext","func":"context.ACK=0\nflow.set('ACK',1);\nmsg.payload=flow.get('ACK')\n\nreturn msg;","outputs":1,"noerr":0,"x":717,"y":178,"wires":[["be667fba.f6701"]]},{"id":"be667fba.f6701","type":"debug","z":"d51aa60c.64d028","name":"Console.log","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":909,"y":155,"wires":[]},{"id":"1d63307c.82e67","type":"change","z":"d51aa60c.64d028","name":"Reset","rules":[{"t":"set","p":"ACK","pt":"flow","to":"0","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":510,"y":165,"wires":[["66ffd66c.b3c118"]]},{"id":"68ded0.44db513","type":"status","z":"d51aa60c.64d028","name":"","scope":["66759bdf.7fd864"],"x":667,"y":282,"wires":[["a3286965.3120d8"]]}]</p>	"
50094262,87206510,50094262,3,0,Mon Apr 30 06:44:00 EDT 2018,504554,"Without knowing a LOT more about what you are trying to do this question is impossible to answer"
50094262,87223329,50094262,3,0,Mon Apr 30 15:03:00 EDT 2018,5640850,"What do you mean by "automate the device creation/enrollment process"? You should be able to build and send 1000's of udp messages without enrolling devices -- is this a cloud deployment?"
