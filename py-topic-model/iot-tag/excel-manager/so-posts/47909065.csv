thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
47909065,47909065,null,1,1,Wed Dec 20 15:09:00 EST 2017,6859033,"<p>Recently I started working on LoRa-enabled devices and noticed that some of them do not handle case when they are unprovisioned from Network Server. This happens a lot during development (especially if NS is under development too).</p>		<p>Here is what happening:</p>		<ul>	<li>LoRa device provisioned on Network/App Server.</li>	<li>LoRa device sends JOIN and succeed.</li>	<li>I deleted the device entity on the Network Server and add it again. This cause deletion of the session keys that are generated during OTAA and cleanup of the devEUI</li>	<li>LoRa device keep sending the data, and it is rejected on the server.</li>	<li>LoRa device does nothing to handle it and keeps sending data.</li>	</ul>		<p>Some devices send JOIN again when power-cycled. But not all devices can be power-cycled at all! Some meters I've seen rejected to work after their hard-wired battery that when re-attached!</p>		<p>Is there any "common" approach of how device <em>should</em> detect/handle such kind of "disconnection" from NS? </p>	"
47909065,82788629,47909065,3,0,Wed Dec 20 16:33:00 EST 2017,5785362,"Once the server sent back a JOIN ACCEPT message, it has established a contract with the device. You deleting the device entity on the server simply breaks that contract."
47909065,82795255,47909065,3,0,Wed Dec 20 20:19:00 EST 2017,6859033,""Contract violation" can occur due to many reasons, intentional or not. no matter what, a device should stay operational, right? I cannot see (so far) that LoRaWAN defines anything that can help detect that "violation""
47909065,82795311,47909065,3,0,Wed Dec 20 20:22:00 EST 2017,5785362,"The device **stays** operational. You just told the server it should no longer listen to it. The device itself can't do much about it. If the server wouldn't simply ignore it, DOS attacks would probably be way too simple."
47909065,48726706,47909065,2,0,Sat Feb 10 23:31:00 EST 2018,9344136,"<p>An end-device could periodically check the session by requesting a downlink for the network server. </p>		<p>Sending a confirmed packet or a link check request should elicit a response from the server. </p>		<p>ADR will request a downlink after 64 uplinks and a response should be received.  If no response is seen after 32 additional uplinks the datarate is reduced. If the lowest datarate is reached the default channels are reenabled.	The end-device does not considered the session lost or disconnected, it will continue to send packets until the battery is exhausted.</p>		<p>An application should determine when the session has been lost depending on its requirements and expectations.</p>	"
47909065,88604956,48726706,3,0,Mon Jun 11 14:01:00 EDT 2018,6859033,"That's a good way, thanks!"
47909065,50800091,47909065,2,0,Mon Jun 11 14:28:00 EDT 2018,6859033,"<p>Answering to my own question: </p>		<p>There is a LinkCheckReq MAC command described in section 5.2 "Link Check commands (LinkCheckReq, LinkCheckAns)" of LoRaWAN spec 1.1, which should help determining whether device has a link or not.</p>		<p><em>Source: <a href="http://net868.ru/assets/pdf/LoRaWAN-v1.1.pdf" rel="nofollow noreferrer">LoRaWAN spec 1.1</a></em></p>	"
