thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56904682,56904682,null,1,1,Fri Jul 05 14:10:00 EDT 2019,9415921,"<p>I want to use TLS 1.3 for my secure communication with HiveMQ. I've configured the HiveMQ community edition server <code>config.xml</code> file to specify to use TLS 1.3 cipher suites and I pointed it to the keystore containing a key pair for a 256-bit Elliptic curve key (EC NOT DSA) using the curve: <code>secp256r1</code> (which is one of the few curves supported by TLS 1.3). The 256-bit key pair is for this TLS 1.3 cipher suite I want to use: <code>TLS_AES_128_GCM_SHA256</code>. I'm also generated a 384-bit elliptic curve key for <code>TLS_AES_256_GCM_SHA384</code> but I'm just focusing on <code>TLS_AES_128_GCM_SHA256</code> as the AES 256 suite will work if I get the AES 128 to work. I already generated certificates for both of the key pairs and put them both in the <code>cacerts</code> file in the <code>JAVA HOME Folder</code>. I'm still getting a  javax.net.ssl.SSLHandshakeException: </p>		<p><code>javax.net.ssl.SSLException: closing inbound before receiving peer's close_notify</code></p>		<p>I've tried using this TLS 1.2 cipher suite: <code>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</code> (with the appropriate certificate) and it worked without any issues so it appears this issue is specifically with TLS 1.3. My project is in <code>Java 12.0.1</code>. I noticed that while the HiveMQ server recognized TLSv1.3 it enabled TLSv1.2 protocols, but didn't say it enabled any TLSv1.3 cipher suites. Do I need to manually enable TLSv1.3 cipher suites in HiveMQ somehow because it doesn't look like they are on even when specifying the specific protocol? I left a copy of the servers console output below along with Java code and the exception. </p>		<hr>		<p><strong>Update</strong>: I've specified the client to use TLS1.3 with the <code>.protocols()</code> method in <code>sslConfig</code>. I've tried manually adding the cipher suite: <code>TLS_AES_128_GCM_SHA256</code> to the config.xml file but I get an SSL exception error this time. The updated outputs and exceptions are below. I suspect that HiveMQ is filtering out the cipher suite that I'm trying to use. I tried creating an SSL engine as a test and used <code>.getEnabledCipherSuites()</code> and <code>getSupportedCipherSuites()</code> and it says that the TLS 1.3 cipher suites above supported by my JVM and also the TLS1.3 protocol itself. </p>		<p>HiveMQ Server Console Output (From <code>run.sh</code> file with DEBUG enabled in <code>logback.xml</code>):</p>		<pre><code>2019-07-06 12:06:42,394 INFO  - Starting HiveMQ Community Edition Server	2019-07-06 12:06:42,398 INFO  - HiveMQ version: 2019.1	2019-07-06 12:06:42,398 INFO  - HiveMQ home directory: /Users/chigozieasikaburu/git/IoT-HiveMqtt-Community-Edition/build/zip/hivemq-ce-2019.1	2019-07-06 12:06:42,508 INFO  - Log Configuration was overridden by /Users/someuser/git/IoT-HiveMqtt-Community-Edition/build/zip/hivemq-ce-2019.1/conf/logback.xml	2019-07-06 12:06:42,619 DEBUG - Reading configuration file /Users/someuser/git/IoT-HiveMqtt-Community-Edition/build/zip/hivemq-ce-2019.1/conf/config.xml	2019-07-06 12:06:42,838 DEBUG - Adding TCP Listener with TLS of type TlsTcpListener on bind address 0.0.0.0 and port 8883.	2019-07-06 12:06:42,839 DEBUG - Setting retained messages enabled to true	2019-07-06 12:06:42,839 DEBUG - Setting wildcard subscriptions enabled to true	2019-07-06 12:06:42,839 DEBUG - Setting subscription identifier enabled to true	2019-07-06 12:06:42,839 DEBUG - Setting shared subscriptions enabled to true	2019-07-06 12:06:42,839 DEBUG - Setting maximum qos to EXACTLY_ONCE 	2019-07-06 12:06:42,840 DEBUG - Setting topic alias enabled to true	2019-07-06 12:06:42,840 DEBUG - Setting topic alias maximum per client to 5	2019-07-06 12:06:42,840 DEBUG - Setting the number of max queued messages  per client to 1000 entries	2019-07-06 12:06:42,841 DEBUG - Setting queued messages strategy for each client to DISCARD	2019-07-06 12:06:42,841 DEBUG - Setting the expiry interval for client sessions to 4294967295 seconds	2019-07-06 12:06:42,841 DEBUG - Setting the expiry interval for publish messages to 4294967296 seconds	2019-07-06 12:06:42,841 DEBUG - Setting the server receive maximum to 10	2019-07-06 12:06:42,841 DEBUG - Setting keep alive maximum to 65535 seconds	2019-07-06 12:06:42,841 DEBUG - Setting keep alive allow zero to true	2019-07-06 12:06:42,842 DEBUG - Setting the maximum packet size for mqtt messages 268435460 bytes	2019-07-06 12:06:42,842 DEBUG - Setting global maximum allowed connections to -1	2019-07-06 12:06:42,842 DEBUG - Setting the maximum client id length to 65535	2019-07-06 12:06:42,842 DEBUG - Setting the timeout for disconnecting idle tcp connections before a connect message was received to 10000 milliseconds	2019-07-06 12:06:42,842 DEBUG - Throttling the global incoming traffic limit 0 bytes/second	2019-07-06 12:06:42,842 DEBUG - Setting the maximum topic length to 65535	2019-07-06 12:06:42,843 DEBUG - Setting allow server assigned client identifier to true	2019-07-06 12:06:42,843 DEBUG - Setting validate UTF-8 to true	2019-07-06 12:06:42,843 DEBUG - Setting payload format validation to false	2019-07-06 12:06:42,843 DEBUG - Setting allow-problem-information to true	2019-07-06 12:06:42,843 DEBUG - Setting anonymous usage statistics enabled to false 	2019-07-06 12:06:42,845 INFO  - This HiveMQ ID is JAzWT	2019-07-06 12:06:43,237 DEBUG - Using disk-based Publish Payload Persistence	2019-07-06 12:06:43,259 DEBUG - 1024.00 MB allocated for qos 0 inflight messages	2019-07-06 12:06:45,268 DEBUG - Initializing payload reference count and queue sizes for client_queue persistence.	2019-07-06 12:06:45,690 DEBUG - Diagnostic mode is disabled	2019-07-06 12:06:46,276 DEBUG - Throttling incoming traffic to 0 B/s	2019-07-06 12:06:46,277 DEBUG - Throttling outgoing traffic to 0 B/s	2019-07-06 12:06:46,321 DEBUG - Set extension executor thread pool size to 4	2019-07-06 12:06:46,321 DEBUG - Set extension executor thread pool keep-alive to 30 seconds	2019-07-06 12:06:46,336 DEBUG - Building initial topic tree	2019-07-06 12:06:46,395 DEBUG - Started JMX Metrics Reporting.	2019-07-06 12:06:46,491 INFO  - Starting HiveMQ extension system.	2019-07-06 12:06:46,536 DEBUG - Starting extension with id "hivemq-file-rbac-extension" at /Users/someuser/git/IoT-HiveMqtt-Community-Edition/build/zip/hivemq-ce-2019.1/extensions/hivemq-file-rbac-extension	2019-07-06 12:06:46,558 INFO  - Starting File RBAC extension.	2019-07-06 12:06:46,795 INFO  - Extension "File Role Based Access Control Extension" version 4.0.0 started successfully.	2019-07-06 12:06:46,818 INFO  - Enabled protocols for TCP Listener with TLS at address 0.0.0.0 and port 8883: [TLSv1.3]	2019-07-06 12:06:46,819 INFO  - Enabled cipher suites for TCP Listener with TLS at address 0.0.0.0 and port 8883: []	2019-07-06 12:06:46,823 WARN  - Unknown cipher suites for TCP Listener with TLS at address 0.0.0.0 and port 8883: [TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384]	2019-07-06 12:06:46,827 INFO  - Starting TLS TCP listener on address 0.0.0.0 and port 8883	2019-07-06 12:06:46,881 INFO  - Started TCP Listener with TLS on address 0.0.0.0 and on port 8883	2019-07-06 12:06:46,882 INFO  - Started HiveMQ in 4500ms	2019-07-06 12:10:32,396 DEBUG - SSL Handshake failed for client with IP UNKNOWN: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)	2019-07-06 12:10:38,967 DEBUG - SSL Handshake failed for client with IP UNKNOWN: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)	2019-07-06 12:23:29,721 DEBUG - SSL Handshake failed for client with IP UNKNOWN: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)	2019-07-06 12:23:35,990 DEBUG - SSL Handshake failed for client with IP UNKNOWN: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)	2019-07-06 12:24:17,436 DEBUG - SSL Handshake failed for client with IP UNKNOWN: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)	2019-07-06 12:24:29,160 DEBUG - SSL Handshake failed for client with IP UNKNOWN: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)	</code></pre>		<p>Java Code: </p>		<pre><code>Mqtt5BlockingClient subscriber = Mqtt5Client.builder()	        .identifier(UUID.randomUUID().toString()) // the unique identifier of the MQTT client. The ID is randomly generated between 	        .serverHost("localhost")  // the host name or IP address of the MQTT server. Kept it localhost for testing. localhost is default if not specified.	        .serverPort(8883)  // specifies the port of the server	        .addConnectedListener(context -&gt; ClientConnectionRetreiver.printConnected("Subscriber1"))        // prints a string that the client is connected	        .addDisconnectedListener(context -&gt; ClientConnectionRetreiver.printDisconnected("Subscriber1"))  // prints a string that the client is disconnected	        .sslConfig()	            .cipherSuites(Arrays.asList("TLS_AES_128_GCM_SHA256"))	            .applySslConfig()	        .buildBlocking();  // creates the client builder                	         subscriber.connectWith() // connects the client	            .simpleAuth()	                .username("user1")                                                                                                                      	                .password("somepassword".getBytes())	                .applySimpleAuth()	            .send();	</code></pre>		<p>Exception (using Ssl debugging tool: -Djavax.net.debug=ssl):</p>		<pre><code>SubThread1 is running.	javax.net.ssl|DEBUG|0F|nioEventLoopGroup-2-1|2019-07-05 15:29:47.379 EDT|SSLCipher.java:463|jdk.tls.keyLimits:  entry = AES/GCM/NoPadding KeyUpdate 2^37. AES/GCM/NOPADDING:KEYUPDATE = 137438953472	javax.net.ssl|ALL|0F|nioEventLoopGroup-2-1|2019-07-05 15:29:47.761 EDT|SSLEngineImpl.java:752|Closing outbound of SSLEngine	javax.net.ssl|ALL|0F|nioEventLoopGroup-2-1|2019-07-05 15:29:47.762 EDT|SSLEngineImpl.java:724|Closing inbound of SSLEngine	javax.net.ssl|ERROR|0F|nioEventLoopGroup-2-1|2019-07-05 15:29:47.765 EDT|TransportContext.java:312|Fatal (INTERNAL_ERROR): closing inbound before receiving peer's close_notify (	"throwable" : {	  javax.net.ssl.SSLException: closing inbound before receiving peer's close_notify	    at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:133)	    at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:117)	    at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:307)	    at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:263)	    at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:254)	    at 		java.base/sun.security.ssl.SSLEngineImpl.closeInbound(SSLEngineImpl.java:733)	        at io.netty.handler.ssl.SslHandler.setHandshakeFailure(SslHandler.java:1565)		    at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1049)	    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)	    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)	    at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)	    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1429)	    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)	    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)	    at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(De		faultChannelPipeline.java:947)	        at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:826)	        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)	        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)	        at io.nett		y.channel.nio.NioEventLoop.run(NioEventLoop.java:474)	    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)	    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)	    at java.base/java.lang.Thread.run(Thread.java:835)}		    )	    Subscriber1 disconnected.	    Exception in thread "SubThread1" com.hivemq.client.mqtt.exceptions.ConnectionClosedException: Server closed connection without DISCONNECT.	        at com.hivemq.client.internal.mqtt.MqttBlockingClient.connect(MqttBlockingClient.java:91)	        at 		com.hivemq.client.internal.mqtt.message.connect.MqttConnectBuilder$Send.send(MqttConnectBuilder.java:196)	    at com.main.SubThread.run(SubThread.java:90)	    at java.base/java.lang.Thread.run(Thread.java:835)	</code></pre>	"
56904682,100373994,56904682,3,0,Sat Jul 06 15:58:00 EDT 2019,11300379,"You have to configure the log level in the logback.xml file: change <root level="INFO"> to <root level="DEBUG"> and then the debug logs are printed to the console output"
56904682,100374514,56904682,3,0,Sat Jul 06 16:32:00 EDT 2019,9415921,"@SgtSilvio I added `<root level="INFO"> to <root level="DEBUG">` to the `logback.xml` file in this path: `/HiveMQ-Community-Edition/build/zip/hivemq-ce-2019.1/conf/logback.xml` and I see the debug console output now but it doesn't say default cipher suites in the console output. I tried running my program (Client) a few times and it printed out "No appropriate protocol again: I updated the stack post with the new debug console's output."
56904682,100391831,56904682,3,0,Sun Jul 07 18:31:00 EDT 2019,9415921,"@SgtSilvio Ok I though as much since my cipher suites definitely enable by my JVM when I tested using an SSL engine. I added the issue here: (https://github.com/hivemq/hivemq-community-edition/issues/27#issue-464979438) . Is there anyway I could do a quick fix by manually disabling the filtering? I saw some code in a JAR file relating to filtering when troubleshooting."
56904682,100456943,56904682,3,0,Tue Jul 09 19:34:00 EDT 2019,9415921,"@SgtSilvio I'm curious, are you able to get a TLS 1.3 cipher suite like  `TLS_AES_128_GCM_SHA256` (or any) to work at all on HiveMQ Community Edition? I do think this is indeed a bug. I tested TLS 1.2 with `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384` too and it works flawlessly. The server just never enables any TLS 1.3 cipher suites. If you have any other ideas of trying to disabling the filtering or something else, feel free to let me know."
56904682,100383182,56904682,3,1,Sun Jul 07 07:55:00 EDT 2019,11300379,"It seems like the HiveMQ Community Edition erroneously filters out your TLS 1.3 cipher suite. Please create an issue on GitHub (https://github.com/hivemq/hivemq-community-edition/issues) where you describe your bug and link this stackoverflow question."
56904682,100373547,56904682,3,0,Sat Jul 06 15:26:00 EDT 2019,11300379,"Could you please add the debug log of HiveMQ. It should print a log starting with "Default cipher suites (JDK) ...", so you can find out what ciphers are actually supported by your JVM."
56904682,100373893,56904682,3,0,Sat Jul 06 15:52:00 EDT 2019,9415921,"@SgtSilvio I've tried searching for a log with that name but couldn't find anything. Do you know the exact name of the file or file path that it would be generated? I checked all log files but only found: `event.log` and `hivemq.somedate.log` which are unrelated."
56904682,100401942,56904682,3,0,Mon Jul 08 07:55:00 EDT 2019,11300379,"Replacing `SupportedCipherSuiteFilter.INSTANCE` with `IdentityCipherSuiteFilter.INSTANCE` in `SslUtil` at line 108 should disable the filtering."
56904682,100412945,56904682,3,0,Mon Jul 08 13:48:00 EDT 2019,9415921,"@SgtSilvio I tried replacing `SupportedCipherSuiteFilter.INSTANCE` with `IdentityCipherSuiteFilter.INSTANCE` in `SslUtil` line 108 in HiveMQ community edition and it didn't fix it unfortunately. I still get the same console output and the same exception. I even tried changing `SupportedCipherSuiteFilter.INSTANCE` in HiveMQ Client and all other filter instances to IdentityCipherSuiteFilter.INSTANCE with no luck."
56904682,56908208,56904682,2,1,Fri Jul 05 19:14:00 EDT 2019,11300379,"<p>It looks like you have to set the protocol to "TLSv1.3" in both server and client.</p>		<p>Client:</p>		<pre class="lang-java prettyprint-override"><code>    ...	    .sslConfig()	        .cipherSuites(Arrays.asList("TLS_AES_128_GCM_SHA256"))	        .protocols(Arrays.asList("TLSv1.3"))	        .applySslConfig()	    ...	</code></pre>		<p>HiveMQ:</p>		<pre class="lang-xml prettyprint-override"><code>    &lt;tls-tcp-listener&gt;	        &lt;tls&gt;	            ...	            &lt;protocols&gt;	                &lt;protocol&gt;TLSv1.3&lt;/protocol&gt;	            &lt;/protocols&gt;	            &lt;cipher-suites&gt;	                &lt;cipher-suite&gt;TLS_AES_128_GCM_SHA256&lt;/cipher-suite&gt;	            &lt;/cipher-suites&gt;	            ...	        &lt;/tls&gt;	    &lt;/tls-tcp-listener&gt;	</code></pre>	"
56904682,100361052,56908208,3,0,Fri Jul 05 19:17:00 EDT 2019,9415921,"I should have mentioned that I tried setting the protocol on the client side too but I get a: javax.net.ssl.SSLException: closing inbound before receiving peer's close_notify instead. I also tried updating my project to Java 12 so I will update the post too."
56904682,100361177,56908208,3,0,Fri Jul 05 19:24:00 EDT 2019,11300379,"I just recognized that the cipher suite you are trying to use is not enabled on the server side, look at the log output "Enabled cipher suites ...". I updated my answer"
56904682,100361444,56908208,3,0,Fri Jul 05 19:38:00 EDT 2019,9415921,"I still get the same error even when adding the specific suite to the config.xml file. It looks the server isn't recognizing it and marks it as "unknown". I updated the post."
