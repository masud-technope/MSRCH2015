thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54340136,54340136,null,1,1,Thu Jan 24 05:52:00 EST 2019,10324651,"<p>I am new to the Computer Vision field and looking for your guidance to identify approach to tackle the following scenario:</p>		<pre><code>What approach to follow to do Quality Control on small and thin metal rings using Computer Vision	</code></pre>		<p>Putting below the detailed requirement(this is the best I can share):</p>		<p>To begin with, I have attached a picture of the ring we need to do QC of.</p>		<p><a href="https://i.stack.imgur.com/EMKvj.jpg" rel="nofollow noreferrer">Ring_for_QC</a></p>		<ul>	<li>Ring diameter = 3 inch</li>	</ul>		<p>Following checks we need to do:</p>		<p>1.Surface coating of the ring peeled off</p>		<p>2.Portion of ring chipped off</p>		<p>3.Scratch on the ring's Surface</p>		<p>4.Width of the ring is uneven</p>		<p>5.Dent on the ring</p>		<p>6.Entire surface of the ring is not completely horizontal to the plane; 	may be due to some dent a part of the ring is resting on the plane surface creating some 1 or 2 degree angle	(I have marked no.6 as 'uneven surface' in the attached picture)</p>		<p>I have also attached another picture marking the quality issues found on a random ring.<a href="https://i.stack.imgur.com/W9lke.jpg" rel="nofollow noreferrer">elevated view with marked QC issues</a></p>		<p>Scenario:</p>		<ul>	<li><p>One single ring can have one or more than one of the above mentioned 6 defects</p></li>	<li><p>Issue 1 &amp; 3 can occur at either surface of the ring and we need to check both the surfaces</p></li>	<li><p>We need to QC on one single ring at a time</p></li>	</ul>		<p>Challenge:	- Need to set up a work station to capture image or video of each ring under check</p>		<ul>	<li><p>How many cameras will be there in that work station and what would be the angle for the camera</p></li>	<li><p>As we need to check both the sides of the ring we need to decide whether:</p>		<ol>	<li><p>we will place the ring on a trasperent surface and take image	or</p></li>	<li><p>we need to flip the ring after image is taken on one side</p></li>	</ol></li>	<li><p>Next challenge is what computer vision technique we should employ to identify all these issues</p></li>	</ul>		<p>For the time being we are doing some research around opencv's background substraction methods</p>		<p>It will be helpful to get some insight from you on 	what should be a better/feasible approach</p>	"
54340136,95636975,54340136,3,0,Tue Jan 29 02:57:00 EST 2019,10324651,"@Rethunk I will check if I can share more specification about the requirement(some restrictions are there for that I had to post a generic overview). Else as you said you have decade long experience, a quick guidance from you for a student project should be good"
54340136,95716448,54340136,3,0,Thu Jan 31 05:53:00 EST 2019,10324651,"@Rethunk: Hi, could you please be able to provide some sort of guidance?any lead to what approach to follow would be really helpful"
54340136,95733077,54340136,3,0,Thu Jan 31 14:16:00 EST 2019,1104179,"Answer posted. For your own sake, you'll want to work on the specs yet more. Thanks for the details, but you'll see it's still hard to narrow down what algorithmic techniques may work best. You'll also need to spend more time figuring out what lighting will work."
54340136,95531012,54340136,3,2,Fri Jan 25 02:31:00 EST 2019,1104179,"First step: get a better specification about what "quality control" means in this context. Dimensions? Appearance? Presence/absence of scratches? Dents?"
54340136,95586219,54340136,3,0,Sun Jan 27 10:17:00 EST 2019,10324651,"@Rethunk: yes Quality Control' as in identifying dents, scratches and any change in specified dimensions. Could you please able to now put some light on the approach?"
54340136,95626863,54340136,3,0,Mon Jan 28 18:18:00 EST 2019,1104179,"I'm trying to help, and I've done exactly this work for decades, so please understand that when I suggest writing down specs I don't do so lightly. You mentioned an "approach" but no single approach will work here: each type of defect is likely to require it's own approach. If this is for a student project I can give you some quick guidance. If this is for a customer, you will NOT succeed without writing specs. At least update your question to include a list of defects to find, some quantification for the pass/fail criteria, and one image demonstrating each type of defect."
54340136,95678723,54340136,3,0,Wed Jan 30 06:45:00 EST 2019,10324651,"Thanks @Rethunk. I have updated my original post above with the requirement specifications(as detailed as I can share).As you have decade long experience in this field, it will be helpful to get some insight from you on what should be a better/feasible approach to our problem statement"
54340136,95745160,54340136,3,0,Thu Jan 31 20:22:00 EST 2019,1104179,"You’re welcome. Good luck!"
54340136,95603865,54340136,3,0,Mon Jan 28 06:14:00 EST 2019,10324651,"@Rethtill Noted the suggestions on specification gathering. Still I believe my description of the requirements gives a fare overview of what solution I am looking for. It would have been appreciated if you would have been able to provide any high level approach of how to tackle this kind of problem statement..if you have any"
54340136,95735635,54340136,3,0,Thu Jan 31 15:22:00 EST 2019,10324651,"@RethunkThanks a ton! much appreciated"
54340136,95589578,54340136,3,0,Sun Jan 27 13:53:00 EST 2019,1104179,"Your specification isn’t yet clear enough. You need to list AND quantify every type of defect or quality to be detected. From this list you can determine what vision methods may be relevant. Without this list, you will not succeed. Gathering specifications is standard practice in the field—for companies that survive, anyway—and projects that fail to gather specs will typically fail and/or lose money. Your post needs to be edited to follow StackOverflow standards and pose a more specific question. If this is a real-world problem, you need to be even more specific. There are no shortcuts."
54340136,95672335,54340136,3,0,Tue Jan 29 23:46:00 EST 2019,1104179,"Okay, I’ll comment again once you’ve posted more details."
54340136,54349937,54340136,2,-1,Thu Jan 24 15:20:00 EST 2019,10911905,"<p>You can see how to makes face recognition.</p>		<ol>	<li><p>Face detection.</p></li>	<li><p>Face alignment and normalization.</p></li>	<li><p>Features extraction.</p></li>	<li><p>Comparing features with pattern.</p></li>	</ol>		<p>But in your case, you can skip paragraph 3 and compare 2 with the reference image. Depending on the conditions, additional filtering may be necessary.</p>	"
54340136,95516540,54349937,3,0,Thu Jan 24 15:54:00 EST 2019,10324651,"thanks for your response. You mean to identify dent in a circular metal ring I can follow the same approach as face detection?"
54340136,54462512,54340136,2,0,Thu Jan 31 14:15:00 EST 2019,1104179,"<p>Since this is for a student project I'll emphasize image processing more than other aspects of an application. See the bottom section for considerations for real-world applications.</p>		<p>That aside, a general comment: implementing vision for quality control (QC) is hard to get right. If the product to be inspected is cheap (e.g. a ring, a small plastic thing), and if the result of the vision inspection is a borderline pass/fail, or uncertain, you can reject the part. If the part to be inspected is expensive (e.g. a large assembly for a tractor, individual CPUs, medical devices near the end of the production line), then you have to have very well defined specifications, and the system needs to be made as robust as possible.</p>		<p>In general, you want to optimize imaging for each type of defect. For example, the camera location, lens, and lighting to detect scratches may be quite different than what is needed for dimensional gauging (a.k.a. dimensional measurement).</p>		<p><strong>Machine Vision vs. Computer Vision</strong>	When you search online for algorithms, equipment, and techniques specific to vision for industrial automation, including the quality control of parts on production lines, then for English-language websites favor the term "machine vision" instead of "computer vision."</p>		<p><a href="https://en.wikipedia.org/wiki/Machine_vision" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/Machine_vision</a></p>		<p>Machine vision is the common industry term for image processing (+ cameras + lighting + ...) for industrial use. Although different people may use different terminology, and the terminology isn't as important as learning techniques, you'll find a lot of material by searching for "machine vision." The term "computer vision" tends to be used for non-industrial applications, and for academic research, though in languages other than English the terms "machine vision" and "computer vision" may be the same. By comparison, "medical imaging" is similar to machine vision, but involves application of image processing to medical applications.</p>		<p><strong>Lighting</strong></p>		<p>Most importantly, you must control the lighting. Ambient lighting, such as desk lamps, overhead lights, etc., are not only useless for a vision system inspecting parts in production, but will typically interfere with image processing. You might find <em>some</em> defects sometimes with poorly controlled light, but to generate the most consistent results, you'll need to set up lights in specific locations, run the lights at specific, verifiable intensities, and have your vision system detect when something has gone wrong with the lighting.</p>		<p>There are "machine vision lights" designed especially for specific applications such as finding scratches in shiny surfaces, making shiny surfaces look less shiny, to backlight parts (which is useful for dimensional gauging), to illuminate parts from low angles, and so on. Read about different types of lighting.</p>		<p><a href="https://smartvisionlights.com/" rel="nofollow noreferrer">https://smartvisionlights.com/</a></p>		<p><a href="https://www.vision-systems.com/content/dam/VSD/solutionsinvision/Resources/lighting_tips_white_paper.pdf" rel="nofollow noreferrer">https://www.vision-systems.com/content/dam/VSD/solutionsinvision/Resources/lighting_tips_white_paper.pdf</a></p>		<p>Rather than spend a lot of money on special lights, you can mock them up:</p>		<ul>	<li>LED flashlight or single LED (as a "point" light source)</li>	<li>Bright light + translucent sheet of plastic (for backlighting)</li>	<li>White tissue paper or some other diffusing material in front of a bright light</li>	<li>...</li>	</ul>		<p>The importance of lighting can not be underestimated. Controlling lighting conditions improves the chance of success, and is typically necessary to achieve the accuracy of measurement or pass/fail assessment required in real-world environments.</p>		<p><strong>Accuracy, Correctness, Usefulness</strong>	At some point you'll probably wonder whether machine learning is useful or necessary for the application. The question to ask yourself (or the customer) is this: what percentage of defects would need to be detected?</p>		<p>For example, if a chip is missing from the ring that could be a fatal defect. Is the ring used in some safety-critical application? If so, vision inspection for QC would have to be extraordinarily robust.</p>		<p>Even if you're familiar with the terms "accuracy" and "precision," make sure they have very clear meanings as you consider image processing problems:</p>		<p><a href="https://en.wikipedia.org/wiki/Accuracy_and_precision" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/Accuracy_and_precision</a></p>		<p>So, what percentage of chip defects needs to be found? 90%? 95%? 98%?</p>		<p>Using the term "accurate" more loosely to mean "the vision system gets the measurement correct and/or finds the defects we know are there," what is the accuracy of the most accurate machine learning algorithm you've read about? Or at least, what would qualify as reasonably impressive accuracy for machine learning? 95%? 98%?</p>		<p>If you're making measurements of machine parts on a production line, then you would typically want the accuracy of dimensional measurements and defect detection to be 99% or better. For high-value products, and products such as electronic components that are highly sensitive to defects, accuracy may need to be 99.999% or better. Think of it this way: if a manufacturer is making thousands or tens of thousands of parts, they don't want garbage parts to make it past your vision system several times a day. </p>		<p>Machine learning for image processing has been around a long time. Processing speeds, memory, and training set sizes have improved, and there have been improvements in algorithms as well, but it's important to note that machine learning is suitable only for some applications, and will fail miserably at other applications. </p>		<p><strong>Techniques</strong></p>		<blockquote>	  <p>To begin with, I have attached a picture of the ring we need to do QC	  of.</p>	  	  <p>Ring_for_QC</p>		<pre><code>Ring diameter = 3 inch	</code></pre>	</blockquote>		<p>Get the exact diameter, including tolerances. If the nominal diameter is 3.000 inches, then then tolerance might be expressed in terms of thousands of an inch. You may not need to know that for a student project, but if you were proposing a solution for a factory owner you wouldn't want to even suggest a price or timeline for delivery without having complete specs for the part, and numerous samples of the part.</p>		<p>From the one image it's not possible to be too specific about what a defect might look like--the same part can have different defects in different factories, or even on different production lines of the same factory--but we can make some guesses.</p>		<blockquote>	  <p>1.Surface coating of the ring peeled off</p>	</blockquote>		<p>From the one image it's not clear what the surface coating is supposed to look like, or what's underneath. <strong>You must provide at least one image of a good part, and at least one image for each type of defect.</strong></p>		<p>What is the surface coating? Anodization? Paint? Enamel? Plastic? Cheese? Whatever the case, knowing what material it is, and how that material degrades, will give some clues about what sort of vision setup may help detect problems with the coating. Changes in coating quality can affect apparent texture (e.g. edge content), brightness/darkness (intensity), color, shininess, and so on.</p>		<p>For the moment, let's assume the coating peeling off changes the brightness or texture of the uncoated surface vs. the remaining coated surface. Then your image processing might look something like the following:</p>		<ol>	<li>Determine whether a ring is in the image</li>	<li>Segment the ring from the background. That is, use an algorithm such as connected components (OpenCV's findContours()), SIFT, or some other technique to identify the presence and location of a rigid object of <em>known</em> size and shape from the background.</li>	<li>Isolate further processing to just those pixels corresponding to the surface of the part.</li>	<li>Use some technique to find clusters of different texture differences, brightness differences, etc. <strong>This is where a better description of the coating is required.</strong> If lighting and lens parameters are "fixed," you can consider generating a histogram of brightness values in the image (0 = black, 255 = white) and then comparing the histogram of good parts and bad parts--is there some statistical difference? Or you might use connected components (findContours() again) to cluster pixels of different colors, assuming the lack of coating changes the apparent color of the part: maybe the coating is brown and the part is silvery.</li>	</ol>		<p>It's hard to guess what technique would be relevant here without photos and/or a much more specific description of the coating. Hopefully this makes it clear why specs are important.</p>		<p>Coatings can be absent in different ways: peeling, small absences (voids), partially scraped away, etc. It can be difficult to predict in advance what the shape and size of missing coating may be.</p>		<p>When the size and shape of a defect is hard to predict, but when the defect is associated with a difference in image intensity (pixel brightness) or color, then explore these ideas:</p>		<ul>	<li>Generate an "edge image" in which you find brightness/color transitions. You start with the grayscale or color image, then use Sobel or Canny or some other algorithm to generate an image of edge intensities.</li>	<li>Apply statistical methods to determine how "edgy" an image is. Are there more than N pixels (or more than 5% of all pixels) with an edge strength greater than S? </li>	</ul>		<p>Once you have some basic algorithm that identifies the difference between good parts and parts with some missing coating, then you could consider using machine learning to review lots (lots!) of samples to help determine the best parameterization. For example, how do you know what number of edge pixels or edge pixel strength should be considered "bad"? </p>		<blockquote>	  <p>2.Portion of ring chipped off</p>	</blockquote>		<p>It depends on whether the chip is visible just from the part's outline. For example, if you placed the part on a light table (a.k.a. "backlight"), would you <strong>always</strong> see a defect considered to be a "chip"? Or could the chip just be on the top surface facing the camera?</p>		<p>To find chips on edges, having the part on a backlight simplifies matters greatly.</p>		<ol>	<li>Identify the location and orientation of the part (e.g. using connect components, normalized correlation, SIFT, or whatever algorithm is suitable for the part and accuracy of location required).</li>	<li>Find edges corresponding to the outer and inner rings of the part.</li>	<li>Fit a circle or nearly circle ellipse to the edge points using Hough circle fit, RANSAC circle fit, or (meh) least square circle fit parameterized to the known dimensions (in pixels) of the outer ring and inner rind diameters.</li>	<li>For the points used for the circle fits, find the point-to-circle (or point-to-ellipse) shortest distance. The larger this distance, the more likely you have a chip or missing chunk. </li>	<li>To ensure you're finding identations, chips, or whatever, and not just individual "noise" edge points, examine points in order going clockwise or anticlockwise, and only consider a series of perimeter points as defects if N successive points have a median or possibly mean point-to-edge distance greater than N.</li>	</ol>		<p>A simpler approach could be to fit a black-and-white mask--a template--representing a good part to the current location and rotation of the part to be inspected. If the template and sample part are aligned very precisely, and if you perform image subtraction, then you may be fortunate enough to get clusters or pixels where there are defects. But this method is fairly crude, and harder to make robust.</p>		<p>There are machine learning techniques to identify chips on edges, but you'd need lots of part samples to train the techniques. Optionally, if you don't have enough samples, you can use the sample samples with slightly modified lighting, at different locations in the image, with manually added defects, etc., to help train the algorithm. But that's another discussion altogether.</p>		<blockquote>	  <p>3.Scratch on the ring's Surface</p>	</blockquote>		<p>See the link above about different types of lighting. You'll need to experiment with a few different lighting configurations to figure out what works for your part.</p>		<p>Generally, though, scratches are likely to have difference in brightness and "edginess" (image edge content) relative to the rest of the part. If you're lucky, a scratch can reveal a different color.</p>		<p>Scratches can vary so much in appearance, area, and shape that it would be hard to parameterize an algorithm to catch them all. Once again, statistical analysis of edge content, brightness, and color tends to be useful.</p>		<p>In general: to achieve the best results for a particular QC inspection, you'll need to engineer a system specifically for the part. Your vision system may be configurable, and there can be different combinations of lights and cameras for different types of QC inspection, but for any particular defect detection you want to control the appearance of the part as much as possible. Relying on software to do all the work yields a less robust system that customers will typically yank out and throw away.</p>		<blockquote>	  <p>4.Width of the ring is uneven</p>	</blockquote>		<p>This is almost an example of dimensional gauging or optical gauging. If you're just looking for unevenness, you don't necessarily need to measurement diameter in engineering units such as millimeters: you can just measure pixels. BUT the effort required to ensure your measurement in pixels is accurate will typically lead you to measuring in millimeters anyway.</p>		<p>Assuming the optical setup  is correct and (more or less) calibrated, which I'll describe below, here's a basic process:</p>		<ol>	<li>Identify the position and location of the part</li>	<li>From the algorithm that find the part, or from a follow-on algorithm that identifies edge pixels (e.g. Sobel, Canny, ...), find the edge pixels just for the outer diameter of the ring.</li>	<li>Perform a circle/ellipse fit to the edge pixels, and eliminate outlier pixels that don't actually belong to the circle/ellipse.</li>	<li>Have your algorithm start with the 1st pixel in the list of edge pixels corresponding to the outer diameter.</li>	<li>From that 1st pixel, find the edge pixel farthest away. Ideally, this would be the point diametrically opposite.</li>	<li>Cycle through all pixels, finding the distance to the farthest pixel. (This is not optimal in terms of speed, but simpler to code.)</li>	<li>Generate a histogram of all distances.</li>	<li>Make a determination of good/bad based on the histogram of point-to-point distances.</li>	</ol>		<p>You might call a part "bad" for one or more of the following conditions:</p>		<ul>	<li>At least N point-to-point distances exceed a distance of P pixels</li>	<li>The standard deviation of point-to-point distances exceeds some threshold T</li>	<li>...</li>	</ul>		<p>Measurement of distance depends on the consistency of point-to-point distances at different locations within the image. If you perform accurate, precise measurements of distance, you'll notice that an object of fixed length appears to vary in length depending on its location in the image: if the object is located in the center of the image it may appear to be 57.5 pixels long, but in one corner of the image it may appear to be 56.2 pixels long. </p>		<p>To correct for these irregularities, you can...</p>		<ul>	<li>Perform a nonlinear flatness correction. This will also correct for non-normal alignment of the camera to part, though you want to start with the optical axis of the camera as normal (perpendicular) to the surface of the part as possib.e.</li>	<li>Make a few quick measurements to estimate how much measurements vary.</li>	</ul>		<blockquote>	  <p>5.Dent on the ring</p>	  	  <p>6.Entire surface of the ring is not completely horizontal to the plane; may be due to some dent a part of the ring is resting on the	  plane surface creating some 1 or 2 degree angle (I have marked no.6 as	  'uneven surface' in the attached picture)</p>	</blockquote>		<p>Use cameras imaging from the sides. Make sure the background is simple.</p>		<p>A 1- to 2-degree difference could be hard to detect using a camera placed directed overhead. If you're lucky you could detect that the outer edge of the part is more elliptical than circular, but the ability to detect this would depend on the color and thickness of the part. Also, you wouldn't necessarily be able to distinguish between a misshapen part and one resting at an angle--but for some inspections that's okay since both are defects. </p>		<p>HOWEVER, in a real-world application the customer might not be happy if you reject parts that are otherwise good, but happen to be sitting at a slight angle. A mechanical fixture might fix the problem by ensure parts are lying flat.</p>		<blockquote>	  <p>I have also attached another picture marking the quality issues found	  on a random ring.elevated view with marked QC issues</p>	</blockquote>		<p>The image isn't clear enough. Put the part on a simpler background and tinker with lighting to make it more obvious what the differences are between good and bad.</p>		<blockquote>	<pre><code>One single ring can have one or more than one of the above mentioned 6 defects	</code></pre>	</blockquote>		<p>Run one algorithm after the other. You may also have to turn different lights on and off before running each algorithm (or rather, each chain of algorithms).</p>		<blockquote>	<pre><code>Issue 1 &amp; 3 can occur at either surface of the ring and we need to check both the surfaces		We need to QC on one single ring at a time	</code></pre>	</blockquote>		<p>You may have to write an algorithm to detect whether multiple rings happen to be present. Even if you weren't asked to do this specifically, this happens in production, and your professor may surprise you with it. At least have an idea how you would detect the presence of multiple rings.</p>		<p>That's another aspect of vision: you may start thinking of what algorithms and lighting are necessary to solve "the problem," but you'll also spend a lot of time figuring out everything that could go wrong, and writing software to detect those conditions to ensure you don't yield a false result. For example, what happens if the lights turn off? What if two rings are present? What if the ring isn't fully within the field of view? What if dirt gets on the surface the part is resting on? What if the lens gets dirty (which it will)?</p>		<p>A few principles:</p>		<ul>	<li>Provide the best image for image processing <em>before</em> you consider what algorithm would work best. </li>	<li>Understand what accuracy/success rate is necessary, and measure it.</li>	<li>Get as many samples as you possibly can: hundreds, thousands if possible. Having a chance to measure "online" (in real production) is helpful.</li>	</ul>		<p><strong>Real-world applications</strong>	If it were a real-world application--that is, if you went into the field of vision professionally--there are many more steps that may seem less difficult, but that turn out to be critical:</p>		<ul>	<li>How rings come into view (or into "station"): on a moving conveyor? placed by a robot? in some container?</li>	<li>What triggers vision inspection of the ring -- a programmable logic controller, a "light curtain" the ring passes through, or whether the vision system itself has to determine when a ring is ready for inspection.</li>	<li>How results are communicated to other equipment. (This can be a huge hassle, and an otherwise good vision system can be rejected by a customer if communications aren't designed and implemented properly.)</li>	<li>Whether you are guaranteed to see only one ring at a time</li>	</ul>		<p>This isn't to say university isn't the real world: just that you probably won't lose tens or hundreds of thousands of Euros/pounds/dollars if you happen to overlook something.</p>	"
