thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38946574,38946574,null,1,3,Sun Aug 14 20:58:00 EDT 2016,2418723,"<p>I need to get the CPU temperature from a raspberry pi to the Watson IoT Platform quickstart service.I am doing this by using an exec node in node red with the command <code>vcgencmd measure_temp</code>. I want to send this temperature value as a <strong>number</strong> to the Watson IOT node but my exec node returns the CPU temperature as <code>"temp=45.2</code>C"`	I want to get the temperature as a floating point number. For this I tried to use a function node to substring the temperature part from the string and use the parseFloat() function in javascript. But the function is notified as invalid. Can someone suggest me on how this should be done. I am a beginner in node-red.</p>	"
38946574,65248131,38946574,3,1,Sun Aug 14 21:01:00 EDT 2016,2317490,"`n=s.replace(/[^\d\.]/g,"")*1;`"
38946574,65248310,38946574,3,0,Sun Aug 14 21:11:00 EDT 2016,2418723,"Thank you this works fine. I was trying to figure out why the parseFloat(), parseInt() functions are not working in node-red."
38946574,65248333,38946574,3,1,Sun Aug 14 21:12:00 EDT 2016,2317490,"the parses won't work because there is non-digits on both sides of the number"
38946574,65248342,38946574,3,1,Sun Aug 14 21:12:00 EDT 2016,504554,"It's because `parseFloat()` expects "45.2" not the "temp=45.2 C". It's choking on the "temp=", you need to strip that off first"
38946574,38994109,38946574,2,2,Wed Aug 17 10:29:00 EDT 2016,6721171,"<p>The temperature reading can be read as is, using the Exec node and then it can be further refined to suit your needs. In this case, the following code would do the trick:</p>		<pre><code>msg.payload = {"d":{"temp":msg.payload.replace("temp=","").replace("'C\n","")}};	return msg;	</code></pre>		<p>You might want to refer the IoT Recipe "<a href="https://developer.ibm.com/recipes/tutorials/deploy-watson-iot-node-on-raspberry-pi/" rel="nofollow">Connecting Raspberry Pi as a Device to Watson IoT using Node-RED</a>" that details out the steps along with the Node-RED flow's, that helps you fetch the Raspberry Pi's CPU Temperature and push / upload it to Watson IoT Platform. </p>		<p>Quick Start is definitely a quick and easiest means of option. This recipe introduces to steps on how you can register the Raspberry Pi as a Registered Device and monitor / administer the same using Watson IoT Platform Dashboard.</p>	"
