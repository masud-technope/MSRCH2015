thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
42100631,42100631,null,1,10,Tue Feb 07 21:46:00 EST 2017,882445,"<p>I am programming an Android app for an IoT device. I have to give the device the WiFi username and password, so I am using an android app to do this. I have the following code, but it seems to always connect to the network weather or not the correct password is given. </p>		<p>This I am testing this on the same AP that my phone is connected to. </p>		<p>The desired action is</p>		<blockquote>	  <p>Disconnect from current AP -> Attempt to connect using credentials given -> Reconnect to original network.</p>	</blockquote>		<p>What steps do I need to take to correctly verify a wifi network and password?</p>		<p><strong>code :</strong></p>		<pre><code>WifiConfiguration conf = new WifiConfiguration();	    conf.SSID = "\"" + ssid + "\"";	    for(ScanResult sr: wifiList){	        if(sr.SSID.equals(ssid)){	            if(sr.capabilities.contains("WEP")){	                if(isNumeric(pass)){	                    conf.wepKeys[0] =  pass ;	                }else{	                    conf.wepKeys[0] = "\"" + pass + "\"";	                }	                conf.wepTxKeyIndex = 0;	                conf.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.NONE);	                conf.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP40);	            }else if(sr.capabilities.contains("PSK")){	                conf.preSharedKey = "\""+ pass +"\"";	            }else if(sr.capabilities.contains("EAP")){	                wifiName.setError("EAP networks not supported");	                //todo support EAP	            }else{	                conf.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.NONE);	            }		            WifiManager wifiManager = (WifiManager) getActivity().getSystemService(Context.WIFI_SERVICE);	            wifiManager.addNetwork(conf);		            List&lt;WifiConfiguration&gt; list = wifiManager.getConfiguredNetworks();	            for( WifiConfiguration i : list ) {	                if(i.equals(conf)) {	                    wifiManager.disconnect();	                    if(!wifiManager.enableNetwork(i.networkId, true)){	                        wifiPassword.setError("Incorrect Password");	                        wifiManager.reconnect();	                        return;	                    }else{	                        wifiManager.reconnect();	                        addUser(deviceSN, ssid, pass);	                    }	                }	            }		            break;	        }	    }	</code></pre>	"
42100631,82818989,42100631,3,0,Thu Dec 21 13:08:00 EST 2017,1990291,"Did you fix this ? 	I am also facing the issue. If I add the wrong password also return true. So can you suggest the idea to solve this issue"
42100631,42340888,42100631,2,0,Mon Feb 20 09:33:00 EST 2017,7409774,"<p>You may don't need to scan for available wifi network, you can easily do like this: follow</p>		<pre><code>public static void connectToWifi(Activity activity, String ssid, String password) {	        WifiConfiguration wifiConfig = new WifiConfiguration();		        wifiConfig.SSID = String.format("\"%s\"", ssid);	        wifiConfig.preSharedKey = String.format("\"%s\"", password);		        WifiManager wifiManager = (WifiManager) activity.getSystemService(WIFI_SERVICE);	        wifiManager.setWifiEnabled(true);	        int netId = wifiManager.addNetwork(wifiConfig);	        wifiManager.disconnect();	        wifiManager.enableNetwork(netId, true);	        wifiManager.reconnect();	    }	</code></pre>	"
42100631,71868485,42340888,3,0,Tue Feb 21 05:01:00 EST 2017,7409774,"wifiManager.reconnect(); will return resultant boolean.. whether you are connected or not"
42100631,71848679,42340888,3,1,Mon Feb 20 15:46:00 EST 2017,882445,"How would I tell if connecting to the network succeeded or failed?"
42100631,82818935,42340888,3,0,Thu Dec 21 13:06:00 EST 2017,1990291,"if I add the wrong password also returning the same value.. 	Can you suggest the solution"
42100631,42389298,42100631,2,4,Wed Feb 22 10:57:00 EST 2017,5094121,"<p>You should register to NETWORK_STATE_CHANGED_ACTION.</p>		<p>Using this, you can get the WI-FI network state and you need to check that it reached the connected state. If the device did not reach connected after some timeout, you can assume that the connection has failed.</p>		<p>another helpful receiver might be SUPPLICANT_STATE_CHANGED_ACTION.</p>		<pre><code>public void onReceive(Context context, Intent intent) {	        String action = intent.getAction();		        if (WifiManager.NETWORK_STATE_CHANGED_ACTION.equals(action)) {		            NetworkInfo info = intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);		            switch (info.getState()) {	                case CONNECTING:	                    break;	                case CONNECTED:	                    break;	                case DISCONNECTING:	                    break;	                case DISCONNECTED:	                    break;	                case SUSPENDED:	                    break;	                }	            }	</code></pre>	"
42100631,89448084,42389298,3,0,Sun Jul 08 17:42:00 EDT 2018,5094121,"@iuliu.net Look I think you need to look at  getConnectionInfo.	 https://developer.android.com/reference/android/net/wifi/WifiManager#getConnectionInfo()"
42100631,89486465,42389298,3,0,Mon Jul 09 20:45:00 EDT 2018,5094121,"I am sorry I am not sure I can help with that one. I don't quite remember the way all the api works."
42100631,89457906,42389298,3,0,Mon Jul 09 06:46:00 EDT 2018,3818463,"Yes but that will not tell you the password... I have the following case: I'm connected to network X, attempt connection to network X with SSID/pw to check for correctness. Then do as you say: "If the device did not reach connected after some timeout, you can assume that the connection has failed.". But the OS just tells me that it's connected to network X no matter what I do since it's already connected.."
42100631,89445251,42389298,3,0,Sun Jul 08 14:45:00 EDT 2018,3818463,"What if the user is already connect to that network?"
42100631,42440406,42100631,2,0,Fri Feb 24 13:54:00 EST 2017,5761144,"<p>Just Check it is like that</p>		<pre><code>public static boolean isConnectingToInternet(Context context){	  try {	      ConnectivityManager connectivity = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);	      if (connectivity != null) {	          NetworkInfo info[] = connectivity.getAllNetworkInfo();	          if (info != null) {	              for (int i = 0; i &lt; info.length; i++)		                  if (info[i].getState() == NetworkInfo.State.CONNECTED) {	                      return true;	                  }		          }	      }	  }catch (Exception e){}	    return false;		} 	</code></pre>	"
