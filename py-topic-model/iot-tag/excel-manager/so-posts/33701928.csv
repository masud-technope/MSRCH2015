thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33701928,33701928,null,1,3,Fri Nov 13 21:18:00 EST 2015,4231512,"<p>I want to understand how the AP provisioning works on a headless device, specifically for IoT applications (I'm developing on a Texas Instruments CC3200). It seems that the universally accepted method of provisioning an IoT device is for the device to act as an AP then the user connects to it in order to send the Wifi AP credentials via smartphone. I'm assuming this could be done via UDP or TCP.</p>		<p>Most of these IoT modules can act as an Access Point OR a Station but not both at the same time. So how does the device know that the Wifi credentials are correct? It must have to shut down the AP that it creates to try and connect to the user's Wifi, right? If the credentials are NOT correct, how does it let the user know on the smartphone side? At this point, the device's AP doesn't exists and the user would have to jump back on it again. What's really happening there?</p>	"
33701928,34515054,33701928,2,2,Tue Dec 29 16:28:00 EST 2015,587395,"<blockquote>	  <p>So how does the device know that the Wifi credentials are correct ?</p>	</blockquote>		<p>It have to try if using those credentials AP association is possible. For successful connection <code>SSID</code>, <code>passphrase</code>, <code>encryption type</code> have to be provided. All or some of those information can be already in device memory ie. application can connect only to known <code>SSID</code>.</p>		<blockquote>	  <p>It must have to shut down the AP that it creates to try and connect to the user's Wifi, right?</p>	</blockquote>		<p>Yes. In case of TI CC3200 you can switch mode while application is running.</p>		<blockquote>	  <p>If the credentials are NOT correct, how does it let the user know on the smartphone side?</p>	</blockquote>		<p>It is highly implementation depending. For example, if your IoT device cannot obtain outside world it can switch back to AP mode, what can be detected on the smartphone side. Other solution is that you can send and receive data while in AP mode so it is possible to write server application that will inform smartphone application about the connection state.</p>		<blockquote>	  <p>At this point, the device's AP doesn't exists and the user would have to jump back on it again. What's really happening there?</p>	</blockquote>		<p>Not sure if understand this question. As I mentioned above IoT device knows the state of AP association (TI CC3200 SDK return known values for wide range of errors), if IoT device cannot connected as station using provided credentials it should rollback to AP mode.</p>	"
