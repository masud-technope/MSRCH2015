thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
48060574,48060574,null,1,1,Tue Jan 02 11:57:00 EST 2018,3139208,"<p>We are working on connecting mesh nodes to Amazon Web Services. Mesh nodes are by nature constrained devices and we can't afford to run MQTT on those nodes directly (TCP is too expensive)</p>		<p>Our approach would be to use CoAP for the mesh but it would be ideal if we could connect those nodes directly to AWS for security reasons and nodes management from the cloud.</p>		<p>AWS supports HTTP but not CoAP directly. From what we have gathered, CoAP is very similar to HTTP. It also uses similar security mechanism (DTLS vs TLS).</p>		<p>Has anyone tried this? Is it possible that a simple CoAP to HTTP proxy would be capable of maintaining a securied session between CoAP device and HTTP broker on AWS?</p>	"
48060574,48068070,48060574,2,2,Tue Jan 02 21:27:00 EST 2018,3323777,"<p>Unfortunately I can't tell anything about proxies (except that the approach seems somewhat clunky at first view).</p>		<p>But before that, can you afford DTLS on your mesh nodes?	<br>	For example, you will need a good and fast random source.	Every handshake will require to generate a 32-byte random "cookie".</p>		<p>Assume we use pre-shared keys and AES128 with CCM8 (since where could be no point to use something more simple):	<br>	Every CoAP packet will be encrypted and extended to:	<br>	DTLS header: 13 bytes	<br>	Nonce: 16 bytes</p>		<p>Also you will need to store a few packets during a handshake (I can't tell the exact size but I suppose it is hundreds of bytes).</p>		<p>Anyway, it depends on that security level do you want to get.</p>	"
48060574,83164549,48068070,3,0,Thu Jan 04 12:10:00 EST 2018,3323777,"Unfortunately, I guess this is the main reason that we have no strong crypto in IoT products out there at most.		I, personally, would like to know any suitable approach which is more lightweight but strong enough too :). I saw some efforts to make it but they didn't go too far from a paper.		There are some relatively cheap ARMs though which have enough memory and true RNG. https://stackoverflow.com/a/26306497/3323777		Though I didn't manage to start digging it yet."
48060574,83208491,48068070,3,0,Fri Jan 05 15:04:00 EST 2018,3139208,"This is very interesting. Few radio chips suitable  support hardware TRNG (like TI CC1350 or Nordic nrf52840, etc.)."
48060574,83228553,48068070,3,0,Sat Jan 06 09:23:00 EST 2018,3323777,"@radaudio, How are you going to connect those devices to web? I’ve heard there are some cell modems/operators which could provide operating via VPN. Though I can’t tell which exactly. And it depends on country, etc. It could eliminate a DTLS requirement if you have control over that. Also, there are some other ways to get random at MCU (different time shifts via multiple timers, reading uninitialized memory and using it as a random seed, etc). But I don’t realle like them apriori. Also please feel free to vote up an answer if you found it interesting ;)"
48060574,83310361,48068070,3,0,Tue Jan 09 10:02:00 EST 2018,3139208,"Devices would go through a gateway but to simplify and make the solution more robust it would be great if it could be just a simple router. This implies no secrets stored on the gateway. As far as I understand using VPN would require decrypting mesh payload and putting in on the VPN."
48060574,83129309,48068070,3,0,Wed Jan 03 12:52:00 EST 2018,3139208,"Thanks. We will have to check if that overhead is acceptable. In the meantime - can you maybe suggest a good approach to approach this? Ideally there would be End to End security based on a pre-shared keys. I guess that means running encryption on the mesh node, but it should be OK. Are there any protocols better suited for this application?"
