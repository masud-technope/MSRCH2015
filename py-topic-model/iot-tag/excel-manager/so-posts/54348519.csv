thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54348519,54348519,null,1,0,Thu Jan 24 14:07:00 EST 2019,5596318,"<p>I'm getting error {SQLite.Net.SQLiteException: disk I/O error, when trying to create a table in sqllite database on a raspberry pi 3, with WIN IOT is the OS. I'm using the SQLite.Net-PCL ver 3.1.1 implementation of SQLite. This is a UWP application. Here is the full error;</p>		<pre><code>{SQLite.Net.SQLiteException: disk I/O error	   at SQLite.Net.Platform.WinRT.SQLiteApiWinRT.Prepare2(IDbHandle db, String query)	   at SQLite.Net.SQLiteCommand.Prepare()	   at SQLite.Net.SQLiteCommand.ExecuteNonQuery()	   at SQLite.Net.SQLiteConnection.Execute(String query, Object[] args)	   at SQLite.Net.SQLiteConnection.CreateTable(Type ty, CreateFlags createFlags)	   at SQLite.Net.SQLiteConnection.CreateTable[T](CreateFlags createFlags)	   at InternetRadio.SQLite_Raspberry.GetConnection()}	</code></pre>		<p>Second is there a datareader for this particular implementation of SQLite? I've used SQLite on Android before with no problem, but some commands I used there are not available here.</p>		<pre><code>var documentsPath = System.Environment.GetFolderPath(System.Environment.SpecialFolder.Personal);    	var fileName2 = "Storage.db";	var path2 = Path.Combine(documentsPath, fileName2);     		try	    {	        using (var connection = new SQLiteConnection(new SQLite.Net.Platform.WinRT.SQLitePlatformWinRT(), path2))	        {	               md.CreateTable&lt;RaspTables.Category&gt;();	        }	    }	    catch (Exception ex)	    {	        string m_er = ex.ToString();	    }	</code></pre>		<p>my table implementation is;</p>		<pre><code>    public class Category	    {	            [PrimaryKey, AutoIncrement]	            public int _id { get; set; }	            public int Cat_order { get; set; }	            public string Name { get; set; }	            public string Keywords { get; set; }	            public string Sub_Cat { get; set; }		        public Category()	        { }			    }	</code></pre>		<p>I see files, Storage.db and Storage.db-journal have been created. They both have read write rights on the disk. I read that I need to set tags SQLiteOpenFlags.ReadWrite | SQLiteOpenFlags.Create | SQLiteOpenFlags.FullMutex but don't know how to do that. I've tried,</p>		<pre><code>md = new SQLite.Net.SQLiteConnection(new SQLite.Net.Platform.WinRT.SQLitePlatformWinRT(), path, SQLiteOpenFlags.ReadWrite | SQLiteOpenFlags.Create | SQLiteOpenFlags.FullMutex);	</code></pre>		<p>which gives an error. I also tried;</p>		<pre><code>md = new SQLite.Net.SQLiteConnection(new SQLite.Net.Platform.WinRT.SQLitePlatformWinRT(), path, true);	</code></pre>		<p>which doesn't help. I still receive the disk I/O error. </p>		<p>Through the course of trying things I had change the using line to;</p>		<pre><code>using (SQLite.Net.SQLiteConnection md = new SQLite.Net.SQLiteConnection(new SQLite.Net.Platform.WinRT.SQLitePlatformWinRT(), path)) ;	</code></pre>		<p>I'm not sure what the difference between SQLite.Net.SQLiteConnection and SQLiteConnection, but the SQLite.Net.SQLiteConnection closes the connection and SQLiteConnection leaves it open. So that was the last problem.</p>		<p>One more thing I put this in a class by itself so it would stay open and be usable at anytime in the rest of the code. This required taking it out of the using statement so the connection would stay open.</p>		<p>Thanks for the help.</p>	"
54348519,54359824,54348519,2,0,Fri Jan 25 06:11:00 EST 2019,6601582,"<p>I can reproduce your issue under "C:\Data\Users\DefaultAccount\Documents\" path. It seems related to <a href="https://docs.microsoft.com/en-us/windows/uwp/files/file-access-permissions" rel="nofollow noreferrer">UWP file access permission</a> limitation. </p>		<p>Change to UWP application path your code works.</p>		<pre><code>        StorageFolder localFolder = ApplicationData.Current.LocalFolder;	        var fileName2 = "Storage.db";	        var path2 = Path.Combine(localFolder.Path, fileName2);		        try	        {	            using (var connection = new SQLiteConnection(new SQLite.Net.Platform.WinRT.SQLitePlatformWinRT(), path2))	            {	                connection.CreateTable&lt;RaspTables.Category&gt;();	            }	        }	        catch (Exception ex)	        {	            string m_er = ex.ToString();	        }	</code></pre>		<p>The path for my app is </p>		<p><code>C:\Data\Users\DefaultAccount\AppData\Local\Packages\911b8f0e-3351-44ed-a3b3-4e15b0d12cb6_a48w6404kk2ea\LocalState\Storage.db</code></p>		<p>More reference "<a href="https://docs.microsoft.com/en-us/windows/uwp/data-access/sqlite-databases" rel="nofollow noreferrer">Use a SQLite database in a UWP app</a>"</p>		<p><strong>Update:</strong> add debug snapshot</p>		<p><a href="https://i.stack.imgur.com/UoAH6.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/UoAH6.png" alt="enter image description here"></a></p>	"
54348519,95555106,54359824,3,0,Fri Jan 25 17:50:00 EST 2019,5596318,"The reference "Use a SQLite Database in a UWP app" uses Microsoft.Data.Sqlite which has a datareader and an open, however it doesn't have a CreateTable, ExecuteScalar,, Ior nsert, which the SQLite.Net-PCL version has. So I will have to rewrite a lot of code if I switch. This is a big frustration especially since I have a fully working sqlite that works on an android device and I would like to use some of the same methods, but aparently that's not possible."
54348519,95602460,54359824,3,0,Mon Jan 28 04:32:00 EST 2019,5596318,"Your change DOES NOT WORK. It changes the error I get to, "Cannot create command from unopened database.""
54348519,95754177,54359824,3,0,Fri Feb 01 05:17:00 EST 2019,6601582,"@Dave If the answer help you solved the issue you can accept it. If you don't know how to accept an answer please refer to [here](https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work)."
54348519,95738764,54359824,3,0,Thu Jan 31 16:46:00 EST 2019,5596318,"You posting of your code showed me the problem. Look above."
54348519,95606347,54359824,3,0,Mon Jan 28 08:08:00 EST 2019,6601582,"@Dave Please check my update you can that the connection state open state is "true"."
54348519,95606569,54359824,3,0,Mon Jan 28 08:18:00 EST 2019,6601582,"@Dave I upload my project on [GitHub](https://github.com/luyaok/test) you can have a try."
54348519,95546945,54359824,3,0,Fri Jan 25 13:49:00 EST 2019,5596318,"I had to change the line for StorageFolder to Windows.Storage.StorageFolder localFolder = Windows.ApplicationModel.Package.Current.InstalledLocation; for it to work. Then I had to manaually set the permissions on the folder per our previous conversation https://stackoverflow.com/questions/54315079/connect-to-sqlite-database-on-win-iot. I then received the error on the CreateTable line; Cannot create commands from unopened database. In previoud sqlite implementations I simply said md.Open() but there is not an Open command in this implementation. How do I open the connection?"
54348519,95682068,54359824,3,0,Wed Jan 30 08:42:00 EST 2019,6601582,"@Dave Please let me know if the issue solved."
