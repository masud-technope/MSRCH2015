thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41397758,41397758,null,1,-2,Fri Dec 30 14:20:00 EST 2016,4896895,"<p>I used raspberry pi 3 and Windows IoT build an RFID reader.	When I copy this lib <a href="https://stackoverflow.com/questions/34284498/rfid-rc522-raspberry-pi-2-windows-iot">RFID RC522 Raspberry PI 2 Windows IOT</a> and make new class for this lib. I have some problem.</p>		<p>In original namespace, I add a new class 'startmfrc522'.</p>		<p>public class startmfrc522 {</p>		<pre><code>Mfrc522 mfrc = new Mfrc522();	    public async Task&lt;bool&gt; start() {	        System.Diagnostics.Debug.WriteLine("start RFID");	        await mfrc.InitIO();	        System.Diagnostics.Debug.WriteLine("finish Init");	        return true;	    }		    public async Task&lt;string&gt; readtag() {	        for (int i = 0; i &lt; 5; i++) {	            System.Diagnostics.Debug.WriteLine("start read tag");	            if (mfrc.IsTagPresent()) {	                System.Diagnostics.Debug.WriteLine("success");	                string uid = mfrc.ReadUid().ToString();	                mfrc.HaltTag();	                return uid;	            }	            else {	                mfrc.HaltTag();	                return "fail";	            }	            await Task.Delay(1000);	            System.Diagnostics.Debug.WriteLine("Delay for 1 s");	        }	        return "fail";	    }	}	</code></pre>		<p>In the mainpage, I use this code to start the rfid reader and read tag</p>		<pre><code>        startmfrc522 rfid = new startmfrc522();		        while (!rfid.start().Result){	            System.Diagnostics.Debug.Write(".");	        }	        System.Diagnostics.Debug.WriteLine(rfid.readtag());	</code></pre>		<p>First problem is VS 2015 told me use 'bool x = await start()', I change it to 'bool result = await start()', still not working.</p>		<p>Second problem is I test read the tag, looks like mfrc.InitIO not finish and immediately read the tag.	But I add the 'async' and 'await', shouldn't it will wait the InitIO finish the work and read the tag?</p>		<p>Third problem is 'Task.Sleep' not working, I think it should be wait for five times and total wait for 5s.</p>		<p>I think I'm not really understand the 'await' and 'async'. 	Hope someone could tell me what is it and how to change my code to work!</p>	"
41397758,69997251,41397758,3,0,Fri Dec 30 14:21:00 EST 2016,993547,"Can you define 'not working'?"
41397758,69997267,41397758,3,2,Fri Dec 30 14:22:00 EST 2016,134204,"` Task.Delay(1000);` should be `await  Task.Delay(1000);` otherwise there is no delay. Also *where* did you call `await start();`? Console applications can't use `async/await` in their main function - there is no point. There is foreground thread that needs releasing. You'd have to use `var x=start().Result;`"
41397758,69997369,41397758,3,0,Fri Dec 30 14:26:00 EST 2016,4896895,"it tell me use the 'async' and return 'Task'"
41397758,69997536,41397758,3,0,Fri Dec 30 14:32:00 EST 2016,134204,"Do so then, in the method that calls `start()`. You have to put `async` in the function header in order to use `await` in the body. You already did this in  the other functions"
41397758,69997586,41397758,3,0,Fri Dec 30 14:34:00 EST 2016,134204,"Post the method that calls `rfid.start()`. That's where the problem is"
41397758,69997779,41397758,3,0,Fri Dec 30 14:40:00 EST 2016,4896895,"Hey, I had update my code at the question, the new problem is console will show "start RFID" but won't show "finish Init", it looks like freezing. And I have success use this lib and read tag in mainpage but I want make it in a class."
41397758,69997812,41397758,3,0,Fri Dec 30 14:42:00 EST 2016,1822514,"Don't do `System.Diagnostics.Debug.WriteLine(myFunc())`, as `myFunc` won't be called when you change your project to release mode."
41397758,69998722,41397758,3,0,Fri Dec 30 15:15:00 EST 2016,4896895,"looks like '_spi = await SpiDevice.FromIdAsync(devices[0].Id, settings);' this line stuck the system."
41397758,41397839,41397758,2,1,Fri Dec 30 14:27:00 EST 2016,6775223,"<ol>	<li>readtag should be 	<code>public async Task&lt;string&gt; readtag()</code></li>	<li>readtag should use 	<code>await Task.Delay(1000);</code></li>	<li>start should call	<code>System.Diagnostics.Debug.WriteLine(await readtag());</code></li>	<li>method that you called "mainpage" should call   <code>await rfid.start()</code> and     <code>await rfid.readtag()</code> and should be Task based as well (    <code>async Task mainpage()</code>)</li>	</ol>	"
41397758,69997563,41397839,3,0,Fri Dec 30 14:34:00 EST 2016,134204,"`readtag()` isn't asynchronous, it returns a simple string. Only `await Task.Delay()` is wrong, and that's not the OP's problem anyway. It seems there is *another* method which calls `start()` that doesn't have the `async/await`"
41397758,69997747,41397839,3,0,Fri Dec 30 14:40:00 EST 2016,6775223,"OP is asking about how to use async and await, so I explain that and how to convert his code to be Task based since his sample code uses Tasks. Method is not only returning a simple string, it's doing a delay as well, using Task.Delay will be more efficient than Thread.Sleep [link](http://stackoverflow.com/a/20084603/6775223)"
41397758,69997783,41397839,3,0,Fri Dec 30 14:41:00 EST 2016,4896895,"Hey, I had update my code at the question, the new problem is console will show "start RFID" but won't show "finish Init", it looks like freezing. And I have success use this lib and read tag in mainpage but I want make it in a class."
41397758,69997884,41397839,3,0,Fri Dec 30 14:44:00 EST 2016,6775223,"@LittleTin, it means that "await mfrc.InitIO();" is blocking for some reason. Keep in mind that using Task in method signature isn't spawning threads for you, so if InitIO takes 5 minutes and no thread is started, than await will block on InitIO for 5 minutes. If you need to start threads, have a look at TaskFactory: https://msdn.microsoft.com/en-us/library/system.threading.tasks.taskfactory(v=vs.110).aspx"
41397758,69998162,41397839,3,0,Fri Dec 30 14:53:00 EST 2016,4896895,"Got It, before I trying this new way, I remove the await and use Task.Delay(10000); in main page. It's work to read tag, but I hope to use safety way to init rfid IO,"
41397758,69998723,41397839,3,0,Fri Dec 30 15:15:00 EST 2016,4896895,"looks like '_spi = await SpiDevice.FromIdAsync(devices[0].Id, settings);' this line stuck the system."
41397758,69998820,41397839,3,0,Fri Dec 30 15:19:00 EST 2016,6775223,"Your await usage is OK, looks like a SDK/hardware issue now. :)"
41397758,70002806,41397839,3,0,Fri Dec 30 17:45:00 EST 2016,4896895,"Thanks, but I have a new problem, When I get the Task<Tresult>, it looks like return "Task.Delay()", I won't get anything from the 'real return'"
41397758,70003349,41397839,3,0,Fri Dec 30 18:05:00 EST 2016,6775223,"Please update your original question with more information, I don't understand what you mean. When you have a method that returns Task<Something> and use the async keyword, you need to return a value like usually "return something;". Task.Delay doesn't return any value (Task, not Task<T>), so you cannot return Task.Delay where Task<Something> is required."
