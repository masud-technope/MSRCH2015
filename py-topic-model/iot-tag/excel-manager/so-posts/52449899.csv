thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
52449899,52449899,null,1,0,Fri Sep 21 19:17:00 EDT 2018,4718868,"<p>I am using Ebyte ttl-1w-433 RF module attached with a raspberry pi. When I send a packet, the receiver receives it but in my program(application layer) it prints the data in two fragments. I am using pySerial for my program. Below is the scenario that I am facing problem with-</p>		<ol>	<li>sender sending 2 packets of 58 bytes each.</li>	<li>receiver receives two transmissions, and two only (receiver LED light blinks only twice)</li>	<li>receiver pushes the data in the application layer as 48, 10, 48, 10 fashion, instead of 58, 58 bytes fashion.	4.application layer(python script) prints four print statements (instead of two)</li>	</ol>		<p>I am not loosing any data, I am just curious why data arriving app layer fragmented.  tried with different serial baud rate and air data rate combination, but I always see the same pattern.</p>	"
52449899,91899431,52449899,3,0,Mon Sep 24 12:20:00 EDT 2018,8080758,"what spreading factor do you use ?"
52449899,52474881,52449899,2,0,Mon Sep 24 07:56:00 EDT 2018,1110642,"<p>I am not familiar with the <code>Ebyte ttl-1w-433</code> module but it uses the <code>Semtech SX1276</code> chip. The SX1276 has a register <code>RegPayloadLength</code> (see <a href="https://www.semtech.com/uploads/documents/DS_SX1276-7-8-9_W_APP_V5.pdf" rel="nofollow noreferrer">SX1272 datasheet</a>, page 114) which defines the payload length. Maybe your Raspberry Pi library (or whatsoever) which controls the access to the module, defines a fixed length of max. 48 bytes on initialization. Since you did not provide any code this is just a wild guess.</p>	"
