thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38537076,38537076,null,1,0,Sat Jul 23 00:50:00 EDT 2016,6257027,"<p>I need to work with data coming from sensors for a project. The scale of the project is rather small, as the purpose will be mainly for demonstration. However I need to be able to visualize and process the data in real time.</p>		<p>The workflow is simple: receive data from sensors (configurable) -> process data real time -> display and update results ( in a chart/graphical form )</p>		<p>Are there any solutions that are fast to deploy for my needs? (Python and open-sourced solutions are preferred)</p>	"
38537076,64471657,38537076,3,1,Sat Jul 23 07:46:00 EDT 2016,731115,"Not sure about processing specifics, but to store/render you may want to have a look at graphite - https://graphite.readthedocs.io/en/latest/overview.html"
38537076,38681710,38537076,2,1,Sun Jul 31 07:21:00 EDT 2016,6659347,"<p>You can use <a href="https://www.rethinkdb.com/" rel="nofollow">https://www.rethinkdb.com/</a>.	It's an open source DB that can receive data from sensors. I'm using the node.js driver for sending events from my sensors to the DB but it has Python driver as well.	It will also handle the streaming of data to your client side application so you won't have to pull for data. It will push the incoming sensor data to your application. 	You can process the data using the rethink query language.	As for charting, you have a lot of options, it really depends on your needs. I'm using google charts to display my charts.	you can use <a href="https://www.sitepoint.com/15-best-javascript-charting-libraries/" rel="nofollow">https://www.sitepoint.com/15-best-javascript-charting-libraries/</a>	to choose your proper charting library.</p>	"
