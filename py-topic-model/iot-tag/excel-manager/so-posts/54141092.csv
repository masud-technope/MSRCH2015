thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54141092,54141092,null,1,0,Fri Jan 11 05:56:00 EST 2019,10898869,"<p>I'm using AWS IoT to get device logs from multiple moving devices. Currently, all devices can publish their status to the AWS IoT Core using MQTT. Now I'd like to create an application service from outside AWS (servers are in my company) that will subscribe and consume device status from AWS IoT. I'm facing the issue like that, the app backend can get data from AWS IoT. However, it cannot be distributed or load balanced. Just the last connected consumer can get the data. How can I distribute/scale the reads from AWS IoT or any alternative/suggested solutions?	Thanks in advance!</p>	"
54141092,95113604,54141092,3,0,Fri Jan 11 06:11:00 EST 2019,4851565,"What exactly are you trying to do? Anything in particular that you're trying to download all the logs for? Trying to get a read on whether or not you actually need to download all the logs based on  your use case."
54141092,95179237,54141092,3,0,Mon Jan 14 02:49:00 EST 2019,10898869,"Thanks for your advice. I moved to use SQS and it works fine. I wrote a backend code that receive messages from SQS and delete messages after processing. However, I have multiple backend services to receive messages, therefore, how can I prevent duplicated messages? Below is highlight backend code in Golang:"
54141092,95179318,54141092,3,0,Mon Jan 14 02:56:00 EST 2019,10898869,"func consumeSQS() {		receiveParams := &sqs.ReceiveMessageInput{...}			for {			receiveResp, err := sdtData.sqsClient.ReceiveMessage(receiveParams)			if err != nil {				log.Println(">>>> [ERROR]: ", err)				continue			}				for i, msg := range receiveResp.Messages {				// Process message				log.Printf(">>>> [Receive Message]: \n [%d] %s [%s]\n", i, *msg.MessageId, *msg.Body)					// Delete the messages				sdtData.sqsClient.DeleteMessage(&sqs.DeleteMessageInput{					QueueUrl:      aws.String(QueueUrl),					ReceiptHandle: msg.ReceiptHandle,				})			}		}	}"
54141092,95122427,54141092,3,0,Fri Jan 11 11:29:00 EST 2019,7452905,"AWS iot doesn't directly supports pushing data to server if you want your system to be distributed you have to use either SNS or SQS depending on the use case, please include more details about your use case"
54141092,95114659,54141092,3,0,Fri Jan 11 07:04:00 EST 2019,538016,"It's hard to understand your exact use-case, but if you want to distribute processing across multiple servers/consumers you should have your events publish to an SQS queue and have the members of your clusters polling the SQS queue."
54141092,95114769,54141092,3,0,Fri Jan 11 07:10:00 EST 2019,10898869,"My use case is to be able to consume data (aggregation) from thing's topic distributed then process in real-time using our solution."
54141092,95115917,54141092,3,0,Fri Jan 11 07:59:00 EST 2019,504554,"I don't think AWS IoT supports shared subscriptions"
