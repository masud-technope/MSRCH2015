thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
49305730,49305730,null,1,0,Thu Mar 15 17:28:00 EDT 2018,1930814,"<p>I am testing the connection and publishing to a thing created in the AWS IoT console. I am using the following code:</p>		<pre><code>import paho.mqtt.client as mqtt	import ssl, random	from time import sleep		mqtt_url = "XXXXXX.iot.us-east-2.amazonaws.com"	root_ca = './certs/iotRootCA.pem'	public_crt = './certs/deviceCert.crt'	private_key = './certs/deviceCert.key'		connflag = False		def on_connect(client, userdata, flags, response_code):	    global connflag	    connflag = True	    print("Connected with status: {0}".format(response_code))		def on_publish(client, userdata, mid):	    client.disconnect()		def on_message(client, userdata, msg):	    print "---ON MESSAGE"	    print(msg.topic + " " + str(msg.payload))		if __name__ == "__main__":	    print "Loaded MQTT configuration information."	    print "Endpoint URL: " + mqtt_url	    print "Root Cert: " + root_ca	    print "Device Cert: " + public_crt	    print "Private Key: " + private_key		    client = mqtt.Client("aws_connector")	    client.tls_set(root_ca,	                   certfile = public_crt,	                   keyfile = private_key,	                   cert_reqs = ssl.CERT_REQUIRED,	                   tls_version = ssl.PROTOCOL_TLSv1_2,	                   ciphers = None)		    client.on_connect = on_connect	    client.on_message = on_message		    print "Connecting to AWS IoT Broker..."	    client.connect(mqtt_url, port = 8883)	    client.loop_start()		    while 1==1:	        sleep(0.5)	        if connflag == True:	            print "Publishing..."	            ap_measurement = random.uniform(25.0, 150.0)	            client.publish("ActivePower", ap_measurement, qos=1)	        else:	            print("Waiting for connection...")	</code></pre>		<p>My policies are described as below:</p>		<pre><code>{	  "Version": "2012-10-17",	  "Statement": [	    {	      "Effect": "Allow",	      "Action": "iot:Connect",	      "Resource": "*"	    },	    {	      "Effect": "Allow",	      "Action": "iot:Publish",	      "Resource": "arn:aws:iot:us-east-2:338639570104:topic/sm1"	    },	    {	      "Effect": "Allow",	      "Action": "iot:Subscribe",	      "Resource": "arn:aws:iot:us-east-2:338639570104:topic/sm1"	    }	  ]	}	</code></pre>		<p>Apparently, the connection is working and I am getting the following output:</p>		<blockquote>	  <p>Loaded MQTT configuration information.<br>	  Endpoint URL: XXXXXX.iot.us-east-2.amazonaws.com<br>	  Root Cert: ./certs/iotRootCA.pem   Device Cert: ./certs/deviceCert.crt   > Private Key: ./certs/deviceCert.key<br>	  Connecting to AWS IoT Broker...<br>	  Connected with status: 0<br>	  Publishing...<br>	  Publishing...<br>	  Publishing...<br>	  Publishing...<br>	  Connected with status: 0<br>	  Publishing...</p>	</blockquote>		<p>The problem is I am getting no messages from the publishing process. Am I doing something wrong? Is there something missing?</p>	"
49305730,85734589,49305730,3,0,Mon Mar 19 15:43:00 EDT 2018,1930814,"Agree with you, @Drise ."
49305730,85638727,49305730,3,0,Fri Mar 16 10:47:00 EDT 2018,2146559,"Have you tried using aws mqtt client library? It is slightly different from the paho implementation. https://github.com/aws/aws-iot-device-sdk-python"
49305730,85733951,49305730,3,0,Mon Mar 19 15:29:00 EDT 2018,868546,"`while 1==1:` -> `while True:`? However, it seems `1==1` is `0.003 usecs` faster on my machine. Interesting. Not worth the readability cost, however, imho."
49305730,85734168,49305730,3,0,Mon Mar 19 15:34:00 EDT 2018,1930814,"@Drise , `while 1==1` == `while True` == `while 1` == `while 1>0` == ... This part of code I just got of another example I found out at github... the problem is not related to that, so, I left as it was (though I also prefer `True`). Good observation, btw, related to performance!"
49305730,85734371,49305730,3,0,Mon Mar 19 15:39:00 EDT 2018,868546,"@Dalton By habit, if I see `while True` I instantly assocciate that with some application or thread loop (or a giant red flag). `while 1==1` to me is not instantly recognizable as this, though my brain is quite lazy when reading code, so it might just be me."
49305730,85733621,49305730,3,0,Mon Mar 19 15:22:00 EDT 2018,1930814,"No. I tried the `aws iot device sdk embedded c` which has a [problem in the subscribe operation](https://stackoverflow.com/questions/49280665/aws-iot-sdk-main-l206-error-subscribing-28-c-code). Furthermore, I saw that this python sdk also uses `paho-mqtt`. So, it works as a wrapper."
49305730,49329172,49305730,2,3,Fri Mar 16 20:39:00 EDT 2018,3083468,"<p>Make sure that the AWS IoT policy associated with your IoT certificate allows publishing on the <code>ActivePower</code> topic.</p>		<p>Currently your policy only allows you to publish to topic <code>sm1</code>. Update it to</p>		<pre><code> {	    "Effect": "Allow",	    "Action": "iot:Publish",	    "Resource": "arn:aws:iot:us-east-2:338639570104:topic/ActivePower"	 }	</code></pre>		<p>or as a quick and dirty way of troubleshooting if this is a policy issue add</p>		<pre><code>{	    "Effect": "Allow",	    "Action": "iot:*",	    "Resource": "*"	}	</code></pre>		<p>A policy this liberal is not recommended for production.</p>		<p>Also your subscribe policy has the wrong resource, and you need to add a policy statement for <code>iot:Receive</code> to be able to receive messages, if you were to subscribe to that topic.</p>		<p><a href="https://docs.aws.amazon.com/iot/latest/developerguide/action-resources.html" rel="nofollow noreferrer">AWS IoT policy resource documentation</a></p>	"
49305730,85740660,49329172,3,0,Mon Mar 19 18:21:00 EDT 2018,1930814,"I tried both approaches: same problem. Now I tried to delete my policy to create another one, but I am facing this problem: `The action failed because the resource conflicts with the precondition of the action. The policy cannot be deleted as versions other than than default version exist (name=SMPolicy)`."
49305730,85741585,49329172,3,0,Mon Mar 19 18:47:00 EDT 2018,1930814,"I created a new policy, leaving the problematic one there. I just attached the new policy, that is: `{	      "Effect": "Allow",	      "Action": [	        "iot:Connect",	        "iot:Publish",	        "iot:Subscribe",	        "iot:Receive"	      ],	      "Resource": "arn:aws:iot:us-east-2:338639570104:topic/*"	    }`. But, still, there is no message received from the publishing process. Apparently, the `on_message` is not working..."
49305730,85741789,49329172,3,0,Mon Mar 19 18:54:00 EDT 2018,3083468,"You are not subscribing to any topics in the code sample provided. on_message should fire when a message comes in on a topic you have subscribed to. Also note that to subscribe you need to allow iot:Subscribe on a topicfilter resource e.g. `arn:aws:iot:us-east-2: 338639570104:topicfilter/*`"
49305730,85742022,49329172,3,0,Mon Mar 19 19:01:00 EDT 2018,1930814,"Thanks by explanation. I was thinking the `on_message` was used by any feedback from the `server`. So, our publish operations do not have answers from server, right? How do we know if the operations were succeeded? Yet, how can I see the values sent to specific topics?"
49305730,85742274,49329172,3,0,Mon Mar 19 19:10:00 EDT 2018,3083468,"The simplest way I've found it to use the AWS IoT console. Select Test from the left side bar. Subscribe to `#` after it connects. You should see any published messages. You can also subscribe to a specific topic."
49305730,85733772,49329172,3,0,Mon Mar 19 15:26:00 EDT 2018,1930814,"I updated my question with the policies I have described and activated. Is there something missing?"
49305730,85739624,49329172,3,0,Mon Mar 19 17:50:00 EDT 2018,3083468,"@Dalton I've updated the answer."
