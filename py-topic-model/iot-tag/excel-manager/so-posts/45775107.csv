thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
45775107,45775107,null,1,2,Sat Aug 19 18:37:00 EDT 2017,3656912,"<p>It seems that IBM recently stopped to accept non TLS connections to the MQTT borker for security reasons. </p>		<p>I'm fond of a little application which reads accelerometer sensor data from the smartphone using JavaScript and sends it to the message broker via MQTT. </p>		<p><a href="https://github.com/ibm-watson-iot/discover-iot-sample" rel="nofollow noreferrer">This application</a> is broken. Therefore I'm trying to fix it in this <a href="https://github.com/romeokienzler/discover-iot-sample" rel="nofollow noreferrer">fork</a>. </p>		<p>As already mentioned, non TLS connections are rejected, that's why I've enabled TLS: </p>		<pre><code>        window.client.connect({	            onSuccess: onConnectSuccess,	            onFailure: onConnectFailure,	            userName: "use-token-auth",	            password: window.password,	            useSSL: true	});	</code></pre>		<p>It still doesn't connect. On the IBM Watson IoT Platform I'm seeing this error in the log, nothing else:</p>		<blockquote>	  <p>Closed connection from 213.55.176.207. The operation is not authorized.</p>	</blockquote>		<p>Now I've created a little test <a href="https://gist.github.com/romeokienzler/51c7d42920667724d91afec0142d30cf" rel="nofollow noreferrer">index.html</a> file. If I'm connecting as a device, it still doesn't work, but if I'm connecting as an application it works, as can be seen <a href="https://gist.github.com/romeokienzler/8b88a04f07454e984d94bb7a6714ddb1" rel="nofollow noreferrer">here</a>. But I've created the devices in the platform. And if I'm using an old instance of Watson IoT Platform it works but with newer ones not.</p>		<p>What am I doing wrong?</p>	"
45775107,45792575,45775107,2,3,Mon Aug 21 08:34:00 EDT 2017,3818286,"<p>in your code for the application you have this:</p>		<p><code>window.client = new Paho.MQTT.Client("bmzc5i.messaging.internetofthings.ibmcloud.com", 8883, 'a:myOrgId:'+Math.random().toString(16).substr(2, 8));	</code></p>		<p>which is fine, when an application connects the format of the id is <code>a:orgId:uniqueIdentifierForTheApplication</code></p>		<p>uniqueIdentifierForTheApplication can be any string (within the allowed character set), and does not need to be pre-registered, so generating a random number here works in 99% of cases.</p>		<p><code>window.client = new Paho.MQTT.Client("bmzc5i.messaging.internetofthings.ibmcloud.com", 8883, 'd:bmzc5i:'+Math.random().toString(16).substr(2, 8));	</code></p>		<p>when a device connects the id is in the format <code>d:orgId:typeId:deviceId</code>.  To connect a device it must first be registered, so an id of <code>d:orgId:randomNumber</code> will not work.</p>		<p>If you register a device with id <code>myDevice</code> of a device type with id <code>myType</code>, and set it's auth token to <code>myToken</code> then you would form the connection as below:</p>		<p><code>window.client = new Paho.MQTT.Client("bmzc5i.messaging.internetofthings.ibmcloud.com", 8883, 'd:bmzc5i:myType:myDevice');	      window.client.connect({	            onSuccess: onConnectSuccess,	            onFailure: onConnectFailure,	            userName: "use-token-auth",	            password: "myToken",	            useSSL: true	</code></p>		<p>Also, you should note the difference in the topic space when connecting as a device and as an application.</p>		<p>When you connect as an application you have org-wide scope.  So to publish/subscribe an event on behalf of a device you would use a topic such as:</p>		<p>publish to <code>iot-2/type/myType/id/myDevice/evt/statusEvent/fmt/json</code></p>		<p>When you connect as a device you have device-scope only (this is a security mechanism to limit the damage a compromised device can do).  So for a device the same thing is achieved with a publish to:</p>		<p><code>iot-2/evt/statusEvent/fmt/json</code></p>		<p>The Platform uses the identity of the device making the publish to determine which device that belongs to, whereas with an application the application decides which device to assign the event to.</p>	"
