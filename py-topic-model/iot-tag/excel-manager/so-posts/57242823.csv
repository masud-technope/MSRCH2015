thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
57242823,57242823,null,1,-1,Sun Jul 28 16:26:00 EDT 2019,11848807,"<p>during running this code</p>		<pre class="lang-py prettyprint-override"><code>import paho.mqtt.client as pub		c = pub.Client()		c.connect("broker.hivemq.com",1833)		while True:		    c.publish("room1","hello!welcome to iot class")	</code></pre>		<pre><code>Traceback (most recent call last):	  File "C:\Users\Sukreeti\Desktop\mqtt\publish.py", line 3, in &lt;module&gt;	    c.connect("broker.hivemq.com",1833)	  File "C:\Users\Sukreeti\AppData\Local\Programs\Python\Python37-32\lib\site-packages\paho\mqtt\client.py", line 839, in connect	    return self.reconnect()	  File "C:\Users\Sukreeti\AppData\Local\Programs\Python\Python37-32\lib\site-packages\paho\mqtt\client.py", line 962, in reconnect	    sock = socket.create_connection((self._host, self._port), source_address=(self._bind_address, 0))	  File "C:\Users\Sukreeti\AppData\Local\Programs\Python\Python37-32\lib\socket.py", line 727, in create_connection	    raise err	  File "C:\Users\Sukreeti\AppData\Local\Programs\Python\Python37-32\lib\socket.py", line 716, in create_connection	    sock.connect(sa)	TimeoutError: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond	</code></pre>	"
57242823,100986817,57242823,3,0,Sun Jul 28 16:48:00 EDT 2019,429063,"Start by finding a decent example which actually handles (re)connection and doesn't try to jam the channel with constant sending of the same message.  Also make sure you have the broker details right, especially as it hopefully requires ssl and credentials for access."
57242823,57243710,57242823,2,0,Sun Jul 28 18:11:00 EDT 2019,504554,"<p>Even if the code you have posted did work it would effectively be a DoS attack on the broker and not something you should be doing to a free public broker provided to allow people to test things.</p>		<p>This problem will be being caused because you are not starting a <a href="https://pypi.org/project/paho-mqtt/#network-loop" rel="nofollow noreferrer">network loop</a> thread. This thread handles all the messages that the broker sends back to the client, e.g. connection acknowledgements.</p>		<p>I suggest you read the <a href="https://pypi.org/project/paho-mqtt/#getting-started" rel="nofollow noreferrer">Getting Started</a> section of the Paho docs, but here is a better version of what you've posted that will only publish a single message.</p>		<pre><code>import paho.mqtt.client as pub		def on_connect(client, userdata, flags, rc):	    print("Connected with result code "+str(rc))	    client.subscribe("room1")	    client.publish("room1", "hello!welcome to iot class")		def on_message(client, userdata, msg):	    print(msg.topic+" "+str(msg.payload))			c = pub.Client()	c.on_connect = on_connect	c.on_message = on_message		c.connect("broker.hivemq.com",1833)	c.loop_forever() 	</code></pre>	"
