thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41853321,41853321,null,1,-1,Wed Jan 25 13:49:00 EST 2017,7461324,"<p>My requirement is to get json pair from mqtt subscriber at different timings under single_id in cloudant,  but I'm facing error while trying to insert new json pair in existing _id,  it simply replace old one. I need at least 10 json pair under one _id. Injecting at different timings. </p>	"
41853321,70895479,41853321,3,0,Wed Jan 25 15:51:00 EST 2017,1160853,"you should show the structure of the document(s) you want to insert. It will be easier to answer. Likely it is only a matter of loading the existing document from Cloudant (the document will have a _rev attribute maintained by Cloudant to handle save conflict), updating this document and inserting it again."
41853321,70896024,41853321,3,0,Wed Jan 25 16:03:00 EST 2017,7461324,"Though i'm new to cloudant,  struggling in it.  If we update the data means only existing will be modified.  How new record will be inserted in to existing _id which already holds one record?  I know it's possible to have more record under one _id  but whether it's possible to update the same _id by adding more records?"
41853321,70897330,41853321,3,0,Wed Jan 25 16:34:00 EST 2017,7461324,"If it not clear,  I can briefly explain"
41853321,41858503,41853321,2,4,Wed Jan 25 18:02:00 EST 2017,651215,"<p>First, you should make sure about your architectural decision to update a particular document multiple times. In general, this is discouraged, though it depends on your application. Instead, you could consider a way to insert each new piece of information as a separate document and then use a map-reduce view to reflect the state of your application. </p>		<p>For example (I'm going to assume that you have multiple "devices", each with some kind of unique identifier, that need to add data to a cloudant DB)</p>		<p>PUT</p>		<pre><code>{	  "info_a":"data a",	  "device_id":123	}		{	  "info_b":"data b",	  "device_id":123	}		{	  "info_a":"message a"	  "device_id":1234	}	</code></pre>		<p>Then you'll need a map function like</p>		<p><code>_design/device/_view/state</code></p>		<pre><code>{	  function (doc) {	    emit(doc.device_id, 1);	}	</code></pre>		<p>Then you can <code>GET</code> the results of that view to see all of the "info_X" data that is associated with the particular device. </p>		<p>GET account.cloudant.com/databasename/_design/device/_view/state</p>		<pre><code>{"total_rows":3,"offset":0,"rows":[	{"id":"28324b34907981ba972937f53113ac3f","key":123,"value":1},	{"id":"d50553d206d722b960fb176f11841974","key":123,"value":1},	{"id":"eaa710a5fa1ff4ba6156c997ddf6099b","key":1234,"value":1}	]}	</code></pre>		<p>Then you can use the query parameters to control the output, for example</p>		<p>GET account.cloudant.com/databasename/_design/device/_view/state?key=123&amp;include_docs=true</p>		<pre><code>{"total_rows":3,"offset":0,"rows":[	{"id":"28324b34907981ba972937f53113ac3f","key":123,"value":1,"doc":	  {"_id":"28324b34907981ba972937f53113ac3f",	     "_rev":"1-bac5dd92a502cb984ea4db65eb41feec",	     "info_b":"data b",	     "device_id":123}	  },	{"id":"d50553d206d722b960fb176f11841974","key":123,"value":1,"doc":	  {"_id":"d50553d206d722b960fb176f11841974",	     "_rev":"1-a2a6fea8704dfc0a0d26c3a7500ccc10",	     "info_a":"data a",	     "device_id":123}}	]}	</code></pre>		<p>And now you have the complete state for <code>device_id:123</code>. </p>		<h2>Timing</h2>		<p>Another issue is the rate at which you're updating your documents. </p>		<p>Bottom line recommendation is that if you are only updating the document once per ~minute or less frequently, then it could be reasonable for your application to update a single document. That is, you'd add new key-value pairs to the same document with the same <code>_id</code> value. In order to do that, however, you'll need to GET the full doc, add the new key-value pair, and then PUT that document back to the database. You must make sure that your are providing the most recent <code>_rev</code> of that document and you should also check for conflicts that could occur if the document is being updated by multiple devices. </p>		<p>If you are acquiring new data for a particular device at a high rate, you'll likely run into conflicts very frequently -- because cloudant is a distributed document store. In this case, you should follow something like the example I gave above. </p>	"
41853321,86747699,41858503,3,0,Mon Apr 16 21:00:00 EDT 2018,1579031,"What if we keep inserting (PUT) device info for the same attribute continuously - e.g. I keep inserting docs with key "info_a", but when I retrieve, I only want the latest doc with key "info_a". How to write map-reduce to get only the latest doc for each device attribute"
41853321,70937381,41858503,3,0,Thu Jan 26 16:02:00 EST 2017,7461324,"If my payload is {"_id":"100","No":"1"} here in cloudant it will create a _id 100 and store No :1 but if I try to insert {"_id":"100","No":"2"} under same_id it simply override the existing No : 1. I need both the records in Same document.  How come it possible?"
41853321,70941968,41858503,3,0,Thu Jan 26 18:02:00 EST 2017,651215,"It should not be possible for you to insert a second document with the same  "_id" value. That should fail with a 409 error. Second, you cannot construct a JSON document with two keys that are the same. You cannot make a document like this { _id:100, "No":1, "No":2}.  You could put all your numbers into an array, like { _id: 100, "No": [1, 2]}. But, I suggest you follow the example I laid out above."
41853321,41881560,41853321,2,0,Thu Jan 26 19:37:00 EST 2017,5244530,"<p>Example flow for the second approach outlined by @gadamcox for use cases where document updates are not required very frequently:</p>		<blockquote>	  <p>[...] you'd add new key-value pairs to the same document with the same <code>_id</code> value. In order to do that, however, you'll need to GET the full doc, add the new key-value pair, and then PUT that document back to the database. </p>	</blockquote>		<p>Your application first fetches the existing document by id:  (<a href="https://docs.cloudant.com/document.html#read" rel="nofollow noreferrer">https://docs.cloudant.com/document.html#read</a>)</p>		<pre><code>GET /$DATABASE/100		{	 "_id": "100",	 "_rev": "1-2902191555...",	 "No": ["1"]	}	</code></pre>		<p>Then your application updates the document in memory</p>		<pre><code>{	 "_id": "100",	 "_rev": "1-2902191555...",	 "No": ["1","2"]	}	</code></pre>		<p>and saves it in the database by specifying the <code>_id</code> and <code>_rev</code>  (<a href="https://docs.cloudant.com/document.html#update" rel="nofollow noreferrer">https://docs.cloudant.com/document.html#update</a>)</p>		<pre><code>PUT /$DATABASE/100		{	 "_id": "100",	 "_rev": "1-2902191555...",	 "No":["1","2"]	}	</code></pre>	"
