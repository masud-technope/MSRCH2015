thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
45189164,45189164,null,1,3,Wed Jul 19 11:26:00 EDT 2017,7986898,"<p>I am currently building a web app using the Paho MQTT Javascript library, and I was wondering in what case should I use the MQTT.JS library ?	Could you give me examples when I cannot use the Javascript library and need to use the MQTT.js library (which I think is made for Node.js) ? </p>		<p>(I know the two things are completely different but still, they both concern web applications!)</p>		<p>Thank you !</p>	"
45189164,77345940,45189164,3,0,Wed Jul 19 11:42:00 EDT 2017,504554,"What exactly do you mean my the "Node.JS one"? There are several MQTT libraries listed on npmjs.org none of which are provided by the Paho project."
45189164,77346343,45189164,3,0,Wed Jul 19 11:50:00 EDT 2017,893780,"From what I know, Paho in the browser can only communicate with a broker over websocket connections, which not every broker may support."
45189164,77346419,45189164,3,0,Wed Jul 19 11:52:00 EDT 2017,504554,"Websockets is all that is available from within the browser no matter which client library implementation you choose to use."
45189164,45189349,45189164,2,0,Wed Jul 19 11:35:00 EDT 2017,7603485,"<p>when you use mqtt broker, you should install npm package of mqtt, that package you can get from node.js.</p>		<p>using command : npm install mqtt</p>	"
45189164,45190054,45189164,2,1,Wed Jul 19 12:06:00 EDT 2017,504554,"<p>The Paho JavaScript client is specifically targeted for use in client side (in the browser) and uses MQTT over Websockets to connect to MQTT brokers that support this transport layer. It is the reference implementation for MQTT over Websockets.</p>		<p>Assuming you mean the <a href="https://www.npmjs.com/package/mqtt" rel="nofollow noreferrer">MQTT.js</a> package when talking about the "Node.JS one" this is a pure javascript implementation of the a MQTT client that can use either native MQTT or MQTT over Websockets when used with Node.JS to build client applications. It can also be used with a tool such as Browserify and Webpack then it can be packaged to be used in the web browser to connect to a MQTT broker using MQTT over Websockets</p>		<p>When you choose to use each depends on what you are trying to do, if you are purely writing a web client solution then the Paho library will meet your needs. If you are writing a Node.JS application then obviously then the MQTT.js is the correct choice. If you are writing both then there may be some merit in using the MQTT.js library in the both places to ensure consistency.</p>	"
