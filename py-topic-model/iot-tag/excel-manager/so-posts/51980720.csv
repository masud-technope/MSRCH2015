thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
51980720,51980720,null,1,0,Thu Aug 23 07:45:00 EDT 2018,6694325,"<p>I am trying to require the package "onoff" in js file on one of he node js project. When i run a js file i get error as below</p>		<p>\node_modules\bindings\bindings.js:88	        throw e	        ^</p>		<p>Error: Module did not self-register.</p>		<pre><code>at Object.Module._extensions..node (module.js:670:18)		at Module.load (module.js:560:32)		at tryModuleLoad (module.js:503:12)		at Function.Module._load (module.js:495:3)		at Module.require (module.js:585:17)		at require (internal/module.js:11:18)		at bindings (\node_modules\bindings\bindings.js:81:44)		at Object.&lt;anonymous&gt; (\node_modules\epoll\epoll.js:1:99)		at Module._compile (module.js:641:30)		at Object.Module._extensions..js (module.js:652:10)	</code></pre>		<p>Please help through this. </p>		<p>Thanks in advance </p>		<p>Pallavi K</p>	"
51980720,92783772,51980720,3,0,Mon Oct 22 20:31:00 EDT 2018,7070668,"Did you got  any solution ?"
51980720,53798371,51980720,2,0,Sun Dec 16 00:16:00 EST 2018,818073,"<p>I've run into this issue as well and ended up mocking the library for local development. There has been a few issues created over the years, and it seems like the author either doesn't have OSX to test or he just isn't interested in supporting OSX in general.</p>		<p>Issues created related to this problem:</p>		<ul>	<li><a href="https://github.com/fivdi/epoll/issues/12" rel="nofollow noreferrer">https://github.com/fivdi/epoll/issues/12</a></li>	<li><a href="https://github.com/fivdi/onoff/issues/69" rel="nofollow noreferrer">https://github.com/fivdi/onoff/issues/69</a></li>	<li><a href="https://github.com/fivdi/onoff/issues/106" rel="nofollow noreferrer">https://github.com/fivdi/onoff/issues/106</a></li>	</ul>		<p>This is the work around I have:</p>		<pre><code>// GpioFactory.js	class MockGPIO {	  constructor(pin, direction) {	    this._value = 0;	    this._direction = direction;	  }		  readSync() { return this._value; }	  read(cb) { cb(null, this._value) }	  writeSync(value) { this._value = value }	  write(value, cb) {	    this._value = value;	    cb(null, value);	  }	  watch(cb) {}	  unwatch(cb) {}	  unwatchAll() {}	  direction() { return this._direction }	  setDirection(direction) { this._direction = direction}	  edge() { return 0; }	  setEdge(edge) {}	  activeLow() { return true; }	  setActiveLow(invert) {}	  unexport() {}	}		MockGPIO.accessible = false;	MockGPIO.HIGH = 1;	MockGPIO.LOW = 0;		module.exports = {	  create: () =&gt; {	    try {	      return require('onoff').Gpio;	    } catch (e) {	      console.error('Using mock Gpio');	      return MockGPIO;	    }	  }	};	</code></pre>		<p>The actual fix is the <code>create()</code> method that just returns the mock class. This allows my client code to use both the same way:</p>		<pre><code>const GpioFactory = require('./GpioFactory');	const Gpio = GpioFactory.create();		const garageButton = new Gpio(4, 'out');	</code></pre>		<p>I don't use the full API of the library, so this example is likely missing some details.</p>		<p><em>Update: 12/15/2018</em></p>		<p>I submitted a PR to allow the <code>accessible</code> property to work on OSX as described in the docs. Hopefully it'll get merged.</p>		<p>PR: <a href="https://github.com/fivdi/onoff/pull/122" rel="nofollow noreferrer">https://github.com/fivdi/onoff/pull/122</a></p>	"
