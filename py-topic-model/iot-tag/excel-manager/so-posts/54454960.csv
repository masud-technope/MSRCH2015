thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54454960,54454960,null,1,3,Thu Jan 31 06:56:00 EST 2019,1451549,"<p>We are trying to implement the oneM2M standard and have a question regarding the communication process between Remote CSE and IN-CSE. I wrote what I understood from the documentation step by step in below. Some of the issues are not so clear for us so before doing any implementation, I need to make sure everything is crystal clear.</p>		<p>I going to ask the question before telling everything we understand from the documentation. Then I am going to write step by step what is the solution we think. The question is, the request which is sent by an IN-AE, is for MN-CSE which the IN-CSE should going to redirect the request to MN-CSE or it should handle it itself.</p>		<p>Before anything else, we have two absolutely separated CSEs. One is IN-CSE, the other one is MN-CSE almost like below.</p>		<p><strong>IN-CSE has a resource tree</strong></p>		<pre><code>/in-cse61	   /in-cse61/csr-34	      /in-cse61/ae-1234	</code></pre>		<p><strong>MN-CSE has a resource tree</strong></p>		<pre><code>/mn-cse34	   /mn-cse34/csr-61	   /mn-cse34/ae-123456	      /mn-cse34/cnt-1	         /mn-cse34/cin-01	         /mn-cse34/cin-02	         /mn-cse34/cin-03	      /mn-cse34/cnt-2	</code></pre>		<p>We skipped any security concern for now. Letâ€™s say IN-AE wants to communicate with MN-CSE as we told in question above.</p>		<p><strong>1-</strong>    IN-AE should send a discovery or retrieve request to IN-CSE saying that get me all the child resources Remote CSE.</p>		<p><strong>2-</strong>    What is the exact difference between sending discovery or sending retrieve request? We thought that discovery request returns just resource uri but retrieve request returns whole data of exact resource. Is this approach correct?</p>		<p><strong>3-</strong>    After getting all the remoteCSEs, now I know ids of the remoteCSEs'. Then I can send a discovery request to the MN-CSE to get AEs in it. We think two options:    </p>		<blockquote>	  <p>a.    ~/in-cse61/csr-34?fu=1&amp;rty=2<br>	  b.    ~/mn-cse34?fu=1&amp;rty=2</p>	</blockquote>		<p><strong>Option a :</strong> If IN-AE only wants to make a discovery request for IN-CSEâ€™s resource tree, IN-CSE should take care of it without redirecting it to the MN-CSE. Because IN-CSE already knows that /in-cse61/csr-34 is kind of a valid RemoteCSE for it but the request path starts with ~/in-cse61 then it should be handled by IN-CSE.</p>		<p><strong>Option b:</strong> If IN-AE wants to make a discovery request for MN-CSEâ€™s resource tree then IN-CSE can understand it is related a RemoteCSE by looking at the /mn-cse34 part of the Request path because it doesnâ€™t startwith IN-CSEâ€™s resourceid.</p>		<p>So IN-AE(ex. Smartphone) somehow should decide which CSE should handle the request ? Is there anything we think wrong ?</p>		<p>---------------------EDITED--------------------------------------</p>		<p><a href="https://i.stack.imgur.com/mHrKa.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/mHrKa.png" alt="enter image description here"></a></p>		<p>I have inspected architecture of Application Developer Guide TR-0025 <a href="http://www.onem2m.org/application-developer-guide/architecture" rel="nofollow noreferrer">http://www.onem2m.org/application-developer-guide/architecture</a></p>		<p>According to this sample, a smartphone (IN-AE) can control Light#1(ADN-AE-1) through IN-CSE.</p>		<p>After Registration and Initial Resource Creation processes are completed, system is ready to discover and then control the lights.</p>		<pre><code>GET /~/mn-cse/home_gateway?fu=1&amp;rty=3&amp;drt=2 HTTP/1.1	Host: in.provider.com:8080	</code></pre>		<p>Although Middle Node CSE-ID and Middle Node CSEBase name is used at HTTP Request url, host is addressed to IN-CSE. It means, the discovery request sent from IN-AE, handled by IN-CSE first then it redirects it to mn-cse. However you told me the opposite by saying â€œ<em>The retrieval or discovery normally is only limited to the resources of the hosting CSE, and does not traverse to the remote CSEs automatically.</em>â€?. </p>		<p>At TR-0025 the given example is shown as common scenario.	And also at TR-0034, Actually it is traversing the request as you see on the diagram.</p>		<p><a href="https://i.stack.imgur.com/OvDqX.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/OvDqX.png" alt="enter image description here"></a></p>	"
54454960,54467841,54454960,2,2,Thu Jan 31 19:21:00 EST 2019,4799,"<p>There are many points in your question that needs to be addressed.</p>		<p>First of all, there is no special entity in oneM2M named "IN-AE". This is just the name that is used for the AE that connects to the IN-CSE in oneM2M's <em>TR-0025 : Light control using HTTP binding</em> developer guide. An Application Entity can actually be connected to an IN-CSE or an MN-CSE by the same protocol (mca), though there might be AEs that are especially designed to work on one particular CSE.</p>		<p>Regarding your point 2, the difference between a <em>retrieve</em> and a <em>discovery</em> request:<br>	The <em>retrieve</em> request is targeted at a resource to retrieve it. For example, a retrieve request sent to the <em>Container</em> resource <em>/mn-cse34/cnt-1</em> (from your example) would retrieve the <em>Container</em> resource itself and its attributes.<br>	A <em>discovery</em> request is also be targeted at a resource, and technically it very much looks like a normal <em>retrieve</em> request. But in addition you provide <em>filter criteria</em> and <em>discovery result type</em>. For example, a discovery request sent to the same <em>Container</em> resource <em>/mn-cse34/cnt-1</em> might return all the references to the <em>ContentInstances</em> from that <em>Container</em> resource. Depending on the filter and result type you can either get the full resources or only references to them.</p>		<p>Please have a look at oneM2M's specification <em>TS-0001 Functional Architecture</em>,  sections <em>10.2.6 Discovery</em> and <em>8.1.2 Request</em> for a full explanation and the list of possible parameters for the <em>discovery</em> request.</p>		<p>Regarding points 1 and 3 of your question: I don't know what your AE wants to solve, but it should have a notion of the data structure build in. It is a good idea to organise the data in a structured and uniform way, e.g. by using <em>Containers</em>, <em>FlexContainers</em>, <em>Groups</em> etc. This way the application doesn't need to browse the whole resource tree of a CSE, which could become really big over time. Of course, it might be that it is a general application that needs to traverse over a bigger and prior unknown structure. In that case the application could use a <em>discovery</em> request to get the relevant resources. Please note, that you can also do discovery over meta-data of resources, e.g. labels, date and time etc. This might be helpful to reduce the result set.</p>		<p>The retrieval or discovery normally is only limited to the resources of the hosting CSE, and does not traverse to the remote CSEs automatically. An exception are <em>announced</em> resources. Those resources are announced to a remote CSE where they get a kind of "shadow" counterpart, and they provide your application some information about the state of the resources as well as to how to retrieve them (via a link attribute). But if you really want to access a remote CSE and your application has permissions to do so, the <em>pointOfAccess</em> attribute provides you with the address of the remote CSE.</p>		<p>But as said before, in general you application (AE) is connected to a single CSE. On that CSE all the resources of the AE, or the resources the AE has access to, are hosted. Also keep in mind that the AE needs to have permission (via an <em>AccessControlPolicy</em>) on the CSE to access the resource.</p>		<p><strong>Update</strong></p>		<p>Perhaps I need to elaborate a bit more on how to work with a remote CSE. Ignoring <em>announced</em> resource for now, there are two possibilities that your "IN-AE" can access a resource on the remote CSE: </p>		<ul>	<li>You can send requests such as <em>retrieve</em>, <em>update</em> etc to the remote CSE resource in the IN-CSE. These requests are then forwarded to the real "mn-cse" instance by the <em>Mcc</em> connection between the IN-CSE and the MN-CSE. This has the advantage that the "IN-AE" doesn't need to care on how to connect to the MN-CSE "mn-cse" directly (e.g. there might be firewalls etc in place to protect the MN-CSE).<br>	You can see this if you look at the HTTP Request in the example of TR-0025 (<a href="http://www.onem2m.org/application-developer-guide/implementation/content-instance-retrieve" rel="nofollow noreferrer">http://www.onem2m.org/application-developer-guide/implementation/content-instance-retrieve</a>)<br>	<code>GET /~/mn-cse/home_gateway/light_ae1/light/la HTTP/1.1</code><br>	This receiver of the http request is the IN-CSE. But, as you can see it targets a <em>ContentInstance</em> at the remote CSE <em>mn-cse</em>.</li>	<li>If you really need to access the remote CSE directly, for example for performance reasons, then your "IN-AE" can retrieve the <em>pointOfAccess</em> attribute and directly access the remote CSE "mn-cse". In that case the "IN-AE" actually becomes an AE of the remote CSE "mn-cse" and needs to know how to connect to it.</li>	</ul>	"
54454960,95761457,54467841,3,2,Fri Feb 01 10:11:00 EST 2019,4799,"Thank you. I added an update on how to work with remote CSE. I hope this answers your question."
54454960,95759995,54467841,3,2,Fri Feb 01 09:24:00 EST 2019,1451549,"Your counterpart shadow information gave me valuable insight. I edited the question to make the problem more clear. Could you please check again?"
