thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53269762,53269762,null,1,3,Mon Nov 12 20:39:00 EST 2018,10642742,"<p>I'm implementing my <code>DIY</code> <code>IoT</code>. I have a central node (server) which receives the commands from different sources and executes them.</p>		<p>Input format:</p>		<pre><code>&lt;DEVICE_NAME&gt;_&lt;COMMAND&gt; &lt;DEVICE_NAME&gt;_&lt;COMMAND&gt;  &lt;DEVICE_NAME&gt;_&lt;COMMAND&gt;	&lt;DEVICE_NAME&gt;_&lt;COMMAND&gt;  &lt;DEVICE_NAME&gt;_&lt;COMMAND&gt; 	&lt;DEVICE_NAME&gt;_&lt;COMMAND&gt;  &lt;DEVICE_NAME&gt;_&lt;COMMAND&gt;  &lt;DEVICE_NAME&gt;_&lt;COMMAND&gt; 	</code></pre>		<p>Each line may contain multiple commands.</p>		<p>I have implemented a command executor server which takes the commands from the session as an <code>InputStream</code>. Then I split the data and process it:</p>		<pre><code>private Device c0 = // Device constructor	private Device c1 = // Device constructor	private Device c2 = // Device constructor	private Device c3 = // Device constructor		private ExecutorService executor = Executors.newFixedThreadPool(3);		public void onConnection(InputStream in)     	    InputStreamReader isr = new InputStreamReader(in);	    LineNumberReader reader = new LineNumberReader(isr);		    String line = null;	    while ((line = reader.readLine()) != null) {	        String[] strings = line.split(",");	        for (String raw : strings) {	            String command = raw.substring(0, 3);	            if (raw.startsWith("C0_")) {	                executor.submit(() -&gt; c0.execute(command));	            } else if (raw.startsWith("C1_")) {	                executor.submit(() -&gt; c1.execute(command));	            } else if (raw.startsWith("C2_")) {	                executor.submit(() -&gt; c2.execute(command));	            } else if (raw.startsWith("C3_")) {	                executor.submit(() -&gt; c3.execute(command));	            }	        }	    }	}	</code></pre>		<p>I understand the code looks ugly. Do you have any improvement ideas? Maybe I could use <code>Steam API</code>?	Any hints/advices are appreciated.</p>		<p>UPDATE</p>		<p>I've tried to clean the code a bit by submitting the task only once, but the compailer sais the <code>device</code> must be <code>final</code> or <code>effectively final</code> so this does not work:</p>		<pre><code>String command = raw.substring(0, 3);	Device device;	if (raw.startsWith("C0_")) {	    device = c0;	} else if (raw.startsWith("C1_")) {	    device = c1;	} else if (raw.startsWith("C2_")) {	    device = c2;	} else if (raw.startsWith("C3_")) {	    device = c3;	}	executor.submit(() -&gt; device.execute(command));	</code></pre>	"
53269762,93434746,53269762,3,0,Tue Nov 13 08:02:00 EST 2018,2711488,"The reason why the compiler complains in your last code snippet, is because `device` will not be initialized when all four tests fail. You have to handle that case with a last `else`, either assign a fall-back value to `device` or with a control flow statement which prevent the invocation of `submit` in that case."
53269762,93434609,53269762,3,0,Tue Nov 13 07:55:00 EST 2018,2711488,"You are extracting the command via `String command = raw.substring(0, 3);`, which gives you precisely the part, you are checking via `raw.startsWith(…)`. That `command` string would work perfectly with `equals`, or a `Map` lookup, or a `switch` statement, to choose the right operation. I suppose, the actual argument to the operation should be `raw.substring(3)`…"
53269762,93423312,53269762,3,0,Mon Nov 12 20:42:00 EST 2018,10584605,"Did you try to improve the code by yourself? Where did you reached so far?"
53269762,93423338,53269762,3,0,Mon Nov 12 20:43:00 EST 2018,10642742,"Yes, I did. But without success full results."
53269762,93423346,53269762,3,0,Mon Nov 12 20:43:00 EST 2018,6496240,"I think there is a better place for such questions https://codereview.stackexchange.com/"
53269762,93423362,53269762,3,0,Mon Nov 12 20:44:00 EST 2018,10584605,"Please post your intermediary code."
53269762,93423395,53269762,3,0,Mon Nov 12 20:45:00 EST 2018,10642742,"upadtedc the description"
53269762,53269901,53269762,2,4,Mon Nov 12 20:51:00 EST 2018,10584605,"<p>You can map your commands like this: </p>		<pre><code>InputStreamReader isr = new InputStreamReader(is);	BufferedReader buffReader = new BufferedReader(isr);		Map&lt;String, List&lt;String&gt;&gt; map = buffReader.lines()	            .map(s -&gt; s.split(" "))	            .flatMap(Arrays::stream)	            .map(s -&gt; s.split("(?&lt;=_)", 2))	            .collect(groupingBy(p -&gt; p[0], mapping(p -&gt; p[1], toList())));	</code></pre>		<p><strong>Update</strong></p>		<p>Actually you can combine both mapping and submitting:</p>		<pre><code>// Register your devices	Map&lt;String, Device&gt; devices = new HashMap&lt;&gt;();	devices.put("c0", c0);	devices.put("c1", c1);	devices.put("c2", c2);	devices.put("c3", c3);	...		public void onConnection(InputStream in) {	    InputStreamReader isr = new InputStreamReader(is);	    BufferedReader buffReader = new BufferedReader(isr);	    buffReader.lines()	              .parallel()	              .map(s -&gt; s.split(" "))	              .flatMap(Arrays::stream)	              .map(s -&gt; s.split("(?&lt;=_)", 2))	              .forEach(p -&gt; executor.submit(	                      () -&gt; devices.get(p[0]).execute(p[1])	               ));	}	</code></pre>	"
53269762,93423561,53269901,3,0,Mon Nov 12 20:53:00 EST 2018,10642742,"Okay, thanks. But how can I submit the commands to the executor? Do I need to iterate over `map` ?"
