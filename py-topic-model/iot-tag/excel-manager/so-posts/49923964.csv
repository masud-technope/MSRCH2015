thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
49923964,49923964,null,1,3,Thu Apr 19 14:46:00 EDT 2018,4189441,"<p>Lets say I have multiple distributed complex machines. Each machine contains of multiple cpmplex devices. Each device has its own OPC UA server to monitore the device components. With an OPC UA client I want to read all the data items of the OPC UA servers. </p>		<p>Now I don't know how to build the information model. I design a global information model which contains all machines, their devices and the internal components of the devices. From the global point of view, that makes sense. But do I have to create also a local information model for each server? Or does the local OPC UA server use the global information model, but the server implements only for that server relevant objects (based on the global information model)?</p>		<p><strong>UPDATE:</strong></p>		<p>Here is an example setup: </p>		<p><a href="https://i.stack.imgur.com/GbJDl.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/GbJDl.jpg" alt="enter image description here"></a></p>		<p>In the example you can see three layers - machine layer, building layer and factory layer. </p>		<p>Here is my understanding how to model such setups. There is one overall OPC UA information model, which describes all types etc. Each OPC UA server knows that information model and all contained type descriptions. </p>		<p>Now, depending on the real world setup, I can create an object model. An OPC UA server at the machine layer contains all objects from the underlying system, in this example the devices. </p>		<p><a href="https://i.stack.imgur.com/A5MnC.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/A5MnC.jpg" alt="enter image description here"></a></p>		<p>With an OPC UA Client at the building layer, I can connect to the OPC UA server from the machines and I can read all data items from the devices inside the machines. </p>		<p>An OPC UA client at the factory layer can connect to the OPC UA servers from the buildings. The OPC UA server at the building level can provide more objects:</p>		<p><a href="https://i.stack.imgur.com/NrqgF.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/NrqgF.jpg" alt="enter image description here"></a></p>		<p>And an OPC UA client from outside the factory can see the whole picture of the object model: </p>		<p><a href="https://i.stack.imgur.com/PGy8X.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/PGy8X.jpg" alt="enter image description here"></a></p>		<p>But how can I route through the servers to get the device data from outside the factory? Do I have to create the object model from the machine layer again in the building layer? And again in the next higher level layer and so on? </p>		<p>Or does any OPC UA server at each layer know the whole object model like the information model? </p>	"
49923964,86869829,49923964,3,0,Thu Apr 19 17:30:00 EDT 2018,3961280,"What OPC UA server are you using? Kepware? Matrikon? Something else?"
49923964,86872363,49923964,3,1,Thu Apr 19 18:50:00 EDT 2018,4189441,"I think the information model should be ocpp server supplier-independent. The question is, does every server know the whole model or only their own part of it?"
49923964,86871525,49923964,3,0,Thu Apr 19 18:24:00 EDT 2018,4189441,"Yet I am not using any specific server. My question is a general question how to deal with the information model."
49923964,86871789,49923964,3,0,Thu Apr 19 18:32:00 EDT 2018,3961280,"I am not sure if it differs between different OPC servers out there, but I know with Kepware there is an OPC UA client driver that can auto-populate the same "information model" as its source OPC UA server. Or, if you wish, you could change the tag names when you read from the source OPC UA server. But that increases complexity and maintainability.  Really, bringing all of the OPC UA server data into one "central" OPC server really only simplifies things from the client's point-of-view (whatever is accessing the OPC data)."
49923964,86871813,49923964,3,0,Thu Apr 19 18:33:00 EDT 2018,3961280,"Sorry for the rant, I think its a difficult question to answer without knowing what OPC server you plan to use"
49923964,49937366,49923964,2,3,Fri Apr 20 08:31:00 EDT 2018,1282835,"<p>The OPC UA servers include two main categories of information: types and instances.</p>		<p>When we are talking about information models, we typically talk about different type definitions. For example generic models for all devices (OPC UA for Device (DI)) or specific models for certain device types (OPC UA for Analyzer Devices (ADI), etc). The types define common structures for objects: when you encounter an object of type "spectrometer", for example, you know what kind of structure to expect from it. The types are often fixed and when they are standardised, they should not change. If you define your own types, which can be specialisations of the standard types, you have of course a bit more flexibility.</p>		<p>Now, if you wish to model a complete production site, you would be creating the outline and arrangement of actual instances: "Spectrometer 1" inside the "Laboratory" and "Vessel 13" inside the "ProductionHall B", for example. This model is typically more dynamic and up to change, when the layout of the facility is changed. </p>		<p>Due to the above reasons, we don't typically model the instances in the standard models or talk about them that much as information models. You could think that they are more or less the configuration of the system.</p>		<p>Now, as you've realised, the whole system may consist of various OPC UA servers in practice. The capabilities of each server are varying and your options may be limited. In an ideal world, all servers would be serving data modelled via proper information models. That is, the instances would follow the structures of standard types or enabling you to model them with your own types. </p>		<p>On the other hand, most of the currently existing OPC UA servers are just providing "unmodeled" data. This was the only option in OPC Classic and most actual OPC UA servers are still on the same level. Hopefully, in future we will see more OPC UA servers providing the option to adopt information models in them as well. Or we might see a rise of "Aggerating OPC UA Servers", which enable you to remodel the data according to standard or custom models.</p>		<p>Anyway, when you create models of your systems, I advice you to concentrate on the type information and then just apply this to the actual layout model of your system by using these types.</p>		<p>To actually answer your question, I think it is enough if you just create the model you need in your system, since you cannot probably spread it very well to the actual OPC UA servers at the moment. But of course, it would be better if you could apply the models to the specific servers as well.</p>	"
49923964,86893874,49937366,3,0,Fri Apr 20 10:06:00 EDT 2018,4189441,"Thanks for your answer. So you think each server should contain the model of its underlying system? But to get the complete picture, a higher level server needs to combine all parts to one global model. How would you do that?"
49923964,86910740,49937366,3,1,Fri Apr 20 17:42:00 EDT 2018,85927,"Each server acts as an "aggregating" server for the servers below it, just as you have it in the diagrams. The building server makes client connections to the machine servers, and has a more complete information model. Then the factory server makes client connections to the building servers, and adds more to the information model. You will not likely achieve this with any "off the shelf" server products. This will likely involve some custom development."
49923964,86964694,49937366,3,0,Mon Apr 23 06:10:00 EDT 2018,4189441,"But is this the usual way to do so? is it best practice?"
