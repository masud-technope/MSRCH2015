thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55274906,55274906,null,1,0,Thu Mar 21 06:30:00 EDT 2019,6886682,"<p>What is the maximum size of a file uploaded through IoT Hub? Is it 256KB like the maximum message size (according to <a href="https://github.com/MicrosoftDocs/azure-docs/blob/master/includes/iot-hub-limits.md" rel="nofollow noreferrer">documentation</a>)</p>	"
55274906,55275266,55274906,2,2,Thu Mar 21 07:02:00 EDT 2019,4148708,"<p>You're uploading to blob storage if you're using the <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-file-upload#initialize-a-file-upload" rel="nofollow noreferrer"><strong>File Upload</strong></a> functionality in the IoT Hub Device SDK .</p>		<p><a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-scalability-targets#azure-blob-storage-scale-targets" rel="nofollow noreferrer">Current size limit of a block blob is 4.75 TiB.</a></p>		<p><a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-csharp-csharp-file-upload" rel="nofollow noreferrer">Sample code:</a></p>		<pre class="lang-cs prettyprint-override"><code>private static async void SendToBlobAsync()	{	    string fileName = "image.jpg";	    Console.WriteLine("Uploading file: {0}", fileName);	    var watch = System.Diagnostics.Stopwatch.StartNew();		    using (var sourceData = new FileStream(@"image.jpg", FileMode.Open))	    {	        await deviceClient.UploadToBlobAsync(fileName, sourceData);	    }		    watch.Stop();	    Console.WriteLine("Time to upload file: {0}ms\n", watch.ElapsedMilliseconds);	}	</code></pre>		<p><a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.devices.client.deviceclient?view=azure-dotnet" rel="nofollow noreferrer"><code>deviceClient</code></a> is your IoT Hub client (device).</p>	"
55274906,97288198,55275266,3,1,Thu Mar 21 11:17:00 EDT 2019,4148708,"If you do decide to do that test please report back findings, we should make a pull request into the IoT Hub documentation since i believe this is key information that may help many others."
55274906,97288500,55275266,3,0,Thu Mar 21 11:25:00 EDT 2019,6886682,"I'll do and I'll post here"
55274906,97289520,55275266,3,2,Thu Mar 21 11:56:00 EDT 2019,1537195,"It should count as 2 messages. How the File Upload works: The DeviceClient sends a message to IoT Hub requesting a storage URL including a SAS token (1 message). IoT Hub sends down the requested URL and token. Now the DeviceClient will do the upload directly against the Blob storage. IoT Hub is not involved in this part. Once the upload is done, DeviceClient sends the second message, the File Upload notification ("hey, I'm done uploading") to IoT Hub."
55274906,97289659,55275266,3,1,Thu Mar 21 12:01:00 EDT 2019,6886682,"@silent Looks like you're right. I created new IoT Hub - strange thing is that initially it already had 3 messages count, even though I didn't even create any devices. Then I created a simple file uploader and run it. Now I see 5 messages - so 2 were added."
55274906,97286666,55275266,3,0,Thu Mar 21 10:32:00 EDT 2019,6886682,"Thanks! Is it counted as just 1 message in IoTHub? Or no message at all?"
55274906,97287368,55275266,3,1,Thu Mar 21 10:53:00 EDT 2019,4148708,"Good question. The [file upload notification][https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notifications] definitely counts toward the message quota, not sure about the `.UploadToBlobAsync()`. Test it out, create a new hub with just one device and point a simulated device to it, do an upload and check counters."
