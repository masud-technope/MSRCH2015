thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44242353,44242353,null,1,1,Mon May 29 12:20:00 EDT 2017,3035395,"<p>I am building Azure IoT solution for my BI project. For now I have an application that once per set time window sends a .csv blob to Azure Blob Storage with incremental number in name. So after some time I will have in my storage files such as 'data1.csv', 'data2.csv', 'data3.csv', etc.</p>		<p>Now I will need to load these data into a database which will be my warehouse with the use of Azure Stream Analytics job. The issue might be that .CSV files will have overlapping data. They will be send every 4h and contain data for past 24h. I need to always read only last file (with highest number) and prepare lookup so it properly updates data in the warehouse. What will be the best approach to make Stream Analytics read only latest file and for updating records in DB?</p>		<p>EDIT:	TO clarify - I am fully aware that ASA is not capable of being an ETL job. My question is what would be best approach for my case with using IoT tools</p>	"
44242353,75502642,44242353,3,0,Mon May 29 16:39:00 EDT 2017,932728,"AFAIK ASA is for streaming data and cannot rewind or forward in that 'stream' so it won't be possible to address the overlap. Maybe Azure Data Factory is a better solution. Or store the .csv files in Azure Data Lake Store and use Azure Data Lake Analytics to create a job that transforms the data."
44242353,44339044,44242353,2,0,Sat Jun 03 00:21:00 EDT 2017,7532627,"<p>I would suggest one of these 2 ways: </p>		<ul>	<li>use ASA to write in a temporary SQL table, and the use a SQL trigger	to update the main table of the DW with the diff. </li>	<li>Or remove duplicates by adding a unique constraint as described here:	<a href="https://blogs.msdn.microsoft.com/streamanalytics/2017/01/13/how-to-achieve-exactly-once-delivery-for-sql-output/" rel="nofollow noreferrer">https://blogs.msdn.microsoft.com/streamanalytics/2017/01/13/how-to-achieve-exactly-once-delivery-for-sql-output/</a></li>	</ul>		<p>Thanks,	JS - Azure Stream Analytics</p>	"
