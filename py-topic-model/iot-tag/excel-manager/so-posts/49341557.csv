thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
49341557,49341557,null,1,0,Sat Mar 17 20:23:00 EDT 2018,2707824,"<p>I'm developing an IOT platform, running embedded Linux OS.	I'm considering 2 options for implementing the IPC between applications, ZeroMQ and D-Bus.<br>	At first ZeroMQ seems to fit as I can build with its building blocks the exact wanted architecture, but when I read about the ready D-Bus mechanism, suddenly it sounds like I will reinvent the wheel with the ZeroMQ. </p>		<p>Please, advise if for my needs there are any drawbacks for choosing D-Bus over ZeroMQ, and I would like to know what you would choose. </p>		<p>I haven't hard about real time constraints, but I do need the system to be scale-able as the number of apps always grows and they all need to interact with each other.  </p>		<p>The applications interact with each other using blocking &amp; non-blocking request-responses.</p>		<p>Thanks.</p>	"
49341557,49345717,49341557,2,0,Sun Mar 18 07:58:00 EDT 2018,2147218,"<p>I don't know too much about D-Bus - I'm more familiar with ZMQ. One very nice feature of ZMQ is that it scales from in-process, to IPC, to network TCP without any source code changes (simply change the connection string). This is very handy for making distributed systems as there's very little code changes to be done to redeploy parts of your software on different boxes. It is also pretty good at managing connection / disconnection for you; if the network link between two processes is there, ZMQ will dynamically connect them.</p>		<p>One thing that is a problem for IOT is that a lot of devices have to be battery powered (door locks, radiator valves, etc), and so cannot sustain full time IP connections required for protocols like ZMQ. That's why radio links like ZWAVE, Thread and ZigBee exist, but using them is much more like using UDP. </p>	"
49341557,85717588,49345717,3,0,Mon Mar 19 08:47:00 EDT 2018,2707824,"Thanks. do you familiar with non-distributed systems that uses ZeroMQ as IPC only?"
49341557,85739280,49345717,3,0,Mon Mar 19 17:40:00 EDT 2018,2147218,"@Yuval, do you mean do I know software that uses ZeroMQ solely within a process, using "ipc://" or "inproc://" as the sole means of comms between threads? Yes, I've written some (closed source), and I'm sure lots of other people do. The nice thing is that if or when a system grows too big for a single PC, it's pretty easy to distribute it. Other communications APIs that are strictly within a single computer won't scale, and some prefer not to risk a future code re-write should scaling ever become a requirement."
49341557,85759120,49345717,3,0,Tue Mar 20 08:21:00 EDT 2018,2707824,"Thanks bazza, that helps.	I don't have any plans for spread my system to more than one board but to processes withing a single board.	I think i will go for zeroMQ for my system."
