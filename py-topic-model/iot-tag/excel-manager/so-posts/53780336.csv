thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53780336,53780336,null,1,0,Fri Dec 14 13:01:00 EST 2018,681671,"<p>I want to create isolated environments on a single MQTT server. Like a database server can have multiple schemas and table names can be repeated in different sachems. I want to have a "MQTT schema" where topics/subscriptions in one schema are isolated from those in another "MQTT schema" so that the same topic can be used in different schemas. It would be even better if security can be applied on a per schema basis but that would be asking for a lot. Right now, I am just looking for a way to have isolated environments on the same server - it will probably require a separate TCP port per schema just to identify the destination schema of a connecting client, as the protocol itself does not have have any concept of schema. Or the clients can be mapped to a particular schema based on the username or client ID. </p>		<p>Note: I am aware of how to use ACL to restrict topic access for each user. ACLs do not solve this problem. I don't simply want to restrict topic access, I want to create separate environment where users are free to do what the want with the topics without out me telling them which topic names they cannot use etc.</p>	"
53780336,53785271,53780336,2,0,Fri Dec 14 18:43:00 EST 2018,504554,"<p>Just use a docker container running mosquitto and spin up new instances for each <em>schema</em>. Map each instance to a separate external port. Total isolation and of you include the auth plugin you can map the security to a separate db table for each <em>schema</em> with environment variables</p>	"
53780336,53917069,53780336,2,1,Mon Dec 24 19:24:00 EST 2018,504554,"<p>The other option is the <code>mount_point</code> configuration option that can be used with a <code>listener</code> declaration (man <a href="https://mosquitto.org/man/mosquitto-conf-5.html#idm407" rel="nofollow noreferrer">page</a>).</p>		<blockquote>	  <p><em>mount_point</em> topic prefix</p>	  	  <p>This option is used with the listener option to isolate groups of clients. When a client connects to a listener which uses this option,	  the string argument is attached to the start of all topics for this	  client. This prefix is removed when any messages are sent to the	  client. This means a client connected to a listener with mount point	  example can only see messages that are published in the topic	  hierarchy example and above.</p>	</blockquote>		<p>The difference between this and the other option (docker container) is that you can have listener declarations that can see all the traffic of all the different partitions by having a listener with no mount point.</p>	"
53780336,94683818,53917069,3,0,Tue Dec 25 09:02:00 EST 2018,681671,"Fantastic. Will try it. It is just what I need. Thanks."
