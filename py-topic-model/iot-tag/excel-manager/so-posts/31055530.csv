thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
31055530,31055530,null,1,0,Thu Jun 25 16:12:00 EDT 2015,881188,"<p>I am trying to create an external sqlite database, I follow and tested text files in the removable storage and works. So then I try to create a database in the removable Storage:</p>		<pre><code>public static async Task&lt;String&gt; CreateDatabase(string name)	    {	        var folder = await FindRemovableStorage();	        if (folder != null)	        {	            var file = await folder.CreateFileAsync(name, CreationCollisionOption.ReplaceExisting);	            if(file!=null)	            {	                var ret = $"{folder.Name}{file.Name}";	                return ret;	            }	        }	        return null;		    }		public async void ThirdCase()	    {	        var path =await DataLoggerService.CreateDatabase("db.dat");		        var connection = new SQLite.Net.SQLiteConnection(new SQLitePlatformWinRT(), path); //Cannot Open		    }	</code></pre>		<p>I am testing on the desktop, and returns CannotOpen. Does anyone has created a database out from the typical local folder?</p>		<p>More details of what I did here: <a href="http://expediteapps.com/blog/data-logger-with-windows-10-iot-in-progress/" rel="nofollow">datalogger</a></p>		<p>When I finish I want to implement in a Raspberry Pi, theorically is the same code for the Windows IoT or is there any change in the SQLitePlatformWinRT?</p>		<p>EDITION: More analisys:</p>		<p>I have tested a database with the typical, working like a charm:</p>		<pre><code>Path.Combine(Windows.Storage.ApplicationData.Current.LocalFolder.Path, "db.dat");	</code></pre>		<p>I wanted to create the database in an external storage, to do that I need to add the following steps:</p>		<p>1.- Add Capability to use removablestorage.	2.- Add file type association in order to have rights to manage that kind of files</p>		<p>(The details here: <a href="http://expediteapps.com/blog/data-logger-with-windows-10-iot-in-progress/" rel="nofollow">http://expediteapps.com/blog/data-logger-with-windows-10-iot-in-progress/</a>)</p>		<p>So then I change the path to the removable storage path like â€œE:\db.datâ€? and it always tells CannotOpen.</p>		<p>The SQLite library PCL It arrives to here:</p>		<p>SQLiteApiWinRT.cs</p>		<pre><code>public Result Open(byte[] filename, out IDbHandle db, int flags, IntPtr zvfs)	{	    Sqlite3DatabaseHandle internalDbHandle;	    var ret = (Result)SQLite3.Open(filename, out internalDbHandle, flags, zvfs);	    db = new DbHandle(internalDbHandle);	    return ret;	}	</code></pre>		<p>Where Open is</p>		<pre><code>[DllImport("sqlite3", EntryPoint = "sqlite3_open_v2", CallingConvention = CallingConvention.Cdecl)]	</code></pre>		<p>public static extern Result Open(byte[] filename, out IntPtr db, int flags, IntPtr zvfs);</p>		<p>where I am using:</p>		<pre><code>SQLite.UAP.2015, Version=3.8.10	</code></pre>		<p>MORE Aditions:</p>		<p>I have tested this library <a href="https://www.nuget.org/packages/SQLitePortable/" rel="nofollow">https://www.nuget.org/packages/SQLitePortable/</a> and I finish in the same error, so it is internal.</p>		<p>And here is where the road ends, any help?</p>	"
31055530,37829713,31055530,2,0,Wed Jun 15 08:14:00 EDT 2016,6400706,"<p>Since you asked for <strong>RaspberryPi 3 Windows 10 IoT SQLite</strong> implementation, here are the steps I followed to make it work: (Visual Studio 2015 Community)</p>		<ol>	<li>Download: <a href="http://sqlite.org/download.html" rel="nofollow">.vsix package for Universal Windows Platform</a> from the sqlite page</li>	<li>Install the package from the download folder</li>	<li>In Visual Studio go to Tools->NuGet Package Manager->Package Manager	Console and type in: <code>Install-Package SQLite.Net-PCL</code></li>	<li>Add required References (Right Mouse Button -> Add Reference ->	Universal Windows -> Extensions)</li>	</ol>		<p>Here I choose the following:</p>		<ul>	<li>Microsoft Visual C++ 2013 Runtime Package for Windows Universal</li>	<li>SQLite for Universal Windows Platform</li>	<li>Visual C++ 2015 Runtime for Universal Windows Platform Apps</li>	<li>Windows IoT Extensions for the UWP (Since I am using RPi 3 with GPIO	Pins)</li>	</ul>		<p>Basically I followed <a href="http://blog.chrisbriggsy.com/Using-SQLITE-in-Windows-10-IoT-Core-Insider-Preview/" rel="nofollow">chrisbriggsy steps</a> and had to add some more resources cause SQLite didn't work </p>	"
31055530,63171840,37829713,3,0,Thu Jun 16 10:52:00 EDT 2016,6400706,"I really like your article - In case ANYBODY still struggles with creating it:	`path = Path.Combine(Windows.Storage.ApplicationData.Current.LocalFolder.Path, "db.sqlite");		conn = new SQLite.Net.SQLiteConnection(new SQLite.Net.Platform.WinRT.SQLitePlatformWinRT(), path);		conn.CreateTable<Message>();`"
31055530,63146074,37829713,3,0,Wed Jun 15 18:10:00 EDT 2016,881188,"'Long time ago' I made this very complete article http://expediteapps.com/blog/storing-data-with-windows-10-iot/ I really dig into what it is possible and in case it has not changed, at this moment is not possible to use directly a database from an SDCard, that was my question here."
