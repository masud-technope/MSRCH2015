thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56055650,56055650,null,1,0,Thu May 09 08:51:00 EDT 2019,5709469,"<p>I am using the Bosch IoT Suite's Permissions Service.</p>		<p>I have an issue generating agent credentials. What are the steps and parameters i need to specify to generate agent credentials? I am trying to create an agent credentials which is able to auto activate newly created user accounts.</p>	"
56055650,56056003,56055650,2,5,Thu May 09 09:11:00 EDT 2019,11474603,"<p>here are some steps to create the agent credentials for Bosch IoT Suite Permissions:</p>		<p><strong>Purpose</strong></p>		<p>Use a AuthorizedClient of Permissions to</p>		<ul>	<li>activate Users without having them to do it themselves </li>	<li>reduce the permissions of a user by creating agent-credentials with a subset of rights (to reduce the impact if credentials are abused)</li>	</ul>		<p><strong>Prerequisits</strong></p>		<ol>	<li>You have booked the IoT Permissions Service on bosch-iot-suite.com</li>	<li>You have created a User in the Permissions Service</li>	</ol>		<p>Check out the Guide from Bosch IoT Permissions: <a href="https://permissions.s-apps.de1.bosch-iot-cloud.com/docs/developer-guide/index.html#Getting-started---Bosch-IoT-Suite_216542264" rel="nofollow noreferrer">https://permissions.s-apps.de1.bosch-iot-cloud.com/docs/developer-guide/index.html#Getting-started---Bosch-IoT-Suite_216542264</a></p>		<p><strong>Guide</strong></p>		<ol>	<li>Create the Authentication Token with your desired user</li>	</ol>		<pre><code>POST https://permissions-api.s-apps.de1.bosch-iot-cloud.com/2/rest/authentication	Headers:	    x-im-client-access-token: &lt;....&gt;	    Authorization Basic &lt;username:password&gt; (Base64 encoded username:password)	</code></pre>		<ol>	<li>Create the <strong>Authorization Token</strong> with that <strong>Authentication Token</strong>	(warning) You need to be careful to put the right scope into that Authorization Token (to activate users, use scope "pn")</li>	</ol>		<pre><code>POST https://permissions-api.s-apps.de1.bosch-iot-cloud.com/2/rest/authorization/HAX?scope=pn	Headers:	    x-im-client-access-token: &lt;....&gt;	    Authorization: Bearer &lt;authentication token&gt;	</code></pre>		<ol start="2">	<li>Create the Agent Credentials with the Authorization Token</li>	</ol>		<pre><code>POST https://permissions-api.s-apps.de1.bosch-iot-cloud.com/2/rest/users/current/agent-credentials	Headers:	    x-im-client-access-token: &lt;....&gt;	    Authorization: Bearer &lt;authorization token&gt;		Body:	{	  "scopes": [ "pn" ]	}	</code></pre>		<p><strong>Usage in Java implementation</strong></p>		<ol>	<li>Include Permission library into your application	Follow the guide from <a href="https://permissions.s-apps.de1.bosch-iot-cloud.com/docs/developer-guide/index.html#API2ClientforJava-Gettingstarted" rel="nofollow noreferrer">Bosch IoT Permissions</a></li>	<li>Create a Permissions client instance		<pre><code>     Permissions.createClientBuilder()	            .clientId(clientId)	            .clientSecret(clientSecret)	            .serviceUrl(serviceUrl)	            .build();	</code></pre></li>	<li>Create an authenticated Permissions client (be aware, that the authenticated Permissions client has an expiration date, so you need to recreate it from time to time)		<pre><code>    permissionsClient.authenticate()	            .agentCredentialsId(agentCredentialsId)	            .password(agentPassword)	            .andCreateAuthorizedClient()	            .executeAndGet()	            .getAuthorizedClient();	</code></pre></li>	</ol>	"
56055650,98755049,56056003,3,0,Thu May 09 10:19:00 EDT 2019,5709469,"Ok cool thanks! It looks like that last bit where the Usage in Java Implementation, i'm seeing both blocks of Java code to be identical. Is that correct?"
56055650,98757490,56056003,3,0,Thu May 09 11:35:00 EDT 2019,11474603,"Thanks @ZubairHamed for pointing that out! I corrected it :)"
56055650,98784033,56056003,3,1,Fri May 10 07:21:00 EDT 2019,1376543,"The answer is really good but I would like to add the following note: Be aware that Agent Credentials are technical credentials for use cases like the one mentioned in the question. So the number of permissions granted to the Agent Credential should be restricted to the required permissions which are needed to fulfill their tasks and not more. It is therefore recommended to use the "filters" property in the request when creating the Agent Credential. You should create an application- or tenant-role and link the required permission (ACTIVATION_CODE_ADMINISTRATION) and filter for that role."
