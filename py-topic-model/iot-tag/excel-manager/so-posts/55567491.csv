thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55567491,55567491,null,1,0,Mon Apr 08 06:36:00 EDT 2019,4396154,"<p>I am using Mosca as embedded MQTT broker with mosquito backend. I am using Mosca primarily as an auth mechanism which can read the jwt tokens and extract some values out of it. I have created my own authorizers to read JWT token in mqtt password field and decode/verify it. After decoding I add the decoded fields to the client object like following </p>		<pre><code>authenticate(client, username, password, next) {	    try {	        const decoded_token = jwt.verify(password.toString(), process.env.SECRET_KEY_BASE);	        client.decoded_token = decoded_token;	        next(null, true);	    } catch(error) {	        console.log('name: %s, error: %s', error.name, error.message);	        console.log('unauthorized!');	        next(null, false);	    }	}	</code></pre>		<p>I want to access the <code>decoded_token</code> value in the <code>published</code> callback like following</p>		<pre><code>broker.on('published', (packet, client) =&gt; {	    console.log(client.decoded_token);	    console.log('Published', packet.topic, packet.payload);		});	</code></pre>		<p>Somehow the above code does not work as expected. I get the following error:</p>		<p>TypeError: Cannot read property 'decoded_token' of undefined</p>		<p>Whereas if instead of <code>console.log(client.decoded_token)</code> I use <code>console.log(client)</code>, it works and I can see the <code>decoded_token</code> value in client object.</p>		<p>I have two questions. </p>		<ol>	<li>Why does the above code not work?</li>	<li>When I store a value in the client object, is the value passed to the client (sensor) which it can send with subsequent requests or is it only stored in local memory?</li>	</ol>		<p>I am new to MQTT so please excuse me if the questions are too naive :)</p>	"
55567491,97834568,55567491,3,0,Mon Apr 08 06:58:00 EDT 2019,9381809,"client is just a JS native object which are passed by reference so if you are adding  a decoded_token in another middleware/function it must be accessible in the next one, so the above code must work however *console.log(client.decoded_token) I use console.log(client), it works and I can see the decoded_token* does not make sense. Can you please console log both together and see?"
55567491,97835977,55567491,3,0,Mon Apr 08 07:45:00 EDT 2019,4396154,"My mistake. console.log(client) prints undefined. That means I am not able to access the client object in the published callback."
55567491,55568063,55567491,2,1,Mon Apr 08 07:16:00 EDT 2019,9455168,"<ol>	<li>If you can get decoded_token variable in client object. Then We can	access it by</li>	</ol>		<blockquote>	  <p>client.decoded_token</p>	</blockquote>		<p>If you are using vs code or Webstrom for development you can use an inbuilt debugger to debug and print client object.</p>		<ol start="2">	<li>You can't pass a value into a client object for the next call.</li>	</ol>	"
55567491,97835366,55568063,3,0,Mon Apr 08 07:25:00 EDT 2019,4396154,"WRT your point 2, Are you saying that I can't access the decoded_token from the client when the client publishes to a topic?  My idea is to store the parameters about the sensor in the token so that I can read the data and the parameters whenever sensor publishes to its topic."
