thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
34604275,34604275,null,1,0,Tue Jan 05 04:42:00 EST 2016,4442129,"<p>I have hooked up my arduino with Azure mobile services and http post request is working fine where I am able to send data from sensor. But when using a http get request to access data from the tables, I am landing up with this data whereas I should be getting a json data in the Serial Window. </p>		<blockquote>	  <p>X-cache-Lookup: MISS from Webmaster:8080</p>	</blockquote>		<p>Here is the code that is on my Arduino. I have no idea where I am wrong.</p>		<pre><code>#include &lt;ArduinoJson.h&gt;	#include &lt;SPI.h&gt;	#include &lt;Ethernet.h&gt;	#define RESPONSE_JSON_DATA_LINENNO 10	// Ethernet shield MAC address (sticker in the back)	byte mac[] = { 0xA4, 0x5D, 0x36, 0x6A, 0xE1, 0xE1 };	int qq=0;	const char* server= "avirup.azure-mobile.net";	const char* table_name= "iottest";	const char* ams_key="rkIEUqVlFrgtmqNeMmaamgUQywwMjE42";	char stat;	EthernetClient client;	char fin='0';	char buffer[64];	int charIndex=0;	StaticJsonBuffer&lt;200&gt; jsonbuffer;		void send_request()	{	  Serial.println("\nconnecting...");	  if (client.connect(server, 80)) {	    Serial.print("sending ");  		    // GET URI	    sprintf(buffer, "GET /tables/%s HTTP/1.1", table_name);	    Serial.println(buffer);	    client.println(buffer);		    // Host header	    sprintf(buffer, "Host: %s", server);	    client.println(buffer);		    // Azure Mobile Services application key	    sprintf(buffer, "X-ZUMO-APPLICATION: %s", ams_key);	    client.println(buffer);		    // JSON content type	    client.println("Content-Type: application/json");		    //POST body	    sprintf(buffer, "", "");		    //Content length	    client.print("Content-Length: ");	    client.println(strlen(buffer));	    Serial.print("Content length: ");	    Serial.println(strlen(buffer));	    // End of headers	    client.println();		    // Request body	    client.println(buffer);		  } 	  else {	    Serial.	      println("connection failed");	  }	}		/*	** Wait for response	*/		void wait_response()	{	  while (!client.available()) {	    if (!client.connected()) {	      return;		  }	}	}	/*	** Read the response and dump to serial	*/		// Read the response and dump to serial	void read_response()	{		  int jsonStringLength;	  int jsonBufferCntr=0;	  int numline=RESPONSE_JSON_DATA_LINENNO;	  //Ignore the response except for the 10th line	  while (client.available()) {	    char c = client.read();		    if (c == '\n')	    {	      numline -=1;		    }	    else 	    {	      if (numline == 0 )	      {	    //Capture the 10th line in the response	    //To do: Could be more deterministic about this:	    //       Expect certain content, checks and balances etc.	        buffer[jsonBufferCntr++] = c; 	        buffer[jsonBufferCntr] = '\0';  	      }	    }	  }	  Serial.println("Received:");	  Serial.println(buffer);		  Serial.println("");	}	/*	** Close the connection	*/	void parse()	{	  //char json[] = "{\"id\":\"34CCC60D-15D2-4B53-AB8E-FF3745FDC945\",\"control\":1}";	  JsonObject&amp; root = jsonbuffer.parseObject(buffer);	  if(!root.success())	  {	    Serial.println("PARSING FAILED!!!");	    return;	  }	  //fin= root["control"][0];	  int f= root["control"][0];	  Serial.println("Decoded: ");	  Serial.println(f);	}	void end_request()	{	  client.stop();	}		/*	** Arduino Setup	*/		void setup()	{	  pinMode(13,OUTPUT);	  digitalWrite(13,LOW);	  Serial.begin(9600);	  while (!Serial) {	    ; // wait for serial port to connect.	  }	  if (Ethernet.begin(mac) == 0) {	    Serial.println("ethernet failed");	    for (;;) ;	  }	  // give the Ethernet shield a second to initialize:	  delay(1000);	}		/*	** Arduino Loop	*/		void loop()	{	  send_request();	  wait_response();	  read_response();	  end_request();	  delay(1000);	}	</code></pre>	"
34604275,57942046,34604275,3,0,Sun Jan 31 05:04:00 EST 2016,4442129,"Apologies for the late reply. I figured out that this problem was due to the fact that the problem was due to my Internet Service Provider."
34604275,56973433,34604275,3,0,Tue Jan 05 14:29:00 EST 2016,66051,"what happens if you try to access the same url via browser or curl request?"
