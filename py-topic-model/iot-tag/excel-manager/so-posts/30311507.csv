thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
30311507,30311507,null,1,0,Mon May 18 19:38:00 EDT 2015,4910670,"<p>I was able to successfully follow the Embedded C guide to set up my device with the PARSE API and send a test push to it, but I'm having an issue registering the device for custom push notifications. When I go to the Push page and try to "Send a push" I get a message saying "No Registered Devices". I assume that this has to do with the fact that the device does not register to any channels using the provided sample code. The API documentation lacks severely on the <code>ParseClient</code> class and therefore I am left wondering how one would achieve this? </p>		<p>Can the <code>parseSendRequest</code> function be used to modify fields in the Installation class?</p>		<p>The goal here is to be able to send custom push notifications to the said device, any sample code would be greatly appreciated.</p>		<p>Thanks!</p>	"
30311507,30552696,30311507,2,0,Sun May 31 00:33:00 EDT 2015,4830274,"<p>After some trial and error this seemed to work for me to send non-targetted pushes like the button on the getting started page:</p>		<pre><code>curl -X POST \	  -H "X-Parse-Application-Id: ${APPLICATION_ID}" \	  -H "X-Parse-REST-API-Key: ${REST_API_KEY}" \	  -H "Content-Type: application/json" \	  -d '{	        "where": {	          "deviceType": "embedded"	        },	        "data": {	          "alert": "Hello World!"	        }	      }' https://api.parse.com/1/push	</code></pre>		<p>It does not quite answer your question of how to properly register the device but you can at least send custom push notifications.</p>	"
30311507,49284956,30552696,3,0,Wed Jun 03 00:24:00 EDT 2015,4910670,"Thanks I'll give this a try first time I get a chance. There are also some C functions in the API that let you establish a session between your embedded device and the PARSE cloud. Maybe they make a difference so I will check. I believe your answer is precisely what the button on the tutorial page does, or at least similar. Btw, you might to include the link in the code block since it's one of the `curl` arguments."
