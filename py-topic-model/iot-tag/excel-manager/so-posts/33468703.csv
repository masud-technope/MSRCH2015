thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33468703,33468703,null,1,0,Sun Nov 01 23:59:00 EST 2015,5236624,"<p>I am trying to make a Windows IoT app in C++ where I can use C# code as well.</p>		<p>I first created a solution with a Visual C++ Blank Windows IoT Core Console Application. Here is the code in the entry point:</p>		<pre><code>// EnterPoint.cpp : Defines the entry point for the console application.	//		#include &lt;iostream&gt;		#include "pch.h"		#using &lt;MainLogic.dll&gt;		int main(int argc, char **argv)	{	    int result = MainLogic::StartupTask::Start();	    std::cout &lt;&lt; result &lt;&lt; "\n";	}	</code></pre>		<p>Then I created another project in the same solution named MainLogic, this time a Visual C# Class Library (Portable) using .NET Framework 6 and the default targets as well as Windows Phone 8.1. Here is the code in the C# file I made:</p>		<pre><code>using System;	using System.Collections.Generic;	using System.Linq;	using System.Text;		namespace MainLogic	{	    public class StartupTask	    {	        public static int Start()	        {	            return 0;	        }	    }	}	</code></pre>		<p>I built the C# project, and added <code>..\MainLogic\bin\Debug</code> to the Reference Directories and C/C++ -> Additional #using Directories of the C++ project.</p>		<p>When I ran this on a Local Windows Debugger with an x86 architecture, it gave an error:</p>		<pre><code>Unhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'MainLogic, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.	   at main(Int32 argc, SByte** argv)	   at _mainCRTStartup()	</code></pre>		<p>in the resulting command prompt window. It prompted me to break, and I did. That window said this:</p>		<pre><code>Unhandled exception at 0x75613E28 (KernelBase.dll) in PythonInCSharpInCPP.exe: 0xE0434352 (parameters: 0x80070002, 0x00000000, 0x00000000, 0x00000000, 0x72D60000).	</code></pre>		<p>I went to the last address (0x72D60000), and somewhere around it was the text "This program cannot be run in DOS mode".</p>		<p>What am I doing wrong?</p>	"
33468703,55098591,33468703,3,0,Thu Nov 12 00:46:00 EST 2015,5236624,"I found the answer here: http://stackoverflow.com/questions/33489924/can-you-use-c-dlls-in-c-sharp-code-in-a-uwp/33490707?noredirect=1"
33468703,33469170,33468703,2,0,Mon Nov 02 01:03:00 EST 2015,5231607,"<p>You need at add the C# project as a dependency in the C++ one.  Then when you build the C# DLL will be copied to the C++ output directory.</p>		<p>The 0x72D60000 address is the base address the DLL was loaded at.  Every windows program starts with a stub that says it can't be run in DOS mode, for use back in the days when MS-DOS was still being run along with windows.  That part is skipped when run under Windows.</p>	"
33468703,54724267,33469170,3,0,Mon Nov 02 01:28:00 EST 2015,5236624,"I checked MainLogic in Project -> Project Dependencies, but the error sill came up."
