thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40752991,40752991,null,1,10,Tue Nov 22 22:41:00 EST 2016,4552218,"<p>I'm using the following code to connect to a WiFi network without internet connection, because it hosts its own web-server where I want to connect even if there is no internet connection available. </p>		<pre><code>WifiConfiguration wifiConfiguration = new WifiConfiguration();	wifiConfiguration.SSID = String.format("\"%s\"", scanResult.SSID);	wifiConfiguration.preSharedKey = String.format("\"%s\"", "secret");		int netId = wifiManager.addNetwork(wifiConfiguration)	wifiManager.disconnect();	wifiManager.enableNetwork(netId, true);	wifiManager.reconnect();	</code></pre>		<p>This works fine on every device below Android Marshmallow (I'm using CM13, so is it maybe related to CyanogenMod?): When I use this code to connect, Android still uses the mobile connection and mark the WiFi symbol with an exclamation mark. Seconds later it shows a notification with the question if I want to stay connected, because the network has no internet connection.</p>		<p>Problem: My app tries to connect automatically to my web-server which fail, because there is obviously no internet connection. Of course it would be possible to wait until I can reach my web-server, but it should work without user interaction. </p>		<p>How does ChromeCast <strong>or any other IoT device</strong> solve this? I never saw a notification like this when I was setting up my ChromeCast device.</p>	"
40752991,68827377,40752991,3,0,Fri Nov 25 10:52:00 EST 2016,6092067,"You might want to try the solution given by @KodeMechanic in this [SO post](http://stackoverflow.com/a/27370352) wherein he used this to setup to cast from PC to chromecast using a mobile wireless connection.	`ChromeCast -> Local Router -> PC with PDANet -> USB connect to Mobile Phone with FoxFi app installed`."
40752991,68842803,40752991,3,1,Fri Nov 25 19:18:00 EST 2016,4552218,"Chromecast is here just an example that it is working. I want to implement a custom wifi accesspoint without this message that there is no internet connection, like chromecast :) It has nothing to do with chromecast exactly."
40752991,68827402,40752991,3,0,Fri Nov 25 10:53:00 EST 2016,6092067,"Additionally, you may want to also check the steps to setup and use Chromecast without internet data in this [thread](https://www.reddit.com/r/LifeProTips/comments/38sb3v/lpt_use_chromecast_without_internetmobile_data_by/crxfse8/).		Hope that works for you too!"
40752991,70466163,40752991,3,0,Fri Jan 13 11:13:00 EST 2017,1685748,"@ForJ9 Did you get this working i am working on a similar app and its working but is a bit buggy on some devices."
40752991,41633522,40752991,2,8,Fri Jan 13 11:22:00 EST 2017,1685748,"<p>I solved this by binding (<code>connectivityManager.bindProcessToNetwork(network);</code>) the current process to the connected network. This prevents the "keep using this network" Dialog and allows you to communicate with the device over wifi.</p>		<pre><code>NetworkRequest.Builder builder;	if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) {	    builder = new NetworkRequest.Builder();	    //set the transport type do WIFI	    builder.addTransportType(NetworkCapabilities.TRANSPORT_WIFI);		    connectivityManager.requestNetwork(builder.build(), new ConnectivityManager.NetworkCallback() {	        @Override	        public void onAvailable(Network network) {	            if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) {	                if (Build.VERSION.RELEASE.equalsIgnoreCase("6.0")) {	                    if (!Settings.System.canWrite(mActivity)) {	                        Intent goToSettings = new Intent(Settings.ACTION_MANAGE_WRITE_SETTINGS);	                        goToSettings.setData(Uri.parse("package:" + mActivity.getPackageName()));	                        mActivity.startActivity(goToSettings);	                    }	                }	                connectivityManager.bindProcessToNetwork(null);	                if (mSsid.contains("my_iot_device-xxxxxxxxx")) {	                    connectivityManager.bindProcessToNetwork(network);	                } else {		                }		            } else {	                //This method was deprecated in API level 23	                ConnectivityManager.setProcessDefaultNetwork(null);	                if (mSsid.contains("my_iot_device-xxxxxxxxx")) {	                    ConnectivityManager.setProcessDefaultNetwork(network);	                } else {		                }		            }	            try {	                //do a callback or something else to alert your code that it's ok to send the message through socket now	            } catch (Exception e) {	                Crashlytics.logException(e);	                e.printStackTrace();	            }	            connectivityManager.unregisterNetworkCallback(this);	        }	    });	}	</code></pre>	"
40752991,70789516,41633522,3,0,Mon Jan 23 07:03:00 EST 2017,2489122,"I am having trouble establishing the connection itself. [http://stackoverflow.com/questions/41712432/connecting-to-wifi-network-automatically-in-android-5-and-6](See my question) Any pointers?"
40752991,74516403,41633522,3,1,Tue May 02 11:31:00 EDT 2017,2331968,"why is the "ACTION_MANAGE_WRITE_SETTINGS" needed? why is it specific to 6.0?"
40752991,97131549,41633522,3,0,Sat Mar 16 13:09:00 EDT 2019,2456270,"@FabiodeToledo jeah and it doesn't help at all. Android 8 (and 9) things they now better than you what network you should use - incredible annoying."
40752991,79728686,41633522,3,0,Sat Sep 23 23:55:00 EDT 2017,4859731,"have any one tried this on Android 8?"
