thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43185707,43185707,null,1,0,Mon Apr 03 13:17:00 EDT 2017,7790523,"<p>I am developing an iot app ,I want to show a pop-up in case wifi/celluar internet is slow .	How to implement the slow networks alert in objective c ?</p>	"
43185707,73444746,43185707,3,1,Mon Apr 03 13:25:00 EDT 2017,5184217,"Check below link it may be useful to you   For Reachability http://stackoverflow.com/a/7938778/5184217  And check for slow internet http://stackoverflow.com/a/13910178/5184217"
43185707,43185790,43185707,2,1,Mon Apr 03 13:20:00 EDT 2017,6920041,"<p>I think you could try the <a href="http://developer.apple.com/library/ios/#samplecode/Reachability/Introduction/Intro.html" rel="nofollow noreferrer">Reachbility</a> application to help you out checking if you have internet or not. As for the server itself, you can use the <a href="http://developer.apple.com/library/mac/#documentation/Foundation/Reference/NSURLConnectionDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/intf/NSURLConnectionDelegate" rel="nofollow noreferrer">NSUrlConnection Delegate</a> methods to check if there was a problem with your request (by seeing the kind of HTTP code that comes)</p>		<pre><code>Reachability *reachability = [Reachability reachabilityForInternetConnection];	NetworkStatus internetStatus = [reachability currentReachabilityStatus];		if(internetStatus == NotReachable) {	UIAlertView *errorView;		errorView = [[UIAlertView alloc]	             initWithTitle: NSLocalizedString(@"Network error", @"Network error")	             message: NSLocalizedString(@"No internet connection found, this application requires an internet connection to gather the data required.", @"Network error")	             delegate: self	             cancelButtonTitle: NSLocalizedString(@"Close", @"Network error") otherButtonTitles: nil];		[errorView show];	[errorView autorelease];	}	</code></pre>	"
43185707,73446154,43185790,3,0,Mon Apr 03 13:56:00 EDT 2017,3695849,"This cannot determine the network status as slow or fast!"
43185707,73446876,43185790,3,0,Mon Apr 03 14:11:00 EDT 2017,6920041,"@TejaNandamuri check second answer."
43185707,73446924,43185790,3,0,Mon Apr 03 14:12:00 EDT 2017,3695849,"Dont copy paste answers .Instead you can vote to close this as duplicate!"
43185707,73447027,43185790,3,0,Mon Apr 03 14:14:00 EDT 2017,6920041,"@TejaNandamuri okey"
43185707,43186925,43185707,2,0,Mon Apr 03 14:11:00 EDT 2017,6920041,"<p>You can send a request to your server and given that it's about 5-10 KB of data you expect to be returned, then create a timer callback that is scheduled for say 20 seconds.</p>		<p>If you don't get a response within 20 seconds, then let's consider that a slow connection.</p>		<pre><code>// make POST request to server, the POST request should have a callback method assigned	[self testSpeed];		// schedule a method to be called after 20 seconds	myTimer = [NSTimer scheduledTimerWithInterval:20.0 selector:@selector(stopSpeedTest) .... ];		// your POST request callback method	-(void)speedTestCallback	{	[myTimer invalidate];	myTimer = nil;		   [self alertGoodSpeed];	}		// your stopSpeedTest method to identify app didn't receive response within 20 seconds	-(void)stopSpeedTest	{	   [self alertTooSlow];	}	</code></pre>	"
43185707,43189301,43185707,2,1,Mon Apr 03 16:02:00 EDT 2017,6914227,"<p><strong>Full example to check internet connection.</strong></p>		<p><strong>please download <a href="https://developer.apple.com/library/content/samplecode/Reachability/Introduction/Intro.html" rel="nofollow noreferrer">reachability class .h and .m</a> from here</strong></p>		<blockquote>	  <p>Follow these steps</p>	</blockquote>		<p><strong>viewcontroller.h</strong></p>		<pre><code>@class Reachability;		@interface DashboardVC : UIViewController	{		Reachability* internetReachable;	Reachability* hostReachable;		}		-(void) checkNetworkStatus:(NSNotification *)notice;	</code></pre>		<p><strong>viewcontroller.m</strong></p>		<pre><code>-(void) viewWillAppear:(BOOL)animated	{	// check for internet connection	[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(checkNetworkStatus:) name:kReachabilityChangedNotification object:nil];		internetReachable = [Reachability reachabilityForInternetConnection];	[internetReachable startNotifier];		// check if a pathway to a random host exists	hostReachable = [Reachability reachabilityWithHostName:@"www.apple.com"];	[hostReachable startNotifier];		// now patiently wait for the notification	}			-(void) checkNetworkStatus:(NSNotification *)notice	{	// called after network status changes	NetworkStatus internetStatus = [internetReachable currentReachabilityStatus];	switch (internetStatus)	{	    case NotReachable:	    {	        NSLog(@"The internet is down.");		        break;	    }	    case ReachableViaWiFi:	    {	        NSLog(@"The internet is working via WIFI.");//your device is connected with wifi			        break;	    }	    case ReachableViaWWAN:	    {	        NSLog(@"The internet is working via WWAN.");//your internet is connected with mobile data			        break;	    }	}		}	</code></pre>	"
