thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
45714363,45714363,null,1,0,Wed Aug 16 13:04:00 EDT 2017,6093781,"<p>I would like to send the value of the timestamp of a simulation as int. To be more clear, if the mote output is:</p>		<pre><code>00:39.841   ID:6    unicast message ready to be sent	</code></pre>		<p>I want to be able to put in my message the value 00:39.841 in milliseconds. How can I do?</p>		<p>Thank you.</p>	"
45714363,78387139,45714363,3,0,Wed Aug 16 13:11:00 EDT 2017,6093781,"I've tried with RTIMER_NOW(), but it returns a value of rtimer_clock_t type and I need int. My goal is to be able to distinguish at the Receiver which message has been prepared later than the other"
45714363,45715040,45714363,2,0,Wed Aug 16 13:32:00 EDT 2017,8254699,"<p>I would recommend you to use function <a href="http://www.cplusplus.com/reference/cstring/strtok/" rel="nofollow noreferrer">strtok()</a> to find string you need i.e. <code>00</code> or <code>39</code>.</p>		<p>and <a href="http://www.cplusplus.com/reference/cstdlib/strtol/" rel="nofollow noreferrer"><code>strtol()</code></a> to conversion from string to long integer. Anyway, stay <strong>away</strong> from <code>atoi()</code>.</p>		<p><a href="https://stackoverflow.com/questions/17710018/why-shouldnt-i-use-atoi">Why shouldn't one use atoi()</a>.</p>		<p>Here is example, convertion from minutes/seconds to miliseconds is up to you.</p>		<pre><code>#include &lt;stdio.h&gt;	#include &lt;stdlib.h&gt;	#include &lt;string.h&gt;		int main()	{	    char input[] = "00:39.841   ID:6    unicast message ready to be sent";	    char * ptr;			    long minutes  = 0,	         seconds  = 0,	         milisecs = 0;		    ptr     = strtok(input, ":");	    if (ptr == NULL) { fprintf(stderr, "Wrong input minutes."); return 1; }	    minutes = strtol(ptr, (char **)NULL, 10);		    ptr     = strtok(&amp;input[3], ".");	    if (ptr == NULL) { fprintf(stderr, "Wrong input seconds."); return 1; }	    seconds = strtol(ptr, (char **)NULL, 10);		    ptr     = strtok(&amp;input[6], " ");	    if (ptr == NULL) { fprintf(stderr, "Wrong input milisecs."); return 1; }	    milisecs = strtol(ptr, (char **)NULL, 10);		    printf("%ld - %ld - %ld\n", minutes, seconds, milisecs);		    return 0;	}	</code></pre>	"
45714363,78392250,45715040,3,0,Wed Aug 16 15:06:00 EDT 2017,6093781,"it doesn't work in this way.."
45714363,78392352,45715040,3,0,Wed Aug 16 15:09:00 EDT 2017,8254699,"So maybe its time to create [MCVE](https://stackoverflow.com/help/mcve) since your question doesnt contain much informations."
45714363,78388312,45715040,3,0,Wed Aug 16 13:38:00 EDT 2017,6093781,"OK, but I don't need this, the mote output comes from Cooja and I want to be able to access the time"
45714363,78388772,45715040,3,0,Wed Aug 16 13:48:00 EDT 2017,8254699,"So get output from Cooja, store it and then convert it like i did ? `char * input = CoojaOutput` Thats exactly what you asked for."
45714363,78390347,45715040,3,0,Wed Aug 16 14:23:00 EDT 2017,6093781,"Yes, but in this way I have to access the text script, and I want to avoid, I would like to use functions like RTIMER_NOW() ad so on. Thank you"
45714363,78390800,45715040,3,0,Wed Aug 16 14:33:00 EDT 2017,6093781,"maybe a function like clock_second() but getting millisec could be better.."
45714363,78391320,45715040,3,0,Wed Aug 16 14:44:00 EDT 2017,8254699,"Then multiply seconds * 1000 and youve got miliseconds."
