thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44371056,44371056,null,1,1,Mon Jun 05 14:18:00 EDT 2017,3258754,"<p>I'm creating a simple monitoring system. A few devices (atmega8 + GSM modem + a few sensors) sends logs to the server, it stores them to database and shows some statistics on the simple web page. I decided to use a Tomcat as a web server (mostly because I use Java).</p>		<p>The problem is that I'm not able to create HTTP requests and parse the responses at atmega: I do not have enough RAM. Native sockets would solve it, but it looks like Tomcat does not support raw sockets.</p>		<p>I found a <a href="https://code.google.com/archive/p/jca-sockets/" rel="nofollow noreferrer">JCA-Sockets project</a> designed for that, but it looks not finished (and pretty complicated, so I can't fix it in case of any problem). </p>		<p>As far as I know, I can't just create a ServerSocket inside a servlet container.</p>		<p>Are there any standard ways to do this? Maybe I can extend a GenericServlet by some odd method?</p>		<p>Of course, I can create a standalone Java server to handle these connections and send data to Tomcat using JMS, but it's a bit overengineering for a small hobby project.</p>	"
44371056,78638871,44371056,3,0,Wed Aug 23 13:13:00 EDT 2017,3258754,"Well, I created a ServletContextListener that starts/stops ServerSocket listening. I know it's a hack, so I'm still in a search."
