thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
52293171,52293171,null,1,0,Wed Sep 12 10:37:00 EDT 2018,9697394,"<p>I have an android application in which I need multiple volley request queue's to be maintained for different iot devices. My app needs to communicate with each iot device on separate request queue for faster response.	But because I have new request queue being created for each new iot device object, my app is going out of memory.</p>		<pre><code> pthread_create failed: couldn't allocate 1069056-bytes mapped space: Out of memory	</code></pre>		<p>I want to clear the memory occupied by previous request queue..	Is it possible by any means??</p>		<p>I also tried to clear the memory occupied by calling </p>		<pre><code>requestqueue.stop()	</code></pre>		<p>but it did not help, I would still get the same error and app would crash.</p>	"
52293171,91596809,52293171,3,0,Fri Sep 14 04:23:00 EDT 2018,9697394,"Yes, because it occurs only when i'm using multiple queue's whereas when i'm using the singleton pattern I don't encounter this crash. It occurs on the line where I initialize my request queue."
52293171,91587655,52293171,3,0,Thu Sep 13 18:57:00 EDT 2018,1197251,"You traced the issue? So what is it that is consuming so much memory? Note that there is a memory leak bug in Volley, maybe that's your issue? https://github.com/google/volley/issues/15"
52293171,91561202,52293171,3,0,Thu Sep 13 05:14:00 EDT 2018,1197251,"You're not going out of memory because you have 3 request queues. You're going out of memory because you're trying to allocate too much memory. Use the memory profiler in Android to track your allocations and fix your logic that is allocating too much: https://developer.android.com/studio/profile/memory-profiler"
52293171,91561881,52293171,3,0,Thu Sep 13 05:50:00 EDT 2018,9697394,"Yes you're correct my app is trying to allocate too much memory, I traced the issue and got back to volley. This is being caused by volley trying to create new request queue for new connections without properly disposing the previous request queue. Can you suggest any way to dispose previously created request queue's? so that I can free the memory?"
52293171,91664796,52293171,3,0,Mon Sep 17 02:57:00 EDT 2018,1197251,"Really, initializing a request queue shouldn't consume all of your memory. If you're running into this issue, it's because you've consumed too much memory elsewhere. Again, use the memory profile tool I referenced before to analyze your memory usage and determine what exactly is using up all of your memory. Then fix your bug so you don't allocate that much or properly dispose of the object in question."
52293171,52293241,52293171,2,0,Wed Sep 12 10:41:00 EDT 2018,10314536,"<p>just use all the requests inside your AsyncTask ,, maybe it will help you</p>	"
52293171,91579211,52293241,3,0,Thu Sep 13 14:30:00 EDT 2018,10314536,"After creating the queue just use"
52293171,91596832,52293241,3,0,Fri Sep 14 04:25:00 EDT 2018,9697394,"can you update your answer with some code to explain? That would be very kind of you."
52293171,91539131,52293241,3,0,Wed Sep 12 12:56:00 EDT 2018,9697394,"Asyntask is too slow and adds up delay between requests as asynctask is executed sequentially. Also we can only run a limited number of asyntask threads in parallel. If you have any other suggestion to implement it, please explain with the help of some code."
52293171,52293593,52293171,2,0,Wed Sep 12 11:02:00 EDT 2018,3356835,"<p>One thing you can try is clear the cache object of previously created volley request queue using below code</p>		<pre><code>AppController.getInstance().getRequestQueue().getCache().clear();	</code></pre>	"
52293171,91539246,52293593,3,0,Wed Sep 12 12:58:00 EDT 2018,9697394,"Wil try it, but are you sure it'll clear the memory retained by the RequestQueue object of volley and I will not encounter out of memory error while creating a new RequestQueue object?"
52293171,91540579,52293593,3,0,Wed Sep 12 13:29:00 EDT 2018,9697394,"Tried your code still getting the same error		pthread_create failed: couldn't allocate 1069056-bytes mapped space: Out of memory"
52293171,52293720,52293171,2,0,Wed Sep 12 11:08:00 EDT 2018,527617,"<p>The most preferred use case is as follows:</p>		<blockquote>	  <p>The more common use case is to create the RequestQueue as a singleton	  to keep it running for the lifetime of your app, as described in the	  next section</p>	</blockquote>		<p>You can check android developer site for more information.</p>		<p><a href="https://developer.android.com/training/volley/requestqueue" rel="nofollow noreferrer">Set up RequestQueue</a></p>	"
52293171,91540734,52293720,3,0,Wed Sep 12 13:32:00 EDT 2018,9697394,"Yes I agree, it's advisable to go for a singleton class. I tried this approach in the start but due to slow and delayed requests I had to switch to this kind of multiple request queue methodology. By having separate request queue's I was able to speed up my commands to multiple ip addresses and send upto 20 commands per second to single ip. Sadly this is not possible in singleton. Can you suggest some other way for faster http request to iot devices."
52293171,52325145,52293171,2,0,Fri Sep 14 04:50:00 EDT 2018,10314536,"<pre><code>  RequestQueue que= new RequestQueue(new NoCache(),new BasicNetwork(new HurlStack()));	</code></pre>		<p>Just use this, hope this will help u...:)</p>	"
