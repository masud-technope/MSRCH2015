thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
35927946,35927946,null,1,1,Thu Mar 10 21:46:00 EST 2016,3246092,"<p>I and my team are working on a beacon that we need to talk to an app on the user's iPhone. Since we need the app to detect the beacon and execute code to talk to our API even when killed, we cannot use CoreBluetooth and need to operate as a beacon.</p>		<p>We're attempting to make a custom beacon on a BCM20737S BLE module. Is it possible to have this custom beacon talk to an app on an iPhone as a beacon? (CoreLocation framework)</p>		<p>Thanks!</p>	"
35927946,35928197,35927946,2,1,Thu Mar 10 22:01:00 EST 2016,1543530,"<p>As long as your packet is broadcasting a packet with the iBeacon protocol, then corelocation can detect it and your app will wake based on detection of this signal. An iBeacon protocol packet is a 25 byte payload set as the manufacturer data field in the BLE advertisement.</p>		<ol>	<li>The company ID is 2 bytes (0x004C) </li>	<li>The type is 1 byte (0x02)</li>	<li>Data Length is 1 byte (0x015)</li>	<li>Proximity UUID is a 16 byte Hex String</li>	<li>Major is 2 bytes uint16_t</li>	<li>Minor is 2 bytes uint16_t</li>	<li>Measured Power is 1 byte int8_t</li>	</ol>		<p>This stack thread might be of some use to you.</p>		<p><a href="https://stackoverflow.com/questions/18906988/what-is-the-ibeacon-bluetooth-profile">What is the iBeacon Bluetooth Profile</a></p>		<p>But essentially corelocation is only configured for ibeacons, if you want to transmit a different protocol packet youre going to need to use CoreBluetooth on iOS, then once you receive the packet, translate it somehow for use with your app.</p>	"
35927946,35928909,35927946,2,1,Thu Mar 10 22:47:00 EST 2016,1461050,"<p><strong>The CoreLocation framework will only detect iBeacons</strong>, which means beacons that meet the iBeacon byte format.  <strong>You can certainly build your own</strong>, and while it does not have to be an official Apple certified iBeacon, but it does have to match the byte pattern.  This pattern is widely available on the internet, even if you do not sign up for Apple's certification program that earns you the right to see the spec.</p>		<p><strong>Be careful, however, that you make no changes to rhe byte pattern</strong>. Some vendors have built beacon transmissions that tack extra bytes on to the end to send the battery level.  While these transmissions are detected, they are detected much more slowly because the header has a different length field, which does not match the hardware filter used for rapid detection in the background.</p>		<p><strong>If you want to customize your beacon format, you must use CoreBluetooth for detections</strong>.  I have written some open source <a href="https://github.com/AltBeacon/ios-beacon-tools" rel="nofollow">iOS beacon tools</a> that help do this, using the open source AltBeacon and Eddystone-UID formats as examples.  While detections in the background are slower as you say, you can make your beacon transmit both an iBeacon signal (to wake up your app quickly) and a custom beacon signal (to send whatever custom fields you want) to be detected as soon as it is awoken.  <strong>This way you get fast detection even if you define your own custom beacon format.</strong></p>	"
