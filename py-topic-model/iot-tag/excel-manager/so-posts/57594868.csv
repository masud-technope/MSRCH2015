thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
57594868,57594868,null,1,4,Wed Aug 21 15:24:00 EDT 2019,11957666,"<p>I would like to use the new <a href="https://www.chromestatus.com/feature/6577673212002304#" rel="nofollow noreferrer">Serial API</a> on Chrome Beta (version 77+).  However, it's unclear to me how to reference it.   </p>		<p>I have built a Chrome App that can do serial communication, but apparently Google is <a href="https://blog.chromium.org/2016/08/from-chrome-apps-to-web.html" rel="nofollow noreferrer">discontinuing Chrome Apps</a>.  The <a href="https://www.chromestatus.com/features#milestone=77" rel="nofollow noreferrer">Platform Status</a> for Chrome suggests that the Serial API is available for Beta and Dev/Canary, but <code>chrome.serial</code> is undefined when I have typed it into the console.</p>		<p>Here is some functioning code from my Chrome App - it would be great to be able to re-use it for the web app:</p>		<pre><code>let serialSettings = {	    bitrate: 115200,	    dataBits: 'eight',	    parityBit: 'no',	    stopBits: 'one',	    ctsFlowControl: false	};		function start() {	  portSelect = document.getElementById('portSelect');	  document.getElementById('disconnectButton').addEventListener("click", disconnectButtonHandler);	  chrome.serial.getDevices(function(devices) {	    buildPortSelect(devices) 	    openSelectedPort();	  });	};		//Leaving out buildPortSelect for brevity		function openSelectedPort() {	  let portSelect = document.getElementById('portSelect');	  let selectedPort = portSelect.options[portSelect.selectedIndex].value;	  let connectionInfoDisplay = document.getElementById('connectionInfoDisplay');	  for (let i = 0; i &lt; state.eligiblePorts.length; i++) {	    if (selectedPort == state.eligiblePorts[i].path) {	      connectionInfoDisplay.innerText = "Connected to: " + selectedPort;	      chrome.serial.connect(selectedPort, serialSettings, onConnect);	      break;	    }	  }	}		let onConnect = function(connectionInfo) {	   // The serial port has been opened. Save its id to use later.	  connectionId = connectionInfo.connectionId;	}		start();	</code></pre>		<p>I would like to be able to use <code>chrome.serial.getDevices()</code> and <code>chrome.serial.connect()</code> as before, but these don't work.  Is there an alternative syntax?</p>	"
57594868,101652328,57594868,3,0,Wed Aug 21 18:49:00 EDT 2019,6129793,"do you need any more help with this question? Please let me know or mark my answer as accepted. Thank you."
57594868,57595247,57594868,2,1,Wed Aug 21 15:46:00 EDT 2019,6129793,"<p>I found a few issues with your code:</p>		<ul>	<li>To access the serial property, instead of <code>chrome.serial</code>, use <code>navigator.serial</code></li>	<li>The snippet below compiles, however, due to what I assume to be security restriction of 'StackSnippet' service, we are not able to simulate <code>navigator.serial</code> usage completely.</li>	</ul>		<p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">	<div class="snippet-code">	<pre class="snippet-code-js lang-js prettyprint-override"><code>let serialSettings = {	  bitrate: 115200,	  dataBits: "eight",	  parityBit: "no",	  stopBits: "one",	  ctsFlowControl: false	};		function start() {	  var portSelect = document.getElementById("portSelect");	  portSelect.addEventListener("click", async e =&gt; {	    e.preventDefault();	    console.log("Selecting port");	    // Request a port/device from user	    const port = await navigator.serial.requestPort();		    // Open and begin reading.	    await port.open({	      baudrate: 115200	    });		    const reader = port.in.getReader();	    while (true) {	      const { done, data } = await reader.read();	      if (done) break;	      console.log(data);	    }	  });		  document.getElementById("disconnectButton").addEventListener("click", e =&gt; {	    e.preventDefault();	    console.log("Clicked disconnect");	  });		  navigator.serial.getPorts(function(devices) {	    buildPortSelect(devices);	    openSelectedPort();	  });	}		//Leaving out buildPortSelect for brevity		function openSelectedPort() {	  let portSelect = document.getElementById("portSelect");	  let selectedPort = portSelect.options[portSelect.selectedIndex].value;	  let connectionInfoDisplay = document.getElementById("connectionInfoDisplay");	  for (let i = 0; i &lt; state.eligiblePorts.length; i++) {	    if (selectedPort == state.eligiblePorts[i].path) {	      connectionInfoDisplay.innerText = "Connected to: " + selectedPort;	      navigator.serial.connect(selectedPort, serialSettings, onConnect);	      break;	    }	  }	}		const onConnect = function(connectionInfo) {	  // The serial port has been opened. Save its id to use later.	  connectionId = connectionInfo.connectionId;	};		start();</code></pre>	<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;html&gt;		&lt;body&gt;	  &lt;button id="portSelect" type="button"&gt;Select a port&lt;/button&gt;	  &lt;div id="connectionInfoDisplay"&gt;Connection Information&lt;/div&gt;	  &lt;button id="disconnectButton" type="button"&gt;Disconnect&lt;/button&gt;	&lt;/body&gt;		&lt;/html&gt;</code></pre>	</div>	</div>	</p>	"
57594868,101650034,57595247,3,0,Wed Aug 21 17:16:00 EDT 2019,759866,"I just downloaded the Chrome 77 beta (`77.0.3865.35`), and I get `undefined` for `navigator.serial`. The [Platform Status](https://www.chromestatus.com/feature/6577673212002304) says that it's available "behind a flag", but I don't see this flag in `chrome://flags`. Any hint?"
57594868,101650423,57595247,3,0,Wed Aug 21 17:32:00 EDT 2019,759866,"Found it. The feature to enable is chrome://flags/#enable-experimental-web-platform-features"
57594868,57615726,57594868,2,1,Thu Aug 22 19:08:00 EDT 2019,11957666,"<p>Correct answer from <a href="https://stackoverflow.com/users/759866/benjamin">Benjamin</a>: 	Found it. The feature to enable is chrome://flags/#enable-experimental-web-platform-features</p>	"
