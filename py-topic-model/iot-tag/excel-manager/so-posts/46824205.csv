thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
46824205,46824205,null,1,2,Thu Oct 19 06:55:00 EDT 2017,1941021,"<p>I am trying a trivial networking application where I have multiple nodes communicating using the publish subscribe model in <code>paho-mqtt (mosquitto)</code> in python.</p>		<p>The use case I want to model is a node has a certain job it needs to perform and it should acknowledge the receipt of a request to perform the job, and if the requesting node does not receive the acknowledgement in a certain time, it resubmits the request.</p>		<p>I start performing the job in the method designated for <code>on_message</code> event of <code>mqtt_client</code></p>		<p>I have a following sort of code in my <code>on_message</code> method</p>		<pre><code># mqtt_client is the client object	# Job represents the job I need to start	# mqtt_topic is the topic the requester listens	def on_message(client, userdata, msg):	  request = msg.payload	  if "PERFORM" in request:	    mqtt_client.publish(mqtt_topic, "ACK", 2, False)	    job = Job()	    job.dispatch()	</code></pre>		<p>The job definitely requires an arbitrarily long time to complete.	The problem I am facing is that the "ACK" message is not sent immediately by the <code>mqtt_client</code> before starting the job, and it waits to be send until the job has finished. I tried publishing the "ACK" and dispatching the job on a different threads but ended up with same results.</p>		<p>Now because the requester thinks the request has timed out every time, I enter a loop of request and job dispatches. 	I wanted to know if there is any way that I can have the "ACK" publish complete before I start with the job.</p>	"
46824205,80597466,46824205,3,1,Thu Oct 19 07:46:00 EDT 2017,504554,"This is a dupe of the linked question, `job.dispatch()` needs to run on a separate thread and not block the mqtt network loop."
46824205,80597613,46824205,3,0,Thu Oct 19 07:50:00 EDT 2017,1941021,"I tried to search for similar questions but couldn't find one. Thanks for pointing out."
