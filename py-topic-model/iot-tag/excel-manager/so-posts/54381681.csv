thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54381681,54381681,null,1,0,Sat Jan 26 18:56:00 EST 2019,5265208,"<p>i want to develop an IOTA application, but not a messaging application or coin based system. I want an simple example of how to store data in IOTA. For example i want to build an SCM or even an simple login/registration app. Can anyone guide me? Any sample application? i try to run <a href="https://github.com/domschiener/leaderboard-example" rel="nofollow noreferrer">https://github.com/domschiener/leaderboard-example</a> But getting same error like <a href="https://github.com/domschiener/leaderboard-example/issues/6" rel="nofollow noreferrer">https://github.com/domschiener/leaderboard-example/issues/6</a>  How to run this. </p>	"
54381681,54610863,54381681,2,1,Sat Feb 09 21:20:00 EST 2019,1419276,"<p>Storing text data on the tangle is not that difficult. The following are snippets from my tangle-based app. I used IOTA's API Java wrapper library <a href="https://github.com/iotaledger/iota-java" rel="nofollow noreferrer">Jota</a>.</p>		<p>1) Connect to IOTA node. You can find a list of nodes here <a href="https://nodes.iota.works" rel="nofollow noreferrer">https://nodes.iota.works</a>. Also you can set up your own full node and use it instead of an external one.</p>		<pre><code>final String protocol = "https";	final String url = "tuna.iotasalad.org"; 	final String port = "14265";	IotaAPI iotaServer = new IotaAPI.Builder().protocol(protocol).host(host).port(port).build();	</code></pre>		<p>2) Covert your text into trytes</p>		<pre><code>String trytes = TrytesConverter.toTrytes("my text");	</code></pre>		<p>3) Prepare and send transaction to tangle</p>		<pre><code>private static final String SEED = "IHDEENZYITYVYSPKAURUZAQKGVJERUZDJMYTANNZZGPZ9GKWTEOJJ9AAMXOGZNQLSNMFDSQOTZAEETA99";//just a random one	private static final int MIN_WEIGHT_MAGNITUDE = 14;	private static final int DEPTH = 9;	private static final int TAG = "mytag"; //optional		String tangleHash = prepareTransfer(createAddress(), trytes);		public String createAddress() throws ArgumentException {	     GetNewAddressResponse res = iotaServer.getNewAddress(SEED, 2, 0, false, 1, false);	     return res.getAddresses().get(0);	}		public String prepareTransfer(String address_seclevel_2, String trytes) throws ArgumentException {	    List&lt;Transfer&gt; transfers = new ArrayList&lt;Transfer&gt;();	    transfers.add(new Transfer(address_seclevel_2, 0, trytes, TAG));	    SendTransferResponse str = iotaServer.sendTransfer(SEED, 2, DEPTH, MIN_WEIGHT_MAGNITUDE, transfers, null,	                    null, false, false);	    if(str.getSuccessfully()!=null){	        //Transfer successfully! 		        for(Transaction tx: str.getTransactions()) {	            return tx.getHash();	        }		    }	    return "Handle error here. Something went wrong!";		}	</code></pre>	"
