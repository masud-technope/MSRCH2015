thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53987650,53987650,null,1,0,Mon Dec 31 12:40:00 EST 2018,10851894,"<p>I am trying to receive data from firebase to my ESP8266 so that I can send a mail using received data on button press. But the ESP stops receiving data after a couple of minutes. Can anyone tell the reason behind it?</p>		<p>Here's the code.</p>		<pre><code>#include &lt;ESP8266WiFi.h&gt;	#include "Gsender.h"	#include &lt;FirebaseArduino.h&gt;	#define FIREBASE_HOST "iotapp11.firebaseio.com"   	int button = 0;	const char* ssid = "Redmi 3s";	const char* password = "alohomora";		void setup()	{	    pinMode(button,INPUT);	    Serial.begin(115200);	  Serial.printf("Connecting to %s ", ssid);	  WiFi.begin(ssid, password);	  while (WiFi.status() != WL_CONNECTED)	  {	    delay(500);	    Serial.print(".");}	  Serial.println(" connected");	  Serial.println(WiFi.localIP());	  Firebase.begin(FIREBASE_HOST);                  	}		void loop(){	  Firebase.get(FIREBASE_HOST);    //Tried putting it in void setup and even removed it but nothing worked.		int but_val = digitalRead(button);	Gsender *gsender = Gsender::Instance();   		String emailid =Firebase.getString("Email");	String subject =Firebase.getString("Subject");	String content =Firebase.getString("Content");	Serial.println(emailid);	Serial.println(subject);	Serial.println(content);		if ( but_val == LOW){	      Serial.println("Button pressed");	      delay(1000);	      gsender-&gt;Subject(subject)-&gt;Send(emailid, content) ;	      Serial.println("Message sent.");	      delay(1000);	} else {	      Serial.println("Button Not pressed");	      delay(1000);   	  } 	  }	</code></pre>	"
53987650,94817948,53987650,3,0,Mon Dec 31 18:00:00 EST 2018,429063,"While not the answer you are looking for, consider if you are perhaps going about this the wrong way around - you probably want logic in the cloud to generate email based on information uplinked from the embedded gadget.  Trying to originate email in the gadget is likely unsustainable, as mail service/server interfaces will probably continue to get more and more locked down for anti-spam and security reasons, and even if your gadget has an update mechanism, it's not a given that what you'll be required to do in the future would readily fit on it."
53987650,94812984,53987650,3,0,Mon Dec 31 13:11:00 EST 2018,7380779,"Try adding a Serial.println(ESP.getFreeHeap()); to check you are not filling the ram"
53987650,94831505,53987650,3,0,Tue Jan 01 16:39:00 EST 2019,10851894,"@Frenchy I tried what you suggested. The values printed on the serial monitor were almost same before and receiving the data from cloud."
53987650,94831533,53987650,3,0,Tue Jan 01 16:41:00 EST 2019,10851894,"@ChrisStratton Actually the logic is in the microcontroller. I have separate header class for sending email. I'm just trying to fetch email address from the cloud to microcontroller. And it's working fine for couple of minutes and after that it stops."
53987650,94831598,53987650,3,0,Tue Jan 01 16:45:00 EST 2019,429063,"The points was trying to do that in the MCU is unsustainable when Gmail security rules and algorithms change.  When, not if."
53987650,94831663,53987650,3,0,Tue Jan 01 16:49:00 EST 2019,10851894,"@ChrisStratton okay understood. Any suggestions on what should I do now?"
53987650,94833971,53987650,3,0,Tue Jan 01 19:51:00 EST 2019,131929,""Any suggestions on what should I do now?" - use a service like IFTTT (cloud) or NodeRed (self-hosted) to tie sensor events to actions. Treat the MCU as a simple sensor node: detect signal (e.g. button pressed) then send an event message like "signal detected" to a broker-like hub. Have your IFTTT flow react to that event by sending out emails. Sounds overly complicated I know but separation of concerns is key here. It only hurts the first time ;-)"
53987650,94836132,53987650,3,0,Tue Jan 01 22:57:00 EST 2019,10851894,"@MarcelStör Will I be able to cahnge the email address and the contents of the email with the help of an android app and without the need of uploading the code into the NodeMCU again and again?"
53987650,94836537,53987650,3,0,Tue Jan 01 23:38:00 EST 2019,131929,"Yes, that's a further advantage of keeping the MCU "dumb". It'll only have two responsibilities: detect an event, forward the fact that such an event occurred to a broker."
53987650,94839229,53987650,3,0,Wed Jan 02 04:26:00 EST 2019,10851894,"@MarcelStör okay I'll try."
