thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56179194,56179194,null,1,2,Fri May 17 03:29:00 EDT 2019,1850887,"<p>I am new with Azure, MQTT, and IoT. I have been given a task to create a POC on how to send MQTT message to Azure Event Hub.</p>		<p>And from the Event Hub processing, save the message to cloud sql server.</p>		<p>Is this possible? Since i read from <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-compare-event-hubs" rel="nofollow noreferrer">here</a>, that Azure Event Hub does not support MQTT. Or is there a workaround for this? Or is there a better way to do this? </p>		<p>Currently i am trying to research Azure Event Hub and Azure IoT hub. </p>		<p>Please help me. Thank you.</p>	"
56179194,56181456,56179194,2,3,Fri May 17 07:18:00 EDT 2019,1537195,"<p>Azure Event Hub does not support MQTT, only Azure IoT Hub does. See here for details, also how to send MQTT messages with or without the Microsoft SDKS: <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-mqtt-support" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-mqtt-support</a> </p>		<p>Once you send messages into IoT Hub, you can consume them on the <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messages-d2c#routing-endpoints" rel="nofollow noreferrer">Event Hub-compatible endpoint</a> of the IoT Hub. Or, if you need the data in a "real" Event Hub, you can use routing to forward the messages from the IoT Hub into an Event Hub.</p>	"
56179194,56181491,56179194,2,0,Fri May 17 07:20:00 EDT 2019,7534341,"<p>You can send your MQTT messages to an IotHub. The IotHub has a default endpoint compatible to EventHubs.  Next you could create an AzureFunction with an EventHubTrigger to process the messages.  Within that function you can extract the data from your messages and save it to an SQL Database.</p>		<p>Alternatively you can use StreamAnalytics to save the messages received by IotHub to your database.  StreamAnalytics is more costly though than using an AzureFunction.</p>	"
56179194,56182530,56179194,2,0,Fri May 17 08:28:00 EDT 2019,5793633,"<p>I am doing somewhat the same thing in my project and I found a way to do so.</p>		<p>As already the other answers have mentioned that you can send MQTT message to IoT Hub and then to EventHub, the process would be, use Azure IoT SDK for developing application for IoT device and send your messages using MQTT protocol to IoT Hub. You can use Device Provisioning Service here if you want to connect your IoT device automatically to IoT Hub, in this case you will have to give the DPS connection information in the application code so that device will communicate to DPS and get the IoT hub connection information. You can look for the documentation for that <a href="https://docs.microsoft.com/en-us/azure/iot-dps/about-iot-dps" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/azure/iot-dps/about-iot-dps</a></p>		<p>If you want, you can create Kafka enabled Event Hub instance and then create topic/event hub in it. Now you can route all your IoT Hub messages to this topic. The advantage is now you can build an application such as dashboard that shows IoT device's generated data, and the data source for that will be this Kafka enabled Event Hub service.	You can see one example in the documentation <a href="https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-quickstart-kafka-enabled-event-hubs" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-quickstart-kafka-enabled-event-hubs</a></p>	"
56179194,56215063,56179194,2,-1,Mon May 20 05:58:00 EDT 2019,10898304,"<p>Azure Function EventHub Trigger is a quick solution to your question.	Originally IoT Hub and Event Hub are more client concentric and machine to machine concentric respectively. Once you want to connect thousands of device in scale you have to use the IoTHub and provide the event processing loads to the back-end's Event-Hub layer.	<a href="https://i.stack.imgur.com/NNGTt.png" rel="nofollow noreferrer">Here are the features of IoTHub and EventHub</a></p>		<p>So the simplest way to gain mqtt messages from device to EventHub is to leverage IoTHub and employ an Azure Function comprises of Event-Hub Trigger to get the EventData. Finally Injest that EventData to Azure SQL Server.</p>		<p>You can access the IoTHub MQTT directly using sdk or azure iothub API,	otherwise using an MQTT Broker as a Bridge to IoTHub.</p>		<p>As first step try to use curl command to directly access Azure IoTHub API.</p>		<h1>Publish Example</h1>		<pre><code>mosquitto_pub -d -q 1 --capath /etc/ssl/certs/ -V mqttv311 -p 8883 \	  -h iothub007.azure-devices.net \	  -i device0001 \	  -u "iothub007.azure-devices.net/device0001/api-version=2016-11-14" \	  -P "SharedAccessSignature sr=xxxx&amp;skn=xxxx&amp;sig=xxxx&amp;se=xxxx" \	  -t "devices/device0001/messages/events/"	  -m '{"message":"howdy"}'	</code></pre>		<h1>Subscribe Example</h1>		<pre><code>mosquitto_sub -d -q 1 --capath /etc/ssl/certs/ -V mqttv311 -p 8883 \	  -h iothub0007.azure-devices.net \	  -i device0001 \	  -u "iothub0007.azure-devices.net/device0001/api-version=2016-11-14" \	  -P "SharedAccessSignature sr=xxxx&amp;skn=xxxx&amp;sig=xxxx&amp;se=xxxx" \	  -t "devices/device0001/messages/devicebound/#"	</code></pre>		<p>In Second Phase</p>		<p>You can try to use Azure IoT SDK to do the same as above.</p>		<p>If the second step seems hard then try to use MQTT broker as a bridge to the Azure IoT Hub(*).	I would recommend to use VerneMQ or Mosquitto.</p>		<p>Currently MS Azure IoT SDK support all MQTT, AMQP, HTTP from SDK.</p>		<p>Reference Codes:	<a href="https://github.com/claymodel/AzureIoTSolution" rel="nofollow noreferrer">github</a></p>	"
56179194,99314885,56215063,3,0,Wed May 29 07:40:00 EDT 2019,1537195,"That statement is wrong: "Currently MS Azure IoT SDK do not support MQTT directly(AMQP is supported from SDK) , that is why its be quick to use an MQTT broker MQTT bridge." Using the SDKs you can chose between MQTT, AMQP or HTTPS"
56179194,99325744,56215063,3,0,Wed May 29 13:00:00 EDT 2019,10898304,"Its true for official C# sdk for Azure IoT. Amqp still not officially supported."
56179194,99326114,56215063,3,0,Wed May 29 13:09:00 EDT 2019,1537195,"What's your source for this? And now you said AMQP is not supported - before you said MQTT is not?!"
56179194,99340708,56215063,3,0,Wed May 29 21:57:00 EDT 2019,10898304,"sorry, my bad, c# sdk support all MQTT, AMQP, HTTP."
