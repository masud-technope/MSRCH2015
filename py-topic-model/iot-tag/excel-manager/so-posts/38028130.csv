thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38028130,38028130,null,1,1,Sat Jun 25 11:43:00 EDT 2016,6489903,"<p>I receive the Data:</p>		<pre><code>public void accept(PartitionReceiver receiver)	{	    System.out.println("** Created receiver on partition " + partitionId);	    try {	        while (true) {	            Iterable&lt;EventData&gt; receivedEvents = receiver.receive(10).get();	            int batchSize = 0;	            if (receivedEvents != null)	            {	                for(EventData receivedEvent: receivedEvents)	                {                                    	                    System.out.println(String.format("| Time: %s", receivedEvent.getSystemProperties().getEnqueuedTime()));	                    System.out.println(String.format("| Device ID: %s", receivedEvent.getProperties().get("iothub-connection-device-id")));	                    System.out.println(String.format("| Message Payload: %s", new String(receivedEvent.getBody(), Charset.defaultCharset())));	                    batchSize++;	                }	            }	        }	    } catch (Exception e)	    {	        System.out.println("Failed to receive messages: " + e.getMessage());	    }	}	</code></pre>		<p>Here i become the product name and price:</p>		<pre><code>System.out.println(String.format("| Message Payload: %s", new String(receivedEvent.getBody(), Charset.defaultCharset())));	</code></pre>		<p>How can i take the Payload, product into a String product; and the price into double price;?</p>	"
38028130,63502332,38028130,3,0,Sat Jun 25 17:22:00 EDT 2016,410825,"the payload will be a json string . So you can deserialize to the appropriate object and use .."
38028130,38047229,38028130,2,1,Mon Jun 27 06:31:00 EDT 2016,4989676,"<p>As @Aravind said, you can define a POJO class to package the data as object properties like <code>Payload</code>, and serialize &amp; deserialize the data as event body between a POJO and a json string using some json library, such as <a href="https://github.com/FasterXML/jackson" rel="nofollow"><code>jackson</code></a>, <a href="https://github.com/alibaba/fastjson" rel="nofollow"><code>fastjson</code></a>, or choose a favorite one from <a href="http://www.json.org/" rel="nofollow">http://www.json.org/</a>.</p>	"
38028130,38058408,38028130,2,0,Mon Jun 27 15:57:00 EDT 2016,6489903,"<p>Peter Pan and Aravind helped me to solve the Problem.</p>		<p>Here is the solution for the problem:</p>		<pre><code>public class Product {	public Product(){		}	    private String product;	    private Double price;		public Product(String json ){	    Gson gson=new Gson();	    try{	        Product product =gson.fromJson(json, Product.class);	        if (product!=null){	            System.out.println("Name: " +product.getProduct());	        }	    }catch (Exception e){	        System.out.println("failed: " +e.getMessage());	    }	}		    public String getProduct() {	        return product;	    }		    public Double getPrice() {	        return price;	    }	 }	</code></pre>		<p>Here i read the JSON String in into a Object from the Class Product, the Product class contains variables, product und price with getter. It works!</p>		<pre><code>    public Product(String json ){	    Gson gson=new Gson();	    try{	        Product product =gson.fromJson(json, Product.class);	        if (product!=null){	            System.out.println("Name: " +product.getProduct());	        }	    }catch (Exception e){	        System.out.println("failed: " +e.getMessage());	    }	}	</code></pre>	"
