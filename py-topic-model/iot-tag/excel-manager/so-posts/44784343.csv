thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44784343,44784343,null,1,-2,Tue Jun 27 15:33:00 EDT 2017,6871864,"<p>I am currently in an internship for this Internet of Things company that has written their server code in Javascript. I will try to run the code that regulates connection between their Gateway (the device that will send and receive information to the server).</p>		<p>The gateway uses Raspberry Pi units to do the communication. My question is, how do I do stress tests to see if the server will accept up to 10,000 Raspberry Pi's? I found tools like 	<a href="https://httpd.apache.org/docs/2.4/programs/ab.html" rel="nofollow noreferrer">https://httpd.apache.org/docs/2.4/programs/ab.html</a></p>		<p>But are there other ways to do it? Like using virtual machines to test whether 10000 RSPi's will be handled? </p>		<p>And second part of the question, how can I test the firmware of raspberry pi IoT without the hardware, like through a virtual machine. Is that possible??</p>		<p>Any pointer about to where to find this stuff would be greatl appreciated!!</p>	"
44784343,44784481,44784343,2,2,Tue Jun 27 15:39:00 EDT 2017,7426,"<p>I think you're approaching it wrong - it doesn't matter that the clients are Raspberry Pis or that there are 10k of them. You load test to find out how many QPS (queries per second) your server can handle within acceptable response times. This is what tools like ab, JMeter, vegeta, locust, etc. are made for. Then figure out how many QPS you expect to be generated - how often are the RPis going to be making calls? Multiply that by 10k and you have your expected load. There is no reason to actually simulate 10k RPis explicitly.</p>	"
44784343,76552676,44784481,3,0,Tue Jun 27 17:00:00 EDT 2017,6871864,"I might have misunderstood something then. Thanks for the advice! I will check out those tools and try them on the server."
44784343,76558562,44784481,3,0,Tue Jun 27 20:02:00 EDT 2017,6871864,"Thanks a lot Adrian! I confirmed with my boss and apparently we just have to test server stress load, so using the tools you mentioned helps, the VM was a separate thing, where we have the firmware code but we just want to know what are the limits of using the VM/emulator of Raspberry Pi to test the firmware code."
44784343,76558575,44784481,3,0,Tue Jun 27 20:02:00 EDT 2017,6871864,"BTW, what do you think is the reason why I got so many downvotes?"
44784343,76552811,44784481,3,0,Tue Jun 27 17:03:00 EDT 2017,6871864,"Would you happen to know if it is possible to test out the firmware code of the raspberry pi's without the hardware? Like for me to test them out via a virtual machine?"
44784343,76553374,44784481,3,0,Tue Jun 27 17:21:00 EDT 2017,7426,"Firmware is hardware-specific by definition. Typical VMs like VirtualBox provide emulated firmware, they don't provide a way to emulate raw hardware and run custom firmware on it. I don't know if there's an emulator for RasPi, see what a Google search turns up."
44784343,76553389,44784481,3,0,Tue Jun 27 17:21:00 EDT 2017,7426,"And you can always try the dedicated [Raspberry Pi Stack Exchange site](https://raspberrypi.stackexchange.com/)."
