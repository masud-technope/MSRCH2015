thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
52616357,52616357,null,1,0,Tue Oct 02 21:03:00 EDT 2018,6479342,"<p>Here is my challenge:</p>		<ul>	<li>Windows IoT on Raspi, C# UWP-App</li>	<li>On Boot or klick...		<ul>	<li>Enumerate connected USB devices</li>	<li>Select the USB Stick</li>	<li>Enumerate Fiels and folders on the stick</li>	<li>If a certain folder name is found, copy folder as-is to KnownFolders.Documents</li>	</ul></li>	</ul>		<p>It is astonishing that there are many half solutions on the web but none of them hardly works. </p>		<p>Some things I tried:</p>		<pre><code>var removableDeviceList = await KnownFolders.RemovableDevices.GetFoldersAsync();	            if (removableDeviceList.Count &gt; 0)	            {	                StorageFolder targetDevice = removableDeviceList.FirstOrDefault();	                ListBox.Items.Add(targetDevice.Name);	}	</code></pre>		<p>Works so far but stuck afterwards.</p>		<p>And yes, functions like Picture library, file definitions, removable devices are activated in the manifest.  I can't believe that this basic thing is really such a difficult task to solve?</p>	"
52616357,52618826,52616357,2,0,Wed Oct 03 02:19:00 EDT 2018,6601582,"<p>There is an example I test on Raspberry Pi 3 with Windows 10 IoT Core. It works for me. </p>		<p><strong>Source folder</strong>: test folder in USB drive root(E:\test). There are three files: hello.txt, welcome1.png, welcome3.jpg .</p>		<p><strong>Destination folder</strong>: KnownFolders.DocumentsLibrary root folder.</p>		<p>The following code complete copy files in test folder to KnownFolders.DocumentsLibrary root folder.</p>		<pre><code>   public async void USBDriveCopyFolder()	    {	        var targetFolderName = "test";		        var removableDevice = (await KnownFolders.RemovableDevices.GetFoldersAsync()).FirstOrDefault();	        if (null == removableDevice)	        {	            System.Diagnostics.Debug.WriteLine("removableDevice is null !");	            return;	        }	        System.Diagnostics.Debug.WriteLine(removableDevice.Name + ":\n");		        var sourceFolder = await removableDevice.GetFolderAsync(targetFolderName);	        if (null == sourceFolder)	        {	            System.Diagnostics.Debug.WriteLine(targetFolderName + " folder is not found !");	            return;	        }	        System.Diagnostics.Debug.WriteLine(sourceFolder.Name + ":\n");		        var destFodler = KnownFolders.DocumentsLibrary;	        if (null == destFodler)	        {	            System.Diagnostics.Debug.WriteLine("KnownFolders.DocumentsLibrary folder get failed !");	            return;	        }		        var files = await sourceFolder.GetFilesAsync();		        foreach (var file in files)	        {	            System.Diagnostics.Debug.WriteLine(file.Name + "\n");	            await file.CopyAsync(destFodler);	        }		    }	</code></pre>		<p>Device capabilities in package.appxmanifest:</p>		<pre><code>  &lt;Applications&gt;		    ...	    ...		    &lt;Application&gt;	      &lt;Extensions&gt;	        &lt;uap:Extension Category="windows.fileTypeAssociation"&gt;	          &lt;uap:FileTypeAssociation Name="txt"&gt;	            &lt;uap:SupportedFileTypes&gt;	              &lt;uap:FileType&gt;.txt&lt;/uap:FileType&gt;	            &lt;/uap:SupportedFileTypes&gt;	          &lt;/uap:FileTypeAssociation&gt;	        &lt;/uap:Extension&gt;	        &lt;uap:Extension Category="windows.fileTypeAssociation"&gt;	          &lt;uap:FileTypeAssociation Name="jpg"&gt;	            &lt;uap:SupportedFileTypes&gt;	              &lt;uap:FileType&gt;.jpg&lt;/uap:FileType&gt;	            &lt;/uap:SupportedFileTypes&gt;	          &lt;/uap:FileTypeAssociation&gt;	        &lt;/uap:Extension&gt;	        &lt;uap:Extension Category="windows.fileTypeAssociation"&gt;	          &lt;uap:FileTypeAssociation Name="png"&gt;	            &lt;uap:SupportedFileTypes&gt;	              &lt;uap:FileType&gt;.png&lt;/uap:FileType&gt;	            &lt;/uap:SupportedFileTypes&gt;	          &lt;/uap:FileTypeAssociation&gt;	        &lt;/uap:Extension&gt;	      &lt;/Extensions&gt;	    &lt;/Application&gt;	  &lt;/Applications&gt;	  &lt;Capabilities&gt;	    &lt;uap:Capability Name="picturesLibrary" /&gt;	    &lt;uap:Capability Name="removableStorage" /&gt;	    &lt;uap:Capability Name="documentsLibrary" /&gt;	  &lt;/Capabilities&gt;	</code></pre>	"
52616357,92213151,52618826,3,0,Thu Oct 04 06:32:00 EDT 2018,6479342,"Works like a charm."
52616357,92213166,52618826,3,0,Thu Oct 04 06:33:00 EDT 2018,6479342,"In that specific case don't forget to add <uap:Capability Name="documentsLibrary" /> to the capabilities as shown above (cannot be clicked directly in the UI version of the appxmanifest, use right click and "source code""
