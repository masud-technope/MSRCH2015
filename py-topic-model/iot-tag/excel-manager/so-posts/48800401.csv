thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
48800401,48800401,null,1,-1,Thu Feb 15 05:21:00 EST 2018,8182349,"<p>I need to send a POST method but it says invalid JSON content, do somebody knows what im doing wrong in the JSON format Â¿?, ill apreciate a lot.</p>		<pre><code>Uri resourceAddress;	        if (!Helpers.TryGetUri(pcHost + pcPort + "/api/code/scan", out resourceAddress))	        {	            rootPage.NotifyUser("Invalid URI.", NotifyType.ErrorMessage);	            return;	        }	        try	        {	            terminalRef = "1";	            //code = "Uc0E17G4nW";	            IHttpContent jsonContent = new HttpJsonContent(JsonValue.Parse("{\"code\":\"" + code +	                                                                            ",\"ref\" : \""+ terminalRef +	                                                                            "\"}"));						            HttpResponseMessage response = await httpClient.PostAsync(resourceAddress, jsonContent).AsTask(cts.Token);	            Debug.WriteLine(".");	            //await Helpers.DisplayTextResultAsync(response, cts.Token);	            rootPage.NotifyUser("Completed", NotifyType.StatusMessage);			        }	        catch (Exception ex)	        {	            rootPage.NotifyUser("Error: " + ex.Message, NotifyType.ErrorMessage);	            String errorMessage = ex.Message.ToString();	        }	</code></pre>	"
48800401,84603503,48800401,3,0,Thu Feb 15 05:23:00 EST 2018,8182349,"Im sending a String parameter to the function."
48800401,84603559,48800401,3,0,Thu Feb 15 05:27:00 EST 2018,584183,"So, the question really has nothing to do with sending a POST and everything to do with parsing text to JSON. You really ought to start by using `String.Format` or string interpolation rather than string concatenation. It makes constructing such a string easier and more readable and thus less error-prone. I don't know whether that is your issue but it's a good idea either way. Of course, you also need to actually look at - and thus show us - what the result of that string constriction is. Looking at the code that builds something is no substitute for looking at what it built."
48800401,84603846,48800401,3,0,Thu Feb 15 05:41:00 EST 2018,981141,"not sure where HttpJsonContent came from unless you wrote it.  https://docs.microsoft.com/en-us/uwp/api/Windows.Web.Http.IHttpContent"
48800401,48800988,48800401,2,0,Thu Feb 15 06:16:00 EST 2018,4865541,"<p>Noted that your string is not correctly formatted. Can you try the parsing below string,</p>		<pre><code>"{\"code\" : \"" + code + "\", \"ref\" : \"" + terminalRef + "\"}"	</code></pre>	"
48800401,48803044,48800401,2,0,Thu Feb 15 08:42:00 EST 2018,6782612,"<p>The first way was as the Jaliya Udagedara's suggestion, you would need to check your json string's <a href="https://www.w3schools.com/js/js_json_intro.asp" rel="nofollow noreferrer">format</a> to make sure that it's correct. </p>		<p>Another a simple way is using the <a href="https://www.nuget.org/packages/newtonsoft.json/" rel="nofollow noreferrer">Newtownsoft.Json</a> to convert a c# object.</p>		<p>For example:</p>		<pre><code>string jsonstring = JsonConvert.SerializeObject(new {code="code", Ref = "terminalRef" });	IHttpContent jsonContent = new HttpStringContent(jsonstring, Windows.Storage.Streams.UnicodeEncoding.Utf8, "application/json");	HttpResponseMessage response = await httpClient.PostAsync(resourceAddress, jsonContent).AsTask(cts.Token);	</code></pre>	"
48800401,49544799,48800401,2,0,Wed Mar 28 21:55:00 EDT 2018,8182349,"<p>After multiple failures i found how to make it works ( at least for me) hope it can help people working with Windows 10 iot in Universal Windows Platform (UWP) i know how difficult can be to fin proper documentation.</p>		<pre><code>              Uri resourceAddress;		            if (!Helpers.TryGetUri(Host + Port + "/XXX/YYY/directory", out resourceAddress))	            {	                return;	            }		            IHttpContent jsonContentCoordinates = new HttpJsonContent(JsonValue.Parse("{\"zzz\": \"" + something	                                                                              + "\", \"xxx\": \"" + somethingXXX	                                                                              + "\",\"yyy\": \"" + somethingYYY	                                                                              + "\" }"));	            HttpResponseMessage httpResponseCoordinates = new HttpResponseMessage();	            string httpResponseBodyCoordinates = "";	            try	            {	                httpResponseCoordinates = await httpClient.PostAsync(resourceAddress, jsonContentCoordinates).AsTask(cts.Token);	                httpResponseBodyCoordinates = await httpResponseCoordinates.Content.ReadAsStringAsync();	                httpResponseCoordinates.EnsureSuccessStatusCode();	                FlagInternetNotConnected = false;		            }	            catch (Exception)	            {	             //Catch it if it fails.		            } 	</code></pre>	"
