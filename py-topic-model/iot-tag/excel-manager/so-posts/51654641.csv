thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
51654641,51654641,null,1,0,Thu Aug 02 13:15:00 EDT 2018,9956279,"<p>Jobs and Messages are both just transactions of text between AWS IoT service and devices.</p>		<p>Why should I use jobs than messages or the other way around?</p>	"
51654641,51857337,51654641,2,1,Wed Aug 15 10:50:00 EDT 2018,4944773,"<p>They are transaction but they have their differences </p>		<blockquote>	  <p><strong><a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-message-broker.html" rel="nofollow noreferrer">Messages</a></strong> - The AWS IoT message broker is a publish/subscribe broker service that enables the sending and receiving of messages to	  and from AWS IoT. The act of sending the message is referred to as	  publishing. The act of registering to receive messages for a topic	  filter is referred to as subscribing.</p>	</blockquote>		<p>Example - When communicating with AWS IoT, a client sends a message addressed to a topic like Sensor/temp/room1. The message broker, in turn, sends the message to all clients that have registered to receive messages for that topic.</p>		<blockquote>	  <p><strong><a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-jobs.html" rel="nofollow noreferrer">Jobs</a></strong> - AWS IoT jobs can be used to define a set of remote operations that are sent to and executed on one or more devices	  connected to AWS IoT.</p>	</blockquote>		<p>Example -  you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p>		<p>To use Jobs or Messages is up to your requirements. If you want to update a set of devices Jobs seems to do the work, or its just one device message will do. </p>	"
