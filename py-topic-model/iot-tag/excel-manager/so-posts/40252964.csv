thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40252964,40252964,null,1,0,Wed Oct 26 02:59:00 EDT 2016,5715321,"<p>My project contains of measuring temperature at different "loads" put onto the raspberry pi's capability to see whether making the raspberry work "harder" or not will affect the temperature sensor input. I am using windows 10 on my raspberry pi 2 model B and am having trouble finding enough sources about this, hence asking here.</p>		<ul>	<li><p>Is it possible to somehow place a load upon the raspberry programmatically from Visual Studio as a universal application for the raspberry, in terms of perhaps forcing it to increase usage of the available RAM or perhaps limiting it? If so, what would be the best solution for this?</p></li>	<li><p>Is there any way to check, programmatically how much RAM it is using in total, by already implemented functions in a universal application project?</p></li>	<li><p>Is there any other way to "place loads" on the raspberry and being able to measure how much load you are forcing it to work?</p></li>	</ul>		<p>Any type of help is very appreciated, thank you in advanced for the effort placed to answer these questions!</p>	"
40252964,67791715,40252964,3,0,Wed Oct 26 14:58:00 EDT 2016,5715321,"And how would that be done exactly?"
40252964,67773641,40252964,3,0,Wed Oct 26 07:24:00 EDT 2016,6601582,"It is easy to do in C++."
40252964,40302617,40252964,2,1,Fri Oct 28 09:57:00 EDT 2016,6601582,"<blockquote>	  <p>Is there any way to check, programmatically how much RAM it is using	  in total, by already implemented functions in a universal application	  project?</p>	</blockquote>		<p>There is no direct API of getting total RAM in use but you can get available RAM will be used, in C#, do it like this:</p>		<pre><code>    [StructLayout(LayoutKind.Sequential)]	    private class MEMORYSTATUSEX	    {	        public uint dwLength;	        public uint dwMemoryLoad;	        public ulong ullTotalPhys;	        public ulong ullAvailPhys;	        public ulong ullTotalPageFile;	        public ulong ullAvailPageFile;	        public ulong ullTotalVirtual;	        public ulong ullAvailVirtual;	        public ulong ullAvailExtendedVirtual;	        public MEMORYSTATUSEX()	        {	            this.dwLength = (uint)Marshal.SizeOf(typeof(MEMORYSTATUSEX));	        }	    }		    [return: MarshalAs(UnmanagedType.Bool)]	    [DllImport("kernel32.dll", SetLastError = true)]	    static extern bool GlobalMemoryStatusEx([In, Out] MEMORYSTATUSEX lpBuffer); 		    // Alternate Version Using "ref," And Works With Alternate Code Below.	    // Also See Alternate Version Of [MEMORYSTATUSEX] Defined As A Structure. 	    [return: MarshalAs(UnmanagedType.Bool)]	    [DllImport("kernel32.dll", EntryPoint = "GlobalMemoryStatusEx", SetLastError = true)]	    static extern bool _GlobalMemoryStatusEx(ref MEMORYSTATUSEX lpBuffer);		    void GetProcessUsage()	    {	        MEMORYSTATUSEX data = new MEMORYSTATUSEX();		        GlobalMemoryStatusEx(data);		        System.Diagnostics.Debug.WriteLine(data.ullTotalPageFile + "\t\t" + data.ullAvailPageFile);	    }	</code></pre>		<blockquote>	  <p>Is there any other way to "place loads" on the raspberry and being	  able to measure how much load you are forcing it to work?</p>	</blockquote>		<p>You may try this:</p>		<pre><code>        List&lt;byte[]&gt; list = new List&lt;byte[]&gt;();		        while (true)	        {	            var buf = new byte[1024 * 1024 * 50];	            list.Add(buf);	            System.Diagnostics.Debug.WriteLine("Allocating memory");	            await Task.Delay(1000);	        }	</code></pre>		<p>Memory can be used for app is 390MB of Raspberry Pi 3 with 1GB RAM. For 512 MB models seems to be 185MB. You can use <a href="https://msdn.microsoft.com/nl-nl/library/windows/apps/windows.system.memorymanager.appmemoryusagelimit.aspx" rel="nofollow">Windows.System.MemoryManager.AppMemoryUsageLimit</a> to confirm your device.</p>	"
