thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
45777998,45777998,null,1,3,Sun Aug 20 02:47:00 EDT 2017,8489547,"<p>Background: I have a node.js server running on my localhost (call this Server A); and an external server running node.js at <a href="https://example.net:3000" rel="nofollow noreferrer">https://example.net:3000</a> (call this Server B). I do not control or have access to Server B (it is a dashboard site for an IoT device in my home), but I need to connect to is using socket.io and emit a specific message.</p>		<p>I can connect to it easily from a flat javascript file (client-side), but need it running server side (ultimate goal is to make it into something I can call with an HTTP request); and examples such as <a href="https://stackoverflow.com/questions/8837236/how-to-connect-two-node-js-servers-with-websockets">How to connect two node.js servers with websockets?</a> suggest I should be able to use socket.io-client from node.js with nearly the same code to achieve the same results. But when I run the code from node.js, I cannot connect to the socket.</p>		<p>Below is the code that works successfully in flat javascript file. I know it works because I see 'socket connect' in the console, and I can also test for the the socket emit at the end.</p>		<pre><code>var myemail = "email@gmail.com";	var device_id = '12345';	// Create SocketIO instance, connect	var socket = io.connect('https://example.net:3000');		socket.on('connect', function(){	    try {	        console.log('socket connect');	        socket.emit('configure', {email:myemail, deviceid:device_id});	    } catch(e) {	        console.log(e);	    }	});	socket.emit("/" + device_id, "45678");	</code></pre>		<p>...and below is the code I cannot get to work when running from my node.js instance. I'd expect a message 'socket connect' in the command line log and get nothing.</p>		<pre><code>var express=require('express');	var http=require('http');	var app=express();	var server = http.createServer(app);	//Variables		var myemail = "email@gmail.com";	var device_id = '12345'; 		var io = require('socket.io-client');	var socket = io.connect('https://example.net:3000');		//Connect listener	socket.on('connect', function(){	   try {	      console.log('socket connect');	      socket.emit('configure', {email:myemail, deviceid:device_id});	   } catch(e) {	     console.log(e);	   }	});	socket.emit("/" + device_id, "45678");	</code></pre>		<p>Any ideas?</p>		<p><strong><em>UPDATE</em></strong></p>		<p>Ran debug utility, results included as linked image below. Key thing I see is that engine.io tries to do an xhr poll, and gets a 503 response back from the server. (Obviously not a true 'temporary error' with the server as again, this all works from running client-side js in chrome).</p>		<p><a href="https://i.stack.imgur.com/5Xv7l.png" rel="nofollow noreferrer">debugging output image link</a></p>	"
45777998,78535572,45777998,3,0,Mon Aug 21 03:19:00 EDT 2017,8489547,"Thanks all. I verified that I'm using 2.0.3 of socket.io and socket.io-client; and cannot use http  - presumably that's there for the security of the server I'm trying to connect to. When I try to use http (even in the flatfile client-side javascript running in chrome), I see the following error in the console: polling-xhr.js:264 GET http://example.net:3000/socket.io/?EIO=3&transport=polling&t=Lu2o_eg net::ERR_EMPTY_RESPONSE"
45777998,78535975,45777998,3,0,Mon Aug 21 03:56:00 EDT 2017,8489547,"@jfriend00 I just updated post with debug infoif you wouldnt mind taking a look"
45777998,78536225,45777998,3,0,Mon Aug 21 04:18:00 EDT 2017,816620,"ALL websocket connections are initiated with an http request.  And, by default, all socket.io connections start with http polling and then attempt to upgrade to a webSocket (both of which need http to proceed).  So, I'm pretty confused when you say "cannot use http".  What does that mean?  That sounds like a problem to me."
45777998,78513765,45777998,3,0,Sun Aug 20 03:09:00 EDT 2017,816620,"Here's a guess.  What happens if you want until inside the `connect` event in order to do your `socket.emit("/" + device_id, "45678");`.  You are attempting that `.emit()` before the connect has finished.  Perhaps this is somehow not causing a problem in the browser, but is on node.js?  Timing could be different on the two platforms, perhaps."
45777998,78513772,45777998,3,0,Sun Aug 20 03:10:00 EDT 2017,816620,"Oh, and btw, socket.io-client works just fine in node.js to connect to other socket.io servers so that is not an issue."
45777998,78513815,45777998,3,0,Sun Aug 20 03:14:00 EDT 2017,816620,"FYI, socket.io has various debug modes that will give you very verbose logging on what's going on too.  That might elucidate what is happening."
45777998,78536243,45777998,3,0,Mon Aug 21 04:19:00 EDT 2017,816620,"The logs you added are telling us that the client is attempting to establish an http polling connection to the server (as the usual first step in establishing a socket.io connection) and that is failing."
45777998,78536250,45777998,3,0,Mon Aug 21 04:20:00 EDT 2017,816620,"What does your other comment about credentials have to do with this at all?"
45777998,78514363,45777998,3,0,Sun Aug 20 04:09:00 EDT 2017,8489547,"Thanks jfriend00 for the response. Tried adding the emit into the on.("connect") function, didn't work - anyway, it's the initial handshake emit already inside the on connect function that isnt working. ... Also tried using the IP of the server instead of the name. Regarding the debug modes, any thoughts on what i should be looking for? I can see it is not connected but not sure what to look for."
45777998,78514464,45777998,3,0,Sun Aug 20 04:20:00 EDT 2017,816620,"Are you sure you have the right version of socket.io-client on your server to match what you're trying to connect to? socket.io can be picky about matching client and server versions.  I don't know the debug info in socket.io to know what to look for.  If you want to post all the debug output somewhere, I'll look at it."
45777998,78524237,45777998,3,0,Sun Aug 20 14:55:00 EDT 2017,5447320,"both your clients work perfectly with my local server... can you try http instead of https? just thinking.."
45777998,45782423,45777998,2,1,Sun Aug 20 12:58:00 EDT 2017,2976093,"<p>I think the line causing the issue is : </p>		<pre><code>var socket = io.connect('https://example.net:3000');	</code></pre>		<p>I managed to make a working example using this code :    </p>		<pre><code>const myemail = "email@gmail.com";	const device_id = '12345'; 	var socket = require('socket.io-client')('https://example.net:3000');	socket.on('connect', function(){	 try{	   console.log('socket connect');	   socket.emit('configure', {email:myemail, deviceid:device_id});	 }catch(e){ console.log(e); }	});	</code></pre>	"
45777998,78535587,45782423,3,0,Mon Aug 21 03:21:00 EDT 2017,8489547,"That's not making any difference for me - and I see that a few people have managed to make this work in their own localhosts. My hunch is it has something to do with the login credentials (email and device id) passed to the socket on connect - for some reason those arent being accepted when I try to execute server side..."
45777998,78542596,45782423,3,0,Mon Aug 21 08:29:00 EDT 2017,2976093,"Why do you think that? You have to go in parts, does the client handshake with the server? (does your server inform of a client connection?) You say it works from localhost but not from other machine? > Maybe it has something to do with firewall?"
45777998,46005768,45777998,2,3,Fri Sep 01 18:03:00 EDT 2017,8489547,"<p>Solved this - issue was that the server I was connecting to required use of https, so I needed to add</p>		<pre><code>{secure: true,    rejectUnauthorized: false}	</code></pre>		<p>after the url to connect to.</p>		<p>Full working example:</p>		<pre><code>const myemail   = email@email.com;	const device_id   = 12345;	io = require('socket.io-client');	var socket = io.connect('https://server.net:3000',{secure: true,    rejectUnauthorized: false});		function doStuff(){			//Listener	socket.on('connect', function(){	   try {	      console.log('socket connect');	      socket.emit('configure', {email:myemail, deviceid:device_id});		   } catch(e) {	     console.log(e);	   }	});		socket.emit("/" + device_id, "003021");			}			doStuff();	</code></pre>	"
