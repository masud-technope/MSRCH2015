thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
57263817,57263817,null,1,0,Tue Jul 30 03:11:00 EDT 2019,11658483,"<p>I am following this tutorial</p>		<p><a href="https://codelabs.developers.google.com/codelabs/iotcore-heartrate/index.html?index=..%2F..index#0" rel="nofollow noreferrer">https://codelabs.developers.google.com/codelabs/iotcore-heartrate/index.html?index=..%2F..index#0</a></p>		<p>Now i am able to send heart rate sensor data to Google Cloud BigQuery, Cloud storage etc, as described in the tutorial clearly and I am able to visualise it as well</p>		<p>But my next question is, how do we get access to data in real-time. For example, say if the heart rate data from Raspberry Pi (3B+) goes up over 75, i want to trigger and turn on the LED of the ESP32 that is connected at the receiving end.</p>		<p>In a nutshell, I want to do some actuation (like LED blinking as I told earlier) on ESP32, based on the sensor data from Raspberry Pi that goes to Google Cloud. I am only successful in sending, storing, and visualising sensor data in Google Cloud. Your help in enabling me to complete the actuation step is so valuable as I am pretty much clueless, how it can be done</p>		<p>Thanking you</p>	"
57263817,57281098,57263817,2,3,Tue Jul 30 23:01:00 EDT 2019,3534690,"<p>There's a couple options here. The easiest to stand up, is Cloud Functions. The function can be triggered by Pub/Sub messages. It can also be authenticated with the IoT Core Admin SDK (via service accounts) to then send a configuration/command back down to the device you want to light up with the LED.</p>		<p>I wrote a blog post about setting up the Cloud to device communication piece:</p>		<p><a href="https://medium.com/google-cloud/cloud-iot-step-by-step-cloud-to-device-communication-655a92d548ca" rel="nofollow noreferrer">https://medium.com/google-cloud/cloud-iot-step-by-step-cloud-to-device-communication-655a92d548ca</a></p>		<p>It covers how to setup the function to do it, although the function code itself in the example is an HTTP function, which means it triggers by hitting a URL endpoint instead of Pub/Sub, but that part's easy enough.</p>		<p>The big piece you'll need to investigate is pulling the Pub/Sub message in the function that triggered it. There's good docs on that here:</p>		<p><a href="https://cloud.google.com/functions/docs/calling/pubsub" rel="nofollow noreferrer">https://cloud.google.com/functions/docs/calling/pubsub</a></p>		<p>If you have super high throughput, then Cloud Functions can get expensive, and at that point you'd want to switch over to using something like Dataflow (<a href="https://cloud.google.com/dataflow/docs/" rel="nofollow noreferrer">https://cloud.google.com/dataflow/docs/</a>). Then either having that job when it runs react to telemetry and hit an endpoint Function when it hits the target condition, or go through authenticating the job itself with the IoT Admin SDK. I haven't done that before, so I actually don't know how easy/hard that might be to do.</p>	"
57263817,101119575,57281098,3,1,Thu Aug 01 16:58:00 EDT 2019,3534690,"Right, this link: 	https://cloud.google.com/functions/docs/calling/pubsub    If you set the Cloud Function to trigger on Pub/Sub topic instead of HTTP triggering, and set the topic to the same one your device is sending telemetry to, you can parse the telemetry being sent for the temp threshold, and send the IoT Core Admin SDK command/configuration from the function (This code should be copy/paste able from the sample code I linked to in the blog)."
57263817,101164970,57281098,3,0,Sat Aug 03 12:03:00 EDT 2019,11658483,"Now I can send temp data to the cloud. Also, I wrote a python3.7 module in Cloud functions and successfully tested it in configuring the LEDs, and everything is fine. But the real challenge is, for some reason, I am not able to trigger the function, though data is being sent to the topic. So, now I suspect if data is flowing in the topic. Also, there is no direct reference to a particular topic in your medium article's code as well (only registry details we used), which is raising my suspicion more. Can you please correct me where I was missing that connection? @GabeWeiss"
57263817,101184307,57281098,3,0,Sun Aug 04 16:29:00 EDT 2019,11658483,"I have three topics in a registry and each topic individually has a subscription each. Also I tried gcloud pull command and it is working flawlessly. I followed the medium article also perfectly. But somehow my cloud function is not getting triggered. But all the components are individually working fine @GabeWeiss"
57263817,101194030,57281098,3,0,Mon Aug 05 06:38:00 EDT 2019,11658483,"Sorry to not mention that. All those variables, for hiding, I kept with tags like <projectID> etc., But from my end I replaced all properly and all the initialisations at RPi end I have done clearly @GabeWeiss"
57263817,101195249,57281098,3,0,Mon Aug 05 07:30:00 EDT 2019,3534690,"THat's what I figured. Try the base tutorial I linked in the last comment. Let's be sure we can get ANY function firing from pub sub"
57263817,101109003,57281098,3,0,Thu Aug 01 11:46:00 EDT 2019,11658483,"Thank you @GabeWeiss for the priceless information you shared. But from your medium article, I was able to do only triggering on my own. But I want it to be triggered automatically, say for example when heartrate goes beyond a threshold limit. And I didn't get much info on what IoT Admin SDK is. Any ways thanks once again. But any extra details will greatly help me"
57263817,101191885,57281098,3,0,Mon Aug 05 04:09:00 EDT 2019,11658483,"This links to my Git repository, where you can find *DHT11.py* and *cloudFunction.py*. In a nutshell, I am sending data from *DHT11.py* to trigger *cloudFunction.py* and correspondingly trigger LED on ESP32. I am using ssame registry for both ESP32 and Raspberry Pi. I would be glad if you (or your team) support my Git and contribute, so that would be of great help to beginners like me starting out there, especially with pub/sub triggering, as official Google documentation only uses HTTP triggering @GabeWeiss https://github.com/saiku99/Google-Cloud-IoT-Core"
57263817,101193441,57281098,3,1,Mon Aug 05 06:07:00 EDT 2019,3534690,"To take a step back, maybe try this tutorial: https://cloud.google.com/functions/docs/tutorials/pubsub. Separate from everything else, just to confirm we can get Functions running from your Pub/Sub to see if there's anything in that tutorial that's missing?		From your GitHub, I see that none of the project variables are set in the DHT11.py, I'm assuming on the Pi they are?"
57263817,101168181,57281098,3,0,Sat Aug 03 15:54:00 EDT 2019,3534690,"The topic should be the one you set when you created the IoT Core registry. Did you set a subscription on that topic? Without a subscription, any messages sent to the topic are ignored. You can confirm messages are going the subscription with the gcloud command from the command line. `gcloud beta pubsub subscriptions pull --auto-ack <subscription id from the IoT Core registry setup part>`. Double check that you've done all the setup steps from this blog post: https://medium.com/google-cloud/cloud-iot-step-by-step-connecting-raspberry-pi-python-2f27a2893ab5"
57263817,101203997,57281098,3,0,Mon Aug 05 12:24:00 EDT 2019,11658483,"Thank you @GabeWeiss for your constant support. You are the man behind my success. I have been struggling for a week. I retried your basic tutorial and figured out, I have been doing wrong in decoding! Now i have done perfectly and I am updating my Git as well. I sent you LinkedIn request as well. Hope we get connected. Take care"
57263817,101187327,57281098,3,0,Sun Aug 04 19:55:00 EDT 2019,3534690,"Weird. And in the Cloud Function, you have the method to trigger name when you created it, implemented in the function with the correct signature? It's different between HTTP triggering and Pub/Sub triggering. Methods are here: https://cloud.google.com/functions/docs/calling/pubsub"
57263817,101211936,57281098,3,1,Mon Aug 05 16:37:00 EDT 2019,3534690,"Yes! Glad you got it working. (Also glad my tutorial DOES work) :D"
