thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56332237,56332237,null,1,2,Mon May 27 20:40:00 EDT 2019,2442274,"<p>I've searched google and only found the MultipeerConnectivity framework in iOS but I don't know how I could make it work for my specific case.</p>		<p>The flow of what I want to do is like this:</p>		<ol>	<li>Enable personal hotspot in iOS</li>	<li>Connect to hotspot from a raspberry pie</li>	<li>Once client is connected, send a message string from the iOS app.</li>	</ol>		<p>Assuming that the raspberry pie connection is already sorted out (We're using a static SSID and Password for the hotspot)</p>		<p>The questions that come up are:</p>		<ul>	<li>Which framework should I use (assuming there is one already)?</li>	<li>do I need to explicitly advertise the iOS device from the app? </li>	<li>How do I get notified when the raspberry connects to the phone?</li>	<li>How do I send a message to the connected client?</li>	</ul>	"
56332237,56519031,56332237,2,1,Sun Jun 09 23:15:00 EDT 2019,321542,"<p>Although I never developed anything for Pi, I developed net service browsing for iOS devices, so can give an answer. 	When you connect to iPhone hotspot, it's a usual WiFi connection, so here you can use Bonjour protocol (mDNS) to discover devices one another. </p>		<p>Run Avahi mDNS service on Pi, and discover it on iPhone.</p>		<p>Here is <a href="https://bloggerbrothers.com/2017/01/08/name-your-pis-with-mdns-forget-the-ips-with-zeroconf/" rel="nofollow noreferrer">how to run Avahi on Pi</a>.</p>		<p><a href="https://developer.apple.com/library/archive/documentation/Networking/Conceptual/NSNetServiceProgGuide/Articles/BrowsingForServices.html" rel="nofollow noreferrer">Here</a> is how to discover mDNS net service on iPhone.</p>		<p>After net service is discovered with <code>NSNetServiceBrowser</code>, you'll have IP address and port of your Pi available on your iPhone, so you can connect to it.</p>	"
56332237,56545478,56332237,2,0,Tue Jun 11 13:59:00 EDT 2019,11433122,"<p>If you are trying to setup a IoT system, it may be useful to look into various cloud offerings to facilitate messaging between devices. Personally I have used <a href="https://aws.amazon.com/iot-core/" rel="nofollow noreferrer">AWS IoT core</a> services in the past, and it is relatively easy to setup messaging between devices.</p>		<p>I am not sure what your exact use case is for this setup, but using a cloud based service to setup messaging between devices will remove the requirement to connect directly between devices via hotspot (the pi still needs some internet connection), and could make it easier to enable multiple devices and app clients in the system.  </p>	"
