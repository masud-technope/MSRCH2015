thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41674782,41674782,null,1,0,Mon Jan 16 10:57:00 EST 2017,7383694,"<p>I am using the java android_sample taken from azure-iot-hub	<a href="https://github.com/Azure/azure-iot-sdk-java/tree/95f8f4e80b3ec8b6fbbbc8e577e70d00c01e7a64/device/samples/android-sample" rel="nofollow noreferrer">android sample</a></p>		<p>Basically i have a Raspberry pi that sends data with a python script to the Azure iot hub.</p>		<p><a href="https://i.stack.imgur.com/p1aPb.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/p1aPb.png" alt="Picture off device explorer(PI data)"></a></p>		<p>As you can see from the picture, the IoT hub is receiving the data.</p>		<p>In Android studio, as said, I am using the android_sample code.	I added a button and textview etc... To show the data.</p>		<p>Now, when I go to the "Messages to Device" tab and send data everything works. My phone is receiving that data, and displaying it.</p>		<p>The problem is that I want the data from the "data" tab. When I start the Pi script, and then the android app, it's not receiving the data that the pi is sending.</p>		<p>When I "send" something from the device explorer, it is receiving that data.</p>		<p>if you need some code I will post it, but i'm basically using the example code, just modified a bit.</p>	"
41674782,41732571,41674782,2,0,Thu Jan 19 02:05:00 EST 2017,6601582,"<p>Your android app can receive data sent from device explorer because these are Cloud-to-Device data. While it can't receive data sent from the Raspberry Pi because these are Device-to-Cloud data. It is expected.</p>		<p>More information you can reference <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messaging" rel="nofollow noreferrer">Understand Azure IoT Hub messaging</a>.</p>		<p>For your use case you can reference <a href="https://blogs.windows.com/buildingapps/2016/09/08/device-to-device-communication-with-azure-iot-hub/#w6V6V365jQpb0wwg.97" rel="nofollow noreferrer">Device to Device Communication with Azure IoT Hub</a>. </p>	"
