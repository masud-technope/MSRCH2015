thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43038597,43038597,null,1,3,Mon Mar 27 05:33:00 EDT 2017,7156373,"<p>I have just started learning using MQTT protocol with Android Studio. Using <strong>mosquitto</strong> broker, I am able to exchange messages between <strong>pub/sub</strong> windows. But when I send message to broker through android studio, the app builds successfully but nothing displays on broker's end &amp; system prints Connection Failure. The same code works fine on eclipse java application, but not working on android although required libraries and dependencies have been added.</p>		<p>Please help, what am I missing in this basic step so i can learn forward. Thank you!</p>		<p><strong>app-build.gradle</strong></p>		<pre><code>    dependencies {	    compile fileTree(dir: 'libs', include: ['*.jar'])	    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {	        exclude group: 'com.android.support', module: 'support-annotations'	    })	    compile 'com.android.support:appcompat-v7:25.2.0'	    compile 'com.android.support.constraint:constraint-layout:1.0.2'	    testCompile 'junit:junit:4.12'		// have added following dependencies		    provided 'com.google.android.things:androidthings:0.2-devpreview'	    provided 'com.google.android.things:androidthings:0.1-devpreview'	    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'		}	</code></pre>		<p><strong>project-build.gradle</strong></p>		<pre><code>   repositories {	            jcenter()	            maven {	                url "https://repo.eclipse.org/content/repositories/paho-snapshots/"	            }    	}	</code></pre>		<p><strong>AndroidManifest.xml</strong></p>		<pre><code> &lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"	    package="com.example.zoha.mqttandroidiot"&gt;		    &lt;!-- Permissions the Application Requires --&gt;	    &lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;	    &lt;uses-permission android:name="android.permission.INTERNET" /&gt;	    &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;	    &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;	    &lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;	    &lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" /&gt;			    &lt;application	        android:allowBackup="true"	        android:icon="@mipmap/ic_launcher"	        android:label="@string/app_name"	        android:roundIcon="@mipmap/ic_launcher_round"	        android:supportsRtl="true"	        android:theme="@style/AppTheme"&gt;			        &lt;activity android:name=".HomeActivity"&gt;		            &lt;intent-filter&gt;	                &lt;action android:name="android.intent.action.MAIN"/&gt;	                &lt;category android:name="android.intent.category.LAUNCHER"/&gt;	            &lt;/intent-filter&gt;		            &lt;!-- Launch activity automatically on boot --&gt;	            &lt;intent-filter&gt;	                &lt;action android:name="android.intent.action.MAIN"/&gt;	                &lt;category android:name="android.intent.category.IOT_LAUNCHER"/&gt;	                &lt;category android:name="android.intent.category.DEFAULT"/&gt;	            &lt;/intent-filter&gt;		        &lt;/activity&gt;	&lt;service android:name="org.eclipse.paho.android.service.MqttService"/&gt;		    &lt;/application&gt;		&lt;/manifest&gt;	</code></pre>		<p><strong>HomeActivity</strong></p>		<pre><code>  public class HomeActivity extends AppCompatActivity{		    MqttAndroidClient client;	   // private static final MemoryPersistence persistence = new MemoryPersistence();		    @Override	    protected void onCreate(Bundle savedInstanceState) {	        super.onCreate(savedInstanceState);	        setContentView(R.layout.activity_main);		        final MqttAndroidClient mqttAndroidClient = new MqttAndroidClient(this.getApplicationContext(), "tcp://localhost:1883", "androidSampleClient");	        mqttAndroidClient.setCallback(new MqttCallback() {	            @Override	            public void connectionLost(Throwable cause) {	                System.out.println("Connection was lost!");		            }		            @Override	            public void messageArrived(String topic, MqttMessage message) throws Exception {	                System.out.println("Message Arrived!: " + topic + ": " + new String(message.getPayload()));		            }		            @Override	            public void deliveryComplete(IMqttDeliveryToken token) {	                System.out.println("Delivery Complete!");	            }	        });		        try {	            mqttAndroidClient.connect(null, new IMqttActionListener() {	                @Override	                public void onSuccess(IMqttToken asyncActionToken) {	                    System.out.println("Connection Success!");	                    try {	                        System.out.println("Subscribing to /test");	                        mqttAndroidClient.subscribe("/test", 0);	                        System.out.println("Subscribed to /test");	                        System.out.println("Publishing message..");	                        mqttAndroidClient.publish("/test", new MqttMessage("Hello world testing..!".getBytes()));	                    } catch (MqttException ex) {		                    }		                }		                @Override	                public void onFailure(IMqttToken asyncActionToken, Throwable exception) {	                    System.out.println("Connection Failure!");	                }	            });	        } catch (MqttException ex) {		        }			    }	    }	</code></pre>	"
43038597,89359766,43038597,3,0,Thu Jul 05 10:34:00 EDT 2018,4528126,"Change the BROKER url to your system ip address not your mobile's ip."
43038597,73162447,43038597,3,0,Mon Mar 27 05:49:00 EDT 2017,3866010,"Also, make sure to fix the `service` tags in your `AndroidManifest.xml` file. `service..` tag should be outside your `activity` tag. So copy the `â€¹service..` line and paste it below the `</activity>` line"
43038597,43038678,43038597,2,3,Mon Mar 27 05:41:00 EDT 2017,3866010,"<p>Ok so you need two libraries to use MQTT in Android. One is the mqtt paho client and other being Android service library.</p>		<pre><code>compile 'org.eclipse.paho:org.eclipse.paho.android.service:1.0.2'	compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'	</code></pre>		<p>Then, use <code>MqttAndroidClient</code> instead of <code>MqttClient</code>. </p>		<p>So do <code>new MqttAndroidClient(...)</code>.</p>		<p>I posted a full Android MQTT service example <a href="https://stackoverflow.com/questions/42189627/trying-mqtt-connection-on-android-using-paho-mqttclient/42191432#42191432">here</a>, if that helps.</p>		<blockquote>	  <p><strong>EDIT: full activity example</strong></p>	</blockquote>		<p>(1) <code>MemoryPersistence</code> added when creating new <code>MqttAndroidClient</code>.<br>	(2) Two parameters added to <code>.connect()</code> method of the <code>MqttAndroidClient</code> (<code>mqttConnectOptions</code> and <code>null</code>).<br>	(3) Also, printing the error on <code>onFailure()</code></p>		<pre><code>public class HomeActivity extends AppCompatActivity {		    private MqttAndroidClient client;	    private final MemoryPersistence persistence = new MemoryPersistence();		    @Override	    protected void onCreate(Bundle savedInstanceState) {	        super.onCreate(savedInstanceState);	        setContentView(R.layout.activity_main);		        final MqttAndroidClient mqttAndroidClient = new MqttAndroidClient(this.getApplicationContext(), "tcp://localhost:1883", "androidSampleClient", persistence);	        mqttAndroidClient.setCallback(new MqttCallback() {	            @Override	            public void connectionLost(Throwable cause) {	                System.out.println("Connection was lost!");	            }		            @Override	            public void messageArrived(String topic, MqttMessage message) throws Exception {	                System.out.println("Message Arrived!: " + topic + ": " + new String(message.getPayload()));	            }		            @Override	            public void deliveryComplete(IMqttDeliveryToken token) {	                System.out.println("Delivery Complete!");	            }	        });		        MqttConnectOptions mqttConnectOptions = new MqttConnectOptions();	        mqttConnectOptions.setCleanSession(true);		        try {	            mqttAndroidClient.connect(mqttConnectOptions, null, new IMqttActionListener() {	                @Override	                public void onSuccess(IMqttToken asyncActionToken) {	                    System.out.println("Connection Success!");	                    try {	                        System.out.println("Subscribing to /test");	                        mqttAndroidClient.subscribe("/test", 0);	                        System.out.println("Subscribed to /test");	                        System.out.println("Publishing message..");	                        mqttAndroidClient.publish("/test", new MqttMessage("Hello world testing..!".getBytes()));	                    } catch (MqttException ex) {		                    }	                }		                @Override	                public void onFailure(IMqttToken asyncActionToken, Throwable exception) {	                    System.out.println("Connection Failure!");	                    System.out.println("throwable: " + exception.toString());	                }	            });	        } catch (MqttException ex) {	            System.out.println(ex.toString());	        }	    }	}	</code></pre>	"
43038597,73174905,43038678,3,0,Mon Mar 27 11:39:00 EDT 2017,3866010,"@Noor can you debug and find out which one of the parameter is null? If anything, just try to print each parameter in log and see which one is null. I seems like a very simple issue"
43038597,73263645,43038678,3,0,Wed Mar 29 10:42:00 EDT 2017,7156373,"@th3pat3I Can you please see the revised code? It's now giving no error & but says Connection Failure."
43038597,73163528,43038678,3,0,Mon Mar 27 06:33:00 EDT 2017,7156373,"Thank you for your help. But now its giving null pointer exception on publish statement: 'org.eclipse.paho.client.mqttv3.IMqttDeliveryToken org.eclipse.paho.android.service.MqttService.publish(java.lang.String, java.lang.String, org.eclipse.paho.client.mqttv3.MqttMessage, java.lang.String, java.lang.String)' on a null object reference"
43038597,73308669,43038678,3,0,Thu Mar 30 10:00:00 EDT 2017,7156373,"@th3pat3I Thank you so much for your quick response. With your sample,  connection fails with the message:		unable to connect to server (32103) - java.net.connectException: failed to connect to localhost/127.0.0.1(port 1883) after 3000ms: isConnected failed: ECONNREFUSED (connection refused) ). 		I also tried "192.168.0.103:1883" as broker address which is my pc's ip address then it gives java.lang.IllegalArgumentException: 192.168.0.103:1883.		 Still trying to resolve it."
43038597,73272406,43038678,3,0,Wed Mar 29 13:56:00 EDT 2017,3866010,"@Noor i posted a sample. give it a try"
43038597,50109744,43038597,2,2,Mon Apr 30 23:56:00 EDT 2018,5391248,"<p>I wanted to just add a comment, but my rep is too low...so i'm posting it as an answer.</p>		<p>You said you got everything working but are unable to connect because of the <code>IllegalArgumentException</code>. I had the same problem and found out that you need to define the protocol also.	So instead of <code>"192.168.0.103:1883"</code> try:</p>		<p><code>String serverURI = "tcp://192.168.0.103:1883"</code></p>		<p>From what i read you already did the other necessary steps, but for the sake of giving a complete answer:</p>		<ol>	<li><p>Edit the <code>AndroidManifest.xml</code> to include: </p>		<ul>	<li><p><code>&lt;service android:name="org.eclipse.paho.android.service.MqttService" /&gt;</code>	(from inside the <code>application</code> tag)</p></li>	<li><p><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;</code></p></li>	<li><code>&lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;</code></li>	<li><code>&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;</code></li>	<li><code>&lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;</code></li>	</ul></li>	<li><p>Edit the <code>build.gradle</code> to include (in the <code>dependencies</code> section): </p>		<ul>	<li><p><code>compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.1'</code></p></li>	<li><p><code>compile 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'</code></p></li>	</ul></li>	<li><p>Use the <code>MqttAndroidClient</code> (not the <code>MqttClient</code>)</p></li>	<li><p>Put your code in the "onSuccess" callback, to avoid any problems due to the methods being asynchronous (as shown by THEPATEL's answer):</p>		<pre><code>MqttConnectOptions mqttConnectOptions = new MqttConnectOptions();	mqttConnectOptions.setKeepAliveInterval(60);//seconds	mqttConnectOptions.setCleanSession(true);	mqttConnectOptions.setAutomaticReconnect(true);		mqttAndroidClient.connect(mqttConnectOptions, null, new IMqttActionListener() {	        @Override	        public void onSuccess(IMqttToken asyncActionToken) {	            //Treat success here (subscribe, publish etc)	        }		        @Override	        public void onFailure(IMqttToken asyncActionToken, Throwable exception) {	            //Treat failure here	        }	    });	</code></pre></li>	</ol>	"
43038597,54131791,43038597,2,0,Thu Jan 10 15:20:00 EST 2019,6512806,"<p>I had the same issue with MQTT publisher from an android device. While referring to <code>tcp://localhost:1883</code> from an android emulator, I had to use <code>http://10.0.2.2:1883</code> since emulator runs on its own VM and localhost would be emulators own loopback address.  </p>	"
43038597,55057929,43038597,2,0,Fri Mar 08 06:36:00 EST 2019,4657495,"<p>I was getting Same Error but I have solved it.	This is working code.</p>		<p>in gradle :</p>		<pre><code>compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'	    compile 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.0'	</code></pre>		<p>In Manifest :</p>		<pre><code>  &lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;	    &lt;uses-permission android:name="android.permission.INTERNET" /&gt;	    &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;	    &lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;	</code></pre>		<p>Service Tag inside Application:</p>		<pre><code>  &lt;service android:name="org.eclipse.paho.android.service.MqttService" &gt;	        &lt;/service&gt;	</code></pre>		<p>Activity Code :</p>		<pre><code> MqttAndroidClient client;	 Button btnsub,btnpublish;	</code></pre>		<p>to connect with Mqtt client:</p>		<pre><code>String clientId = MqttClient.generateClientId();	   client = new MqttAndroidClient(getApplicationContext(), "tcp://www.domain.in/ip:11883",clientId);	        client.connect().setActionCallback(new IMqttActionListener() {	            @Override	            public void onSuccess(IMqttToken asyncActionToken) {	                // We are connected	            }	            @Override	            public void onFailure(IMqttToken asyncActionToken, Throwable exception) {	            }	        });	</code></pre>		<p>To SubScribe on button click :</p>		<pre><code>   client.subscribe("topic", 0, null, new IMqttActionListener() {	                        @Override	                        public void onSuccess(IMqttToken asyncActionToken) {	                        }	                        @Override	                        public void onFailure(IMqttToken asyncActionToken, Throwable exception) {	                        }	                    });	                    client.subscribe("topic", 0, new IMqttMessageListener() {	                        @Override	                        public void messageArrived(String topic, MqttMessage message) throws Exception {	                        }	                    });	</code></pre>		<p>to Publish on button click :</p>		<pre><code>   MqttMessage message = new MqttMessage();	                    message.setPayload("message".getBytes());	                    client.publish("topic", message);	</code></pre>	"
