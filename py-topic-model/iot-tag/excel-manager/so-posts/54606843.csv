thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54606843,54606843,null,1,-1,Sat Feb 09 13:49:00 EST 2019,9603922,"<p>I'm working on IMB IOT application.It basically allow to sends command or data from one device to another in json format. I have developed python script which sends an string from one system and gets received on another system. And it's working well. Now I want to deal with script file in place of string. But the thing is IBM IOT supports only json format to dump payloads. Is there any way to convert files to json format ?</p>		<pre><code>   i wrote a script which tries converting files to json format, doesn't work that perfect ! is there any other way to do that?	</code></pre>		<p>code to convert a script file to json</p>		<p><a href="https://i.stack.imgur.com/lx93y.png" rel="nofollow noreferrer">code</a>	<a href="https://i.stack.imgur.com/gwXWr.png" rel="nofollow noreferrer">output of code</a></p>		<pre><code>Is there any way to make it work better?	</code></pre>		<p>here is the code which try sending the file to another system through json format</p>		<pre><code>act =input("Enter the key-&gt;")	file_path = input("\nPlease enter the file path-&gt;")	payload1 ={"computer1" : act}	update_file= open(file_path,'rb')	payload ={}	payload['context'] = base64.b64decode( update_file.read())	client.publishEvent("status",json,payload1,payload)		print(act)		print("command sent")	time.sleep(2)	</code></pre>		<p>and on the other another computer</p>		<pre><code> def commandcallback(event):	   filename = payload['recieved_one]	   filedata = base64.base64decode(payload['context'])	   update_file =open(filename,'wb')	   update_file.write(filedata)	   update_file.close()	</code></pre>	"
54606843,96008921,54606843,3,0,Sat Feb 09 13:53:00 EST 2019,797495,""***Is there any way to to convert files to json format ?***" Yes, but... Which ***files***?  Please add the relevant code to your question, if the link goes 404 the question's dead."
54606843,96009061,54606843,3,0,Sat Feb 09 14:02:00 EST 2019,9603922,"any python script file .. please check the screenshot attached to it .I have created the script which tries to convert the running script into json file and save it into text format for now.. but I want to convert it into json to send it to another system. I am using #ibmiotf library.."
54606843,96009951,54606843,3,0,Sat Feb 09 15:03:00 EST 2019,797495,"`json.loads(obj), json.dumps(obj)`"
54606843,54612118,54606843,2,0,Sun Feb 10 00:08:00 EST 2019,3818286,"<p>You can implement a custom message codec to transmit the file content in any way you choose.</p>		<p>See the doc topic covering use of custom message formats.	<a href="https://ibm-watson-iot.github.io/iot-python/custommsg/" rel="nofollow noreferrer">https://ibm-watson-iot.github.io/iot-python/custommsg/</a> ... Bear in mind these docs are for the pending 1.0 release (<code>wiotp-sdk</code> rather than <code>ibmiotf</code>), but this aspect it works pretty much the same in the 0.4 release of <code>ibmiotf</code>.</p>		<p>It depends what you want to get out of this how I would recommend handling this:</p>		<p><strong>Are you only interested in simple text files?</strong></p>		<p>You can write a simple codec that will send data as a simple string in utf-8 (or whatever your choice of encoding be), register the codec for format string <code>utf8</code>  And use that as the format string when sending events so that the clients know this is how you want to encode and decide the message payload, which means the event.data you get on the application would be the UTF-8 encoded string of the file content.</p>		<p><strong>Do you want to use this as a way to transmit any file, regardless of content-type?</strong></p>		<p>You could write the codec such that it simply passes a raw bytearray suitable for writing direct to file on the application processing the event (e.g using the format string <code>raw</code>), in this case event.data would give you a bytearray that can be easily used to write to file on the receiving application.</p>		<p>Hopefully that gives you some ideas of what you can do with the custom message support built into the client library.  I’ll have a look at adding these as examples in the repo when I’m back in the office on Monday.</p>	"
54606843,96064590,54612118,3,0,Mon Feb 11 17:46:00 EST 2019,3818286,"Pushed the 0.9.0 release to pypi so you can pick that up https://pypi.org/project/wiotp-sdk/ ... it includes a new built-in support for `raw` and `utf8` message formats that support event based file transfer.  See example here: https://github.com/ibm-watson-iot/iot-python/issues/130#issuecomment-462422354"
54606843,96023052,54612118,3,0,Sun Feb 10 09:03:00 EST 2019,9603922,"thank you so much for the respond. and yes wiotp-sdk is not available till to date!"
