thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
42421639,42421639,null,1,0,Thu Feb 23 16:47:00 EST 2017,7394651,"<p>I'm trying to find if its possible using RegistryManager to have it not register a device if the thumbprint of the certificate is already in use on another device.</p>		<pre><code>_registryManager = RegistryManager.CreateFromConnectionString(_connectionString);	            Microsoft.Azure.Devices.Device device;		            try	            {	                Console.WriteLine("Registering Device using X.509 certificate for authentication");	                device = await _registryManager.AddDeviceAsync(new Microsoft.Azure.Devices.Device(deviceId)	                {	                    Authentication = new AuthenticationMechanism()	                    {	                        X509Thumbprint = new X509Thumbprint()	                        {	                            PrimaryThumbprint = certificate2.Thumbprint	                        }	                    }	                }).ConfigureAwait(false);	            }	</code></pre>		<p>So if that code above was called and another device had that thumbprint, I want it to fail. Alternatively I want to be able to view all existing thumbprints so i can manually check before registering.</p>		<p>I can't see any way to do this via RegistryManager.</p>	"
42421639,42434515,42421639,2,1,Fri Feb 24 09:00:00 EST 2017,6601582,"<blockquote>	  <p>Alternatively I want to be able to view all existing thumbprints so i	  can manually check before registering.</p>	</blockquote>		<p>You can get existing thumbprints like this:</p>		<pre><code>        var _registryManager = RegistryManager.CreateFromConnectionString(_connectionString);	        var devices = await _registryManager.GetDevicesAsync(100); //Here I use 100 for testing purpose. Replace this value with yours.	        foreach (var dev in devices)	        {	            if (dev.Authentication.X509Thumbprint.IsValid(false))	            {	                var primaryThumbprint = dev.Authentication.X509Thumbprint.PrimaryThumbprint;	                var secondaryThumbprint = dev.Authentication.X509Thumbprint.SecondaryThumbprint;	                Console.WriteLine("primaryThumbprint:" + primaryThumbprint);	                Console.WriteLine("SecondaryThumbprint:" + SecondaryThumbprint);	            }	        }	</code></pre>	"
