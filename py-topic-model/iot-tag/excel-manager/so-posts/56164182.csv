thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56164182,56164182,null,1,0,Thu May 16 08:32:00 EDT 2019,11306770,"<p>I'm currently working on an UWP app which includes USB communication with a custom USB device. I was able to set up a communication channel between a Raspberry Pi 3b and the device and sent some bytes back and forth. It does not work if I run this app on a local machine (Windows 10 build 1809) instead. In this case the call to <a href="https://docs.microsoft.com/en-us/uwp/api/windows.devices.usb.usbdevice.fromidasync" rel="nofollow noreferrer">UsbDevice.FromIdAsync</a> always returns NULL.</p>		<p>I saw some related questions <a href="https://stackoverflow.com/questions/39427148/usbdevice-fromidasync-returns-null">here</a>, <a href="https://stackoverflow.com/questions/28721091/c-sharp-windows-store-app-returning-null-for-usbdevice">here</a> and <a href="https://stackoverflow.com/questions/41319056/uwp-serialdevice-fromidasync-return-null">here</a> with the similar or even the same problem. But none of the solutions mentioned are working for me. </p>		<p>I installed the Win USB driver using following inf-file:</p>		<pre><code>;	; Installs WinUsb	;	[Version]	Signature = "$Windows NT$"	Class     = USBDevice	ClassGUID = {88BAE032-5A81-49f0-BC3D-A4FF138216D6}	Provider  = %ManufacturerName%	CatalogFile = WinUSBInstallation.cat	DriverVer = 12/12/2016,13.54.20.543		[Generic.Section.NTamd64]	%USB\MS_COMP_WINUSB.DeviceDesc% = WINUSB,USB\MS_COMP_WINUSB 		; ========== Manufacturer/Models sections ===========		[Manufacturer]	%ManufacturerName% = Standard,NTamd64		[Standard.NTamd64]	%DeviceName% = USB_Install, USB\VID_0483&amp;PID_0001		; ========== Class definition ===========		[ClassInstall32]	AddReg = ClassInstall_AddReg		[ClassInstall_AddReg]	HKR,,,,%ClassName%	HKR,,NoInstallClass,,1	HKR,,SilentInstall,,1 	HKR,,IconPath,%REG_MULTI_SZ%,"%systemroot%\system32\setupapi.dll,-20"	HKR,,LowerLogoVersion,,5.2		; =================== Installation ===================		[USB_Install]	Include = winusb.inf	Needs   = WINUSB.NT		[USB_Install.Services]	Include = winusb.inf	Needs   = WINUSB.NT.Services		[USB_Install.HW]	AddReg = Dev_AddReg		[Dev_AddReg]	HKR,,DeviceInterfaceGUIDs,0x10000,"{9f543223-cede-4fa3-b376-a25ce9a30e74}"		; =================== Strings ===================		[Strings]	ManufacturerName = "Manufacturer"	ClassName = "Universal Serial Bus devices"	DeviceName = "Device"	REG_MULTI_SZ = 0x00010000	</code></pre>		<p>The device shows up properly in the device manager without any errors.	I added the device capabilities to the Package.appxmanifest as follows:</p>		<pre><code>&lt;Capabilities&gt;	  &lt;DeviceCapability Name="usb"&gt;	    &lt;Device Id="vidpid:0483 0001"&gt;	      &lt;Function Type="classId:ff 00 00"/&gt;	      &lt;Function Type="name:vendorSpecific"/&gt;	    &lt;/Device&gt;	  &lt;/DeviceCapability&gt;	&lt;/Capabilities&gt;	</code></pre>		<p>And in my code I try to open the device as follows:</p>		<pre class="lang-cs prettyprint-override"><code>byte deviceClass = 0xff;	byte deviceSubclass = 0x00;		var myDevices = await Windows.Devices.Enumeration.DeviceInformation.FindAllAsync(	    Windows.Devices.Usb.UsbDevice.GetDeviceClassSelector(	        new Windows.Devices.Usb.UsbDeviceClass() {	            ClassCode = deviceClass,	            SubclassCode = deviceSubclass	        }	    )	);		UsbDevice device = null;	var numDevices = myDevices.Count;		foreach (var d in myDevices) {	    device = await UsbDevice.FromIdAsync(d.Id);	    if (device == null) {	        // Device could not be found.	    }	    else {	        // Found device.	    }	}	</code></pre>		<p>The call to FindAllAsync does find a single device which has the correct id. But calling FromIdAsync always returns NULL. As mentioned before this all works on a Raspberry Pi 3b but not locally on my desktop machine or any other machine I tried out.	I searched for a few days now and I don't know what I'm still overlooking or missing. Any suggestions what else I can do?</p>		<p>Best regards</p>	"
56164182,98986814,56164182,3,0,Fri May 17 06:13:00 EDT 2019,7254781,"I have tested with official code [sample](https://github.com/microsoft/Windows-universal-samples/tree/master/Samples/CustomUsbDeviceAccess), it works well, could you test  this  in another usb socket."
56164182,99088148,56164182,3,0,Tue May 21 08:58:00 EDT 2019,11306770,"The device is a custom developement, supporting USB 2.0. The data itself shall be transferred using interrupt-transfer. The funny things is, in a different application in which we utilize the [WinUSB library](https://docs.microsoft.com/en-us/windows/desktop/api/winusb/index) and SetupApi, it also works."
56164182,99089218,56164182,3,0,Tue May 21 09:27:00 EDT 2019,7254781,"hmm, if you could not provide the usb device detail  info, we could not test it completely."
56164182,99082786,56164182,3,0,Tue May 21 05:41:00 EDT 2019,7254781,"Please share more about use device, such as product name model name and interface type."
56164182,99063817,56164182,3,0,Mon May 20 13:10:00 EDT 2019,11306770,"I tried different sockets with the same result. Executing the example returns the device access status "DeniedByUser". I included the corresponding snippet regarding the device access information into my code and got the same error. It this somehow related to [this](https://stackoverflow.com/questions/54397934/cant-find-seiralport-device-by-using-serialdevice-fromidasync-and-got-imforma) question? I tried it, but it doesn't seem to change anything."
