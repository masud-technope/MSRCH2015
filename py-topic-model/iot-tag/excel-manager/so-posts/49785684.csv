thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
49785684,49785684,null,1,0,Wed Apr 11 23:12:00 EDT 2018,1464722,"<p>In my case I have 1000+ of devices that stores activity inside. I need to send a http get request to this device to get those data in csv or json format and save it in a storage hosted on azure. 	Cab IOT hub require data using get request and can it be scheduled to read daily/weekly? 	What other azure services would you suggest to facilitated this scheduled reads?</p>	"
49785684,49787677,49785684,2,0,Thu Apr 12 03:46:00 EDT 2018,8356543,"<p>You can consider using Device Twin of IoT Hub	<a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins</a></p>		<p>Use device twins to:</p>		<ul>	<li>Store device-specific metadata in the cloud. For example, the deployment location of a vending machine.</li>	<li>Report current state information such as available capabilities and conditions from your device app. For example, a device is connected to your IoT hub over cellular or WiFi.</li>	<li>Synchronize the state of long-running workflows between device app and back-end app. For example, when the solution back end specifies the new firmware version to install, and the device app reports the various stages of the update process.</li>	<li>Query your device metadata, configuration, or state.</li>	</ul>	"
49785684,49792301,49785684,2,0,Thu Apr 12 09:00:00 EDT 2018,1107465,"<p>IoT Hub provides you with the ability to connect your devices over various protocols. Preferred protocols are messaging protocols, such as MQTT or AMQP, but HTTPS is also supported. Using IoT hub, you do not request data from the device, though. The device will send the data to the IoT Hub. You have to options to implement that with IoT Hub:</p>		<ul>	<li>The device connects to the IoT Hub whenever it has some data to be sent, and pushes the data up to IoT Hub</li>	<li>The device does not send any data on its own, but stays always or at least regularly connected to IoT Hub. You then can send a cloud to device message over IoT Hub to the device, requesting the data to be sent. The device then sends the data the same way it would in the first option.</li>	</ul>		<p>When the data then has been sent to IoT Hub, you need to push it somewhere where it is persistently stored - IoT Hub only keeps messages for 1 day by default. Options for this are:</p>		<ul>	<li>Create a blob storage account and push to that directly from IoT Hub using a <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messages-read-custom" rel="nofollow noreferrer">custom endpoint</a> This would probably be the easiest and cheapest. Dependening on how you need to access your data, a blob might not be the best option, though</li>	<li>Create a function app, create a function with an EventHubTrigger, connect it to IoT Hub and let the function process incoming data by outputting it into any kind of data sink, such as SQL, CosmosDB, Table Storage...</li>	</ul>	"
49785684,49807575,49785684,2,2,Fri Apr 13 00:19:00 EDT 2018,8084828,"<p>You have not mentioned which the Azure IoT Hub scale tier is used. Basically there are two price groups such as <em>Basic</em> and <em>Standard</em> with a significant different cost and capabilities. The Basic tier offers only services for one-way communications between the devices and Azure IoT Hub.</p>		<p>Based on that, the following scenarios can be used for your business case:</p>		<p><em>1. Basic Tier</em> (non event-driven solution)	The device pushs periodicaly a telementry and non-telemetry messages based on the needs to the Azure IoT Hub, where the non-telemetry messages are routed to the Azure Function via the Service Bus Queue/Topic. Responsibility for this non-telemetry pipe is to persist a real device state in the database. Note, that the 6M messages will cost only $50/month. The back-end application can any time to query this database for devices state.</p>		<p><em>2. Standard Tier (event-driven solution)</em> In this scenario you can use a Device Twin of the Azure IoT Hub to enable storing a real-device state in the cloud-backend (described by @HelenLo). The device can be triggered by C2D message, changing a desired property, invoking a method or based on the device edge trigger to the action for updating a state (reported properties).	The Azure IoT Hub has a capabilities to run your scheduled <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-jobs" rel="nofollow noreferrer">jobs</a> for multiple devices.<br>	In this solution, the back-end application can call any time a job for <strong>ExportDevicesAsync</strong> to the blob storage, see more details <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-bulk-identity-mgmt" rel="nofollow noreferrer">here</a>. Note, that the 6M messages will cost $250/month.</p>		<p>As you can see the above each scenario needs to build a different device logic model based on the communications capabilities between the devices and Azure IoT Hub and back. Note, there are some limitations for these communications, see more details <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-quotas-throttling" rel="nofollow noreferrer">here</a>.</p>	"
49785684,86636262,49807575,3,0,Fri Apr 13 06:48:00 EDT 2018,4148708,"What are you talking about? There is no "Basic" SKU and device twins are available even in "Free"."
49785684,86640752,49807575,3,0,Fri Apr 13 09:06:00 EDT 2018,4148708,"Wow, thanks for opening my eyes, i had no idea about the B SKU. My bad!"
49785684,86638515,49807575,3,1,Fri Apr 13 08:01:00 EDT 2018,8084828,"have a look at https://azure.microsoft.com/en-us/pricing/details/iot-hub/ and https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-scaling?branch=release-iotbasic"
