thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
31794733,31794733,null,1,0,Mon Aug 03 18:56:00 EDT 2015,5186815,"<p>I am working on designing an embedded system that will support a touch screen and will communicate with a motor controller. This device, however needs to support firmware updates via a Wi-Fi module. </p>		<p>The following are my specific questions:	Using an ESP266 has been effective in sending data to my server (Apache with MySQL database) but can this module be used to download firmware updates? (I've had a hard time finding anything on this.)	If not what would be a more effective module/approach?</p>		<p>What would a typical server setup look like for distributing firmware updates? Would it use TCP/IP or FTP? I don't imagine there would be more 10,000 of these devices distributed and the firmware itself would likely be >=50MB.</p>		<p>As far as flashing the firmware goes I was considering having a memory location dedicated to storing updated firmware and having the boot loader check if there is new firmware there. If there is it will begin flashing the new firmware. Whats a good method to ensure this is atomic? Is the bootloader the best place to do this or would something else be more appropriate?</p>	"
31794733,51548693,31794733,3,0,Tue Aug 04 14:14:00 EDT 2015,5186815,"I'm going to add some basic security via generation of a check sum and ignoring the binary file if one isn't sent or it doesn't match. I felt this would be sufficient but if not I would appreciate any other suggestions."
31794733,51548963,31794733,3,1,Tue Aug 04 14:19:00 EDT 2015,4774918,"It will **not** be enough. A checksum does not add anything to security and almost none to safety. For anything further: this is not the place. SO is a Q&A site, not a discussion forum. That would be too broad and requires knowledge of years. These final thoughts: There is a reason why "security by obscurity" does not work and why so many implementations of secure crypto-algorithms and protocols still can be cracked."
31794733,51522310,31794733,3,0,Mon Aug 03 21:47:00 EDT 2015,4774918,"Sounds like another target for crackers."
31794733,31945695,31794733,2,1,Tue Aug 11 15:16:00 EDT 2015,5215129,"<p>The ideal way to distribute a firmware for updates is the least painful one for the user.</p>		<p>Having said that, you want security to avoid others meddling with your hardware.	Whether it is going to be FTP, or HTTP or even the SSL/TLS encrypted variations depends on preference.</p>		<p>Requirement for secure authenticated firmware updates is a digital signature suite. If your system is capable of running an IP stack, it probably has the resources to squeeze in a signature verification. A commercial solution optimized for embedded systems fits into 4.5kB of ROM and runs completely from the stack (to verify the numbers, go here: <a href="https://www.segger.com/emlib-emsecure.html" rel="nofollow">https://www.segger.com/emlib-emsecure.html</a> ).</p>		<p>This does not protect your firmware from being read out, but it cannot be modified without being noticed by the target system. Basically the bootloader would verify the signature and find out whether the firmware is from the original source and untampered with.</p>		<p>If you want to protect your firmware from being read during transmission you could replace the signature software with a TLS/SSL solution. This would increase memory usage.</p>		<p>If I look for a solution offered by the same company, there resource usage for the TLS stack is said to be 7k in RAM (see <a href="https://www.segger.com/pr-emssl-v2.html" rel="nofollow">https://www.segger.com/pr-emssl-v2.html</a>). They have not published the ROM usage yet, but if I recall correctly it has been something between 20 and 30 kByte.</p>		<p>If you do use TLS, create your own certificate! Do not rely on certification servers, as they might be infected. This would be a point 2 point connection anyway, there is noone else involved, so you know which certificate to use and all other certificates can be rejected.</p>	"
31794733,31843311,31794733,2,0,Wed Aug 05 21:39:00 EDT 2015,1870387,"<p>On the firmware update protocol:</p>		<ul>	<li>Do not use insecure protocols like plain FTP.</li>	<li>Use something TLS based, and check that the server certificate is correct.</li>	<li>Possible protocol is HTTPS, i.e. simple HTTP GET over TLS.</li>	</ul>		<p>On the scalability:</p>		<ul>	<li>If the device downloads a firmware update, distribute the requests from different devices over a long time, e.g. time = 1am + (serialNumber MOD 240) in minutes.</li>	</ul>	"
