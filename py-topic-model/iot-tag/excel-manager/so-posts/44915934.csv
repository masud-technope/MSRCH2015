thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44915934,44915934,null,1,0,Wed Jul 05 01:51:00 EDT 2017,1900290,"<p>How to identify the lat/long location from where the IoT button click was made</p>		<p><a href="https://aws.amazon.com/iotbutton/" rel="nofollow noreferrer">https://aws.amazon.com/iotbutton/</a></p>	"
44915934,49183709,44915934,2,2,Thu Mar 08 22:41:00 EST 2018,2635931,"<p>There are lookups you can do from IP Address to location. i.e <a href="http://ip-api.com/json/208.80.152.201" rel="nofollow noreferrer">http://ip-api.com/json/208.80.152.201</a></p>		<p>Unfortunately for you, IoT Button clicks only give 3 event parameters:</p>		<pre><code> clickType: event.clickType, // (string) the type of press; can be "SINGLE", "DOUBLE" or "LONG"	 serialNumber: event.serialNumber, // (string) device's serial number, from the back of the button.	 batteryVoltage: event.batteryVoltage // (string) device's voltage level in millivolts. e.g. "1567mV"	</code></pre>		<p>If your set up of an IoT button involves putting it on a wifi network, and having it be stationary, that is the time to manually map the serial number to a latitude/longitude. Then do a look-up from serial number to lat/long. </p>		<p>[1] <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-lambda-rule.html" rel="nofollow noreferrer">https://docs.aws.amazon.com/iot/latest/developerguide/iot-lambda-rule.html</a></p>		<p>[2] <a href="https://www.losant.com/blog/getting-started-with-aws-iot-button-losant" rel="nofollow noreferrer">https://www.losant.com/blog/getting-started-with-aws-iot-button-losant</a></p>	"
