thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
48311195,48311195,null,1,0,Wed Jan 17 22:42:00 EST 2018,2042546,"<p>I don't fully understand the complete development cycle and transition from general purpose boards to microcontroller-based serious industrial hardware.</p>		<p>Right now I use <code>RPi</code> or similar general purpose boards and follow this development process:</p>		<ul>	<li>design hardware with <code>SoC</code> (<code>RPi</code>) in mind.</li>	<li>order/buy hardware</li>	<li>connect main board and peripherals</li>	<li>install <code>OS</code> (almost always <code>Linux</code>)</li>	<li>install libraries, applications, toolchain</li>	<li>create corresponding software with a previously installed toolchain</li>	<li>when the solution is working correctly, move hardware to an appropriate case.</li>	<li>deploy</li>	</ul>		<p>It may include additional steps but the way I see it, everything is already designed, assembled and test before I even start my development. I only need to choose connect devices, connect wires and create a software. Software is mostly free.	The downside is that such solution lacks quality. I doubt hardware is able to withstand harsh industrial environment. It is also not small enough.</p>		<p>Now I am trying to dive into <code>STM32</code>/<code>Quark</code>/[any microcontroller] world. What I understood so far is:</p>		<ul>	<li>buy a development board</li>	<li>create software</li>	<li>test</li>	</ul>		<p>What confuses me is the part when you switch from dev. board to... What?	I mean dev. boards are not designed to be used in a final product, do they?	I guess a need a custom solution. 	Do I need to design a custom electronic circuit, produce it by means of an external manufacturer and install my microcontroller and additional <code>IC</code>s there?</p>		<p>I see various presentation's of modern small-size CPUs and I what to know how to develop a device with them.	I want to get an understanding of a full development cycle of an <code>IoT</code> low-power device, but don't know to how to ask correctly.</p>	"
48311195,83609220,48311195,3,1,Wed Jan 17 23:34:00 EST 2018,6110094,"If you ask this kind of questions, you are far away from being ready to design  **serious** industrial solutions."
48311195,83609306,48311195,3,0,Wed Jan 17 23:39:00 EST 2018,16007,"If RPi means raspberry pi, you are not going to be able to buy those parts, so move on, you can buy the parts on the beaglebone family, and allwinners probably but not broadcoms.   how would a microcontroller be any different the nucleo and other boards are half eval half hobby.  they have an mcu they are demonstrating, you simply buy one of those and put it on a board.  many of those you can bang out a board yourself with eagle or kicad, get the parts at mouser, etc, and hand solder them.  or build something around the nucleo/discovery/etc."
48311195,83609338,48311195,3,0,Wed Jan 17 23:41:00 EST 2018,16007,"quark is another beast and I think those are done.  If not then probably avoid.  As pointed out you are a long way from being ready to do these things based on the kinds of questions you are asking.  You need a hardware designer to do the boards and you can do the software."
48311195,83609357,48311195,3,0,Wed Jan 17 23:42:00 EST 2018,16007,"the so called IoT devices are custom built chips, building chips is a whole other deal, if you are that rich then maybe you can buy parts from broadcom.  ones to tens of millions of dollars per try, plus the salary for the team of folks doing the designs, some of those millions for the software tools and the computers to run them."
48311195,83609372,48311195,3,0,Wed Jan 17 23:43:00 EST 2018,16007,"for now buy some nucleo boards or arduinos and look at sparkfun and adafruit, hook up some oled displays or drive a servo or something, get a feel for the building blocks then maybe from there think of a toy/project/product then get some help designing and building.  stackoverflow is not the place for that BTW."
48311195,83624953,48311195,3,0,Thu Jan 18 11:08:00 EST 2018,16007,"Think of the nucleo and other similar boards, folks in the mcu business have eval boards but these days these eval/hobby boards are common.  That has a schematic, that is your reference design.  You get the datasheet and other documentation from the chip vendor (st, ti, etc) that made the part of interest, and there are a number of electrical requirements and limitations that you design the board to meet.  the eval you can jumper together with other eval boards or eval other parts separately."
48311195,83624976,48311195,3,0,Thu Jan 18 11:08:00 EST 2018,16007,"get a feel for the software task either with a jumpered together system or by evaluating the parts separately before they are combined on the product."
48311195,83625092,48311195,3,0,Thu Jan 18 11:11:00 EST 2018,16007,"if any of the parts are BGA (ball grid array) you are not soldering those by hand in a lab/garage.  Otherwise you can be it a few folks in a garage or even a real design team in a corporation assemble the prototypes yourself or have your techs do it.  but get into bigger parts like the ones on the raspi you have having your contract manufacturer build those, and the board design, scales up, small teams can still do the design, but it is a more complicated task, higher speed signals, power, heat, etc.  just scales up."
48311195,83618973,48311195,3,0,Thu Jan 18 08:30:00 EST 2018,2042546,"@old_timer thank you for your response. My question was not about designing entire device myself, but more about understanding the whole process because right now I able to see it only from a software developer perspective. I know a full industrial development cycle (for `PLC` based solutions). With `PLC`s, you never create your own devices, more like connect existing ones. Now I try to move to `MCU` based solution, particularly because of power consumption and size. But I never designed anything like this before."
48311195,83620800,48311195,3,1,Thu Jan 18 09:20:00 EST 2018,584518,"Indeed industrial microcontroller applications are almost exclusively using custom-made PCBs. Besides, a microcontroller alone is rarely ever enough for any projet; you'll need other electronic parts as well. In particular, "IoT" is a fluffy buzzword for wireless devices, so you'll need some form of radio.		Raspberry PI is a hobbyist toy - it cannot be used in industrial/professional applications. The board isn't designed for rugged applications, Cortex A7 etc is likely very much overkill, Linux is entirely unsuitable for real-time systems, and so on."
48311195,48434093,48311195,2,1,Thu Jan 25 01:05:00 EST 2018,9254733,"<p>This isn't really an answer, I don't have enough reputation to simply add a comment, unfortunately.  The fact is, answering your question is not simple, there is lot to it.  Even after four years of college in Electronic Engineering Technology it was hardly a scratch on what the "real world" is. One learns so much more in the workplace and it never stops.  </p>		<p>Anyway, an couple comments.</p>		<p>Microcontrollers are not all equal thus they are not all equally suitable for every task. The development boards and the evaluation boards that are created for microcontrollers are also not all equal and may have focus on applicability to a certain market segment, i.e medical, automotive, consumer IoT, etc.. </p>		<p>Long before you start buying a development or evaluation board you have to decide on what is the most appropriate microcontroller. And even, is a microcontroller actually the best choice?  ASIC or FPGA?  What kind of support chips are needed?  How will they interface?  Many chip manufactures provide reference designs that can be used a starting point but there are always multiple iterations to actually develop a product.  And there is testing, so much testing that we have a "test engineers." </p>		<p>You list development steps is lacking greatly, first and foremost the actual specifications have to be determined for whatever product is being developed and from these specifications appropriate hardware is selected for evaluation.  Cost is always a driving factor and so fitting the right device to the product and not going overkill is very important.  A lot of time is spent evaluating possible products from their datasheets to determine what products seem to be the right fit.  Then there are all the other factors such as the experience with the device/brand/IDE etc.  All of that adds to cost of development plus much more.</p>		<p>You mention software(firmware) is free.  No, software and firmware are never free.  Someone has to develop it and that takes time and time is money.  Someone has to debug it.  Debugging takes time. Debugging hardware is expensive. Don't forget the cost of the IDE, commercial IDEs are not cheap and some are much more expensive than others and can greatly effect the cost to develop.  Compare the cost of buying an IDE to develop  for a Maxim Integrated MAXQ MCU to any of the multitude of AVR or ARM IDE choices.  Last I checked there were only two companies making an IDE for the MAXQ MCUs.  What resources are available to assist in your design you can use with minimal or no licensing fees? This is the tip of the iceberg.  There is a lot to it, software/firmware is not "free."</p>		<p>So fast forward a year, you finished a design and it seems to pass all internal testing. What countries are you marketing in?  Do you need UL, CE or other certifications? I hope you designed your board to take into account EMI mitigation. Testing that in-house isn't cheap, certification testing isn't either, and failing is even more costly.  </p>		<p>These are a very, very, few things that seem to be often ignored by hobbyists and makers thinking they can up with the next best thing and make a killing in some emerging market.  </p>		<p>I suggest you do a search on Amazon for "engineering development process", "lean manufacturing", "design for manufacturability",  "design for internet of things", "engineering economics" and plan on spending some money to buy some books and time to read up on what the design process is from the various points of view that have to be considered. </p>		<p>Now maybe you mean to develop and deploy for your own use and cost, manufacturability, marketability and the rest are not so important to you. I still suggest you do some Amazon research and pick up some well recommended reading/learning material there that is pertinent to you actual goals. You may want to avoid textbooks, as they generally are more useful when accompanied with class lectures - plus they tend cost much more than the books written for the non-student. </p>		<p>Don't exclude the option of hiring the design and development of an idea out to a firm that specializes in it.  It is expensive but is it more expensive than one-up in-house design and development? Probably not.  How fast do you actually need your device?  Will you lost if someone beats you to market? So many things to consider I could spend hours on this just pointing out things that may, or may not, even be relevant to you depending on what you actual goal is.  </p>		<p>TL;DR  There is a great deal to the design and development of a product be it marketed to consumers (such as IoT) or to industry.  Specifications come first. The exact develop process is going to be influenced by the specifications.  Your question cannot be easily answered and certainly not without knowing much more about your end goal.  Amazon is a good source of books for really general questions like this.  </p>	"
48311195,83870151,48434093,3,0,Thu Jan 25 09:28:00 EST 2018,2042546,"Thank you for your detailed explanation. 	For now, I've bought STM32F4Discovery board and started to build and control simple electric circuits. I use board's electric scheme as a reference."
48311195,83873650,48434093,3,0,Thu Jan 25 11:01:00 EST 2018,9254733,"Ah, I see - you are just starting out in this.  In my experience ST Microelectronics makes good products and the provide a lot of resources to help kickstart development.  They have an ARM Cortex and that is certainly is a good MCU to learn on.  It is popular and is used a lot in many universities.  For example, Digilent, a company that makes dev boards largely targeted to the educational market has put ARM MCUs on many of their boards.  So, you will find a lot of resources out there.  Best of luck to you!"
