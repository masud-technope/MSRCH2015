thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
51664163,51664163,null,1,0,Fri Aug 03 01:31:00 EDT 2018,518581,"<p>I am weighing the pros and cons of design approaches for an IoT use case using Flink or Storm and Ignite. 	Consider I created a Rule Flow stating if any vehicle crossed the threshold speed limit set in the rule, then the flow should trigger an action to send SMS to drivers number. The flow I created is saving as a JSON in MongoDB. I have a list of 1000 OBD devices (which is continuously sending the data 3 times in a second) and associated drivers mobile numbers in another table in DB. In my design, I'm considering using an In memory DB too. Data collection is handling with Kafka. </p>		<p>What would be the fastest and most scalable implementation approach to update the flow with data (Unique ID of OBD device and Driver Mobile Number)? I have in DB and streaming data from each OBD device (current speed of the vehicle). </p>	"
51664163,90291721,51664163,3,0,Fri Aug 03 01:32:00 EDT 2018,102937,"What is your criteria for "best?""
51664163,90291734,51664163,3,0,Fri Aug 03 01:34:00 EDT 2018,518581,"Performance(speed) and Scalability @RobertHarvey"
51664163,51736749,51664163,2,0,Tue Aug 07 23:27:00 EDT 2018,1689455,"<p>If you configure Ignite as a cache on top of the disk-based database, then you can have all updates to automatically propagate to both, in-memory cache and the database, using Ignite cache store with write-through and read-through features: <a href="https://apacheignite.readme.io/docs/3rd-party-store" rel="nofollow noreferrer">https://apacheignite.readme.io/docs/3rd-party-store</a></p>	"
