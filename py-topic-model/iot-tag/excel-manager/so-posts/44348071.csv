thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44348071,44348071,null,1,1,Sat Jun 03 20:00:00 EDT 2017,719172,"<p>Same problem as <a href="https://stackoverflow.com/questions/42651680/azure-iothub-exportdevicesasync-throws-internal-server-error/">here</a>. I'm following the <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-bulk-identity-mgmt#export-devices" rel="nofollow noreferrer">simple sample to export the IOT</a> device list to blob storage but hitting an internal server error on ExportDevicesAsync. 	I'm using North Europe, but I don't think changing servers is really a valid fix.</p>		<p>All I'm getting back is:</p>		<pre><code>An exception of type 'Microsoft.Azure.Devices.Common.Exceptions.ServerErrorException' occurred in mscorlib.dll but was not handled in user code		Additional information: {"Message":"ErrorCode:ServerError;InternalServerError","ExceptionMessage":"Tracking ID:c51dad0227604f21b9af3e8acbd77f4c-G:5-TimeStamp:06/03/2017 19:56:10"}	</code></pre>		<p>Sample Code (connection strings and keys masked)</p>		<pre><code>internal async Task GetAllDevices()	{		    var ConnectionString =	        "HostName=xxxx.azure-devices.net;SharedAccessKeyName=xxxxowner;SharedAccessKey=xxxxLr3xxxxXKKILLxxxxx";	   registryManager = RegistryManager.CreateFromConnectionString(ConnectionString);		    var key = "https://xxxxotblob1.blob.core.windows.newt/?sv=2016-05-31&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlxxxxup&amp;se=2017-06-04T04:42:14Z&amp;st=2017-06-03T20:42:14Z&amp;spr=https&amp;sig=kxxxxxxxxxxxxxxx%3D";		    JobProperties exportJob = await registryManager.ExportDevicesAsync(key,"device.txt", false);		    while (true)	    {	        exportJob = await registryManager.GetJobAsync(exportJob.JobId);	        if (exportJob.Status == JobStatus.Completed ||	            exportJob.Status == JobStatus.Failed ||	            exportJob.Status == JobStatus.Cancelled)	        {	            break;	        }		        await Task.Delay(TimeSpan.FromSeconds(5));	    }		}	</code></pre>		<p>Am I doing something wrong here? Is there a way to catch the real exception I'm missing?</p>	"
44348071,75724166,44348071,3,0,Mon Jun 05 03:19:00 EDT 2017,6601582,"Which line cause this exception?"
44348071,75755657,44348071,3,0,Mon Jun 05 20:42:00 EDT 2017,719172,"@RitaHan-MSFT it was on line : JobProperties exportJob = await registryManager.ExportDevicesAsync(key,"device.txt", false);"
44348071,44380819,44348071,2,1,Tue Jun 06 03:12:00 EDT 2017,6601582,"<p>You may have wrong format of the exportBlobContainerUri. The right one looks like this:</p>		<pre><code>https://[StorageAccountName].blob.core.windows.net/[ContainerName]?sv=2016-05-31&amp;sr=c&amp;sig=mxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxw%3D&amp;se=2017-06-06T02%3A07%3A22Z&amp;sp=rwd	</code></pre>		<p>You can follow these steps to get the container SAS URI:</p>		<pre><code>//1# Get your container:		CloudStorageAccount storageAccount = CloudStorageAccount.Parse(	    CloudConfigurationManager.GetSetting("StorageConnectionString"));		CloudBlobClient blobClient = storageAccount.CreateCloudBlobClient();		CloudBlobContainer container = blobClient.GetContainerReference("mycontainer");		//2# Format the Uri:		static string GetContainerSasUri(CloudBlobContainer container)	{	  var sasConstraints = new SharedAccessBlobPolicy();	  sasConstraints.SharedAccessExpiryTime = DateTime.UtcNow.AddHours(24);	  sasConstraints.Permissions = 	    SharedAccessBlobPermissions.Write | 	    SharedAccessBlobPermissions.Read | 	    SharedAccessBlobPermissions.Delete;		  string sasContainerToken = container.GetSharedAccessSignature(sasConstraints);		  return container.Uri + sasContainerToken;	}	</code></pre>		<p>For more information you can reference <a href="https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-how-to-use-blobs#create-a-container" rel="nofollow noreferrer">Create a container</a> and <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-bulk-identity-mgmt#get-the-container-sas-uri" rel="nofollow noreferrer">Get the container SAS URI</a>.</p>	"
