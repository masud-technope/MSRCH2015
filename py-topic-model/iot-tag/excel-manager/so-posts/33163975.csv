thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33163975,33163975,null,1,0,Fri Oct 16 06:36:00 EDT 2015,5168103,"<p>I am currently working on IOT Coap protocol.I accessed server on local host through copper firefox plugin. Then i Added resouce having "GET" functionality in server.	After that i made its client as a streaming source. 	Here is the code of client streaming</p>		<pre><code> class customReceiver(test:String) extends  Receiver[String](StorageLevel.MEMORY_AND_DISK_2) with Logging with Serializable { 	   @volatile private var stopped = false	   override def onStart() {		      val client = new CoapClient("ip/resource")	      var text = client.get().getResponseText();  	      store(text)	   }	   override def onStop(): Unit = synchronized { 	      try	      {	         stopped = true	      }	      catch	      {	         case e: Exception =&gt; println("exception caught: " + e);	      }	   }	 }	</code></pre>		<p>but i am facing a problem. During streaming it just read a resource once. after that it fetches all empty rdd and completes its batches. Meanwhile if resource changes its value it doesn't read that. 	are i doing something wrong? or is there exists any other functionality to read whenever resource get changed that i can handle in my Custom receiver.? or any idea about how to GET value continuously during streaming?</p>		<p>Any help is much awaited and appreciated.	Thanks</p>	"
33163975,33195033,33163975,2,1,Sun Oct 18 06:32:00 EDT 2015,1537998,"<p>There is an observe functionality: it enables CoAP clients to "subscribe" to resources and servers to send updates to subscribed clients whenerver the resource the client subscribes to get changed over a period of time. Here is the <a href="https://tools.ietf.org/html/rfc7641" rel="nofollow">IEFT draft</a>.</p>	"
33163975,34874387,33163975,2,2,Tue Jan 19 10:29:00 EST 2016,3440888,"<p>Streaming of data is application implementation.</p>		<ul>	<li>1] You can subscribe the resource as observer. The observer functionality has to be implemented in your application.</li>	<li>2] You can continuously send data in interval using PUT functionality.</li>	</ul>		<p>A good OBSERVE example is provided in <code>libcoap</code>, where client (firefox copper) observes the "time" resource of server <em>(coap-server)</em>. <code>coap-server</code> continuously sends CON message of time and date to client, since time changes very second. In turn client send ACK message.</p>		<p>Also CoAP combined with TCP functionality is better suitable for streaming of data.</p>	"
33163975,58389053,34874387,3,0,Thu Feb 11 13:43:00 EST 2016,5168103,"yes. @electrospark. i acheived it in the same way you told. thanks you.!!"
