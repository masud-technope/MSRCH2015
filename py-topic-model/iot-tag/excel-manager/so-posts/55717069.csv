thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55717069,55717069,null,1,0,Tue Apr 16 21:49:00 EDT 2019,8711769,"<p>I am setting up my first Windows IoT Core background application that is running on a Raspberry Pi, but I am running into a problem with conflicting assembly versions and I have been unable to resolve them.</p>		<p>Specifically, I am getting an error message that states:</p>		<pre><code>No way to resolve conflict between "System.Data.Common, Version=4.2.1.0,	Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" and "System.Data.Common, 	Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a". Choosing 	"System.Data.Common, Version=4.2.1.0, Culture=neutral, 	PublicKeyToken=b03f5f7f11d50a3a" arbitrarily.	</code></pre>		<p>Upon closer inspection, there are two versions of the <code>System.Data.Common.dll</code> that my application is referencing.</p>		<p>The first is coming from the installed package <code>Microsoft.NETCore.UniversalWindowsPlatform (v 6.2.8)</code>.  The assembly version of System.Data.Common here is 4.2.1.0 (which is the version I want to use):</p>		<pre><code>Assembly System.Data.Common version 4.2.1.0		C:\Users\mikel\.nuget\packages\Microsoft.NETCore.UniversalWindowsPlatform\6.2.8\ref\uap10.0.15138\System.Data.Common.dll	</code></pre>		<p>The second is apparently being included as a dependency with the .netstandard:</p>		<pre><code>Assembly System.Data.Common version 4.1.0.0		C:\Users\mikel\.nuget\packages\System.Data.Common\4.3.0\ref\netstandard1.2\System.Data.Common.dll	</code></pre>		<p>I am having a little harder time pinpointing exactly what is forcing NuGet to download and install the second package.  Perhaps one of my other packages that I need is referencing it as a dependency (not sure).</p>		<p><b>Either way, I would like to setup assembly binding remapping so that any attempt to reference 4.1.0.0 will redirect and use 4.2.1.0.</b></p>		<p>When I do a build of my project, I get this warning:</p>		<pre><code>1&gt;  Consider app.config remapping of assembly "System.Data.Common, Culture=neutral, 	PublicKeyToken=b03f5f7f11d50a3a" from Version "4.1.0.0" 	[C:\Users\mikel\.nuget\packages\System.Data.Common\4.3.0\ref\netstandard1.2\System.Data.Common.dll] 	to Version "4.2.1.0" 	[C:\Users\mikel\.nuget\packages\Microsoft.NETCore.UniversalWindowsPlatform\6.2.8\ref\uap10.0.15138\System.Data.Common.dll] 	to solve conflict and get rid of warning.	</code></pre>		<p>However from what I have read, Universal Windows Projects do not support the use of app.config files.  At any rate though, I added an app.config file to the root of my project, set the build action to <code>Embedded Resource</code>, selected <code>Copy Always</code> and put this in the file (to no affect):</p>		<pre><code>&lt;configuration&gt;	  &lt;runtime&gt;	    &lt;assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1"&gt;	      &lt;dependentAssembly&gt;	        &lt;assemblyIdentity name="System.Data.Common" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" /&gt;	        &lt;bindingRedirect oldVersion="4.1.0.0" newVersion="4.2.1.0"/&gt;	      &lt;/dependentAssembly&gt;	    &lt;/assemblyBinding&gt;	  &lt;/runtime&gt;	&lt;/configuration&gt;	</code></pre>		<p>I have also tried setting the NuGet project management format to <code>PackageReference</code> and added <code>&lt;AutoGenerateBindingRedirects&gt;true&lt;/AutoGenerateBindingRedirects&gt;</code> to each PropertyGroup in my .csproj file.  This did not have any impact.</p>		<p>My Universal Windows project targets are as follows:</p>		<p><b>Target version:</b> <code>Windows 10 Fall Creators Update (10.0; Build 16299)</code></p>		<p><b>Minimum Version:</b> <code>Windows 10 Fall Creators Update (10.0; Build 16299)</code></p>		<p>I should also state that I <i>want</i> to use the 4.2.1.0 version of the assembly, as 4.1.0.0 is missing a few things I need to implement the wrapper I am using around SQLite.  My preference is to not have to re-write those wrappers.</p>		<p>At this point I am very confused as to how to resolve this conflict.  How do I enable binding redirects to resolve this error?</p>		<p><a href="https://i.stack.imgur.com/xMsRf.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/xMsRf.png" alt="enter image description here"></a></p>		<p>Any help would be greatly appreciated.</p>	"
55717069,98118854,55717069,3,0,Wed Apr 17 03:29:00 EDT 2019,8711769,"@RitaHan-MSFT --		Microsoft.Data.Sqlite (v1.1.0);	Microsoft.NETCore.UniversalWindowsPlatform (v6.2.8);	SQLitePCLRaw.bundle_green (v1.1.13)"
55717069,98118456,55717069,3,0,Wed Apr 17 02:55:00 EDT 2019,6601582,"Can you show what nuget packages you have installed for your background application? And what are their versions?"
55717069,98143654,55717069,3,0,Wed Apr 17 16:51:00 EDT 2019,8711769,"So I was able to resolve this. When I went to installed the Reference Conflicts Analyser, I noticed that my build of Studio 2017 was outdated.  So I updated to the latest build - and low and behold, it magically started working.  No idea at all why, but problem resolved!  Thanks so much for helping take a look at this."
55717069,98122725,55717069,3,0,Wed Apr 17 07:01:00 EDT 2019,6601582,"I use same nuget packages with same version of yours and same target and minimum version, but I can't reproduce your issue. Please show related code for reproducing this issue."
55717069,98124060,55717069,3,0,Wed Apr 17 07:46:00 EDT 2019,6601582,"You can try [Reference Conflicts Analyser](https://marketplace.visualstudio.com/items?itemName=MykolaTarasyuk.ReferenceConflictsAnalyser) tool for visual studio to find how the conflict happens."
