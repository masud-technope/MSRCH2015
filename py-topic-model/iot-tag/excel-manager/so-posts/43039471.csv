thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43039471,43039471,null,1,5,Mon Mar 27 06:40:00 EDT 2017,4380130,"<p>I'm just looking into the details of Eclipse <a href="http://www.eclipse.org/paho/" rel="noreferrer">PAHO</a> and <a href="https://projects.eclipse.org/projects/technology.mosquitto" rel="noreferrer">Mosquitto</a> client libraries (MQTT C++ libraries). It looks like the PAHO uses the mosquitto MQTT broker but provides its own MQTT client libraries. </p>		<p>Also the <a href="http://wiki.neuromeka.net/index.php?title=Implementing_MQTT_Client_using_C%2B%2B_with_libmosquitto" rel="noreferrer">Mosquitto</a> library provides a way to implement client libraries for Mosquitto MQTT broker.</p>		<p>I would like to understand what's the main difference between these two client libraries. <a href="https://groups.google.com/forum/#!topic/mqtt/9P6kZznHH0I" rel="noreferrer">Here</a> it is discussed but that does not answer my question. Which is preferred over another and why? and why eclipse supports both? </p>	"
43039471,43041087,43039471,2,3,Mon Mar 27 08:12:00 EDT 2017,7251286,"<p>I'm facing the same issue, whether to pick <a href="https://www.eclipse.org/paho/" rel="nofollow noreferrer">paho</a> or <a href="https://projects.eclipse.org/projects/technology.mosquitto" rel="nofollow noreferrer">Mosquitto</a> c++ client library for an embedded linux device. I tried first a minimal application with PAHO. It basically supports all the features I need, but the cpp-library-wrapper does not and I feel like the main project branch <a href="https://github.com/eclipse/paho.mqtt.cpp" rel="nofollow noreferrer">paho.mqtt.cpp</a> is not maintained very well. 	Since there are two features </p>		<ol>	<li><p>encryption</p></li>	<li>set all connect options like mqtt-version, etc </li>	</ol>		<p>which are not offered through the mainBranch cpp-lib in PAHO, I'm going to use <code>libmosquitto</code> with <a href="https://github.com/eclipse/mosquitto/tree/master/lib/cpp" rel="nofollow noreferrer">libmosquittopp</a> wrapper now.	So as you see my decision is related to the cpp-library only. But like you I'm still interested to get to know what are the differences between the underlying C-libraries.</p>	"
43039471,73295105,43041087,3,0,Thu Mar 30 01:39:00 EDT 2017,4380130,"Thanks for the info. Earlier I tried with `libmosquitto` and it worked well and pretty easy implement clients with the library. However I wanted to try the `paho` thus I wanted to know the core difference as the both libraries are supported by eclipse. I'll keep posted here if I come across any better information on it. I request you also to do that if feasible."
43039471,101817721,43041087,3,0,Wed Aug 28 06:29:00 EDT 2019,4380130,"No @VincentBeltman. I did move on with `Mosquitto` client library."
43039471,101699445,43041087,3,0,Fri Aug 23 08:49:00 EDT 2019,4049748,"@Panch Did you find any more information on this subject?"
43039471,44671050,43039471,2,1,Wed Jun 21 08:44:00 EDT 2017,316578,"<p>We have used Paho C library and Java library.  If you look at the Paho C code, the code quality is poor.  With the Java library, we experienced a problem where Linux deletes a temp file and Paho does not recover - don't know if that affects the C version.  Trying libmosquitto for next project.</p>	"
43039471,76690820,44671050,3,0,Fri Jun 30 21:24:00 EDT 2017,1719473,"We are a java shop planning to use Paho for MQTT. Can you elaborate on the issue with the Java library?.  Was this confirmed as a bug by the dev team?"
43039471,76743201,44671050,3,1,Mon Jul 03 09:51:00 EDT 2017,316578,"@NishM I might have some of the details wrong, but as I understand it, the first time the Paho library receives a message from the broker, it creates a temp folder and file.  Possibly because of our configuration of Paho, this was being created in /var/tmp.  After the application had been running for about 30 days, Linux deleted the folder and the file as part of its housekeeping of this directory, and Paho was broken until the application was restarted.  The solution was to tell Paho to create it somewhere else."
