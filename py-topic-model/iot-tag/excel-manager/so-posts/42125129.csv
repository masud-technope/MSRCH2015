thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
42125129,42125129,null,1,0,Wed Feb 08 22:48:00 EST 2017,4371664,"<p>So I'm kinda stuck here.</p>		<p>I have a radio station, but we are mobile. So I have a studio on wheels. The problem is, we have an antenna, but we always have to place that really close to our studio. Now I want to make an device that can <code>stream</code> the audio from the audio mixer to the internet and can be <code>received</code> by another device in another network and send that signal to the antenna (audio output).</p>		<p>to make this clear, I made a schema with raspberry pi's;</p>		<p><a href="https://i.stack.imgur.com/UFDSH.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/UFDSH.png" alt="Schema"></a></p>		<p>I want this to be <code>plug and play</code> So I only have to plug in the device in the modem (or network we have) on both sides and the devices should find each other.</p>		<p>I don't know HOW I can do this, so I need to know a couple of things:</p>		<ul>	<li>What hardware should I use?</li>	<li>What software should I use?</li>	<li>What is the best configuration to accomplish this?</li>	<li>Can I use 2 raspberry pi's?</li>	<li>How can I let the devices find each other over the internet?</li>	</ul>		<p>There need to be some features;</p>		<ul>	<li>The system needs to be able to buffer the audio for 5-10 seconds</li>	<li>It needs to be direct, so it's live and not a file that needs to be played</li>	<li>The system must be failless (beside the fact the internet can die).</li>	<li>Plug and play is a must, I don't want to have a really messy configuration to do. (if possible, without any kind of portforwarding).</li>	</ul>		<p>I would really appreciate help and a decent explaination.</p>		<p>regards,</p>		<p>Robin</p>	"
42125129,42262959,42125129,2,0,Thu Feb 16 00:59:00 EST 2017,1474994,"<p>Well, it depends on your capabilities as a programmer.</p>		<ul>	<li>If you're really fixated on the RPi for it's convenient form factor, there's a ton of community support, so I'd start with something like <a href="https://www.codeproject.com/Articles/838501/Raspberry-Pi-as-low-cost-audio-streaming-box" rel="nofollow noreferrer">this project</a> to kick start you in the right direction.  If you already know python pretty well, modify away and have fun.</li>	<li>If you have no programming experience, you'll probably want to put a desktop in place of the RPi and launch some instances of VLC.  It's not necessarily <code>plug n play</code>, but you can get close enough by getting a command line VLC to launch at startup.</li>	</ul>		<p>Either way, the more difficult problem here is the "over the internet" part.  This would really need to be a server-client model, but who is your <em>server</em> depends on who is more <em>stationary</em> (I'm guessing Location 2?) because the client will need to know the IP address of the server somehow.  There are dozens of ways to make this happen, but at the end of the day, you'll want to use sockets accomplish the</p>		<blockquote>	  <p>It needs to be direct, so it's live and not a file</p>	</blockquote>		<p>... which unfortunately gets complicated.  See <a href="https://stackoverflow.com/a/18697869/1474994">this answer</a> for confirmation.  Would love to help with some tips on implementation, but we need more information about your willingness to "dig into the code", the necessity of the RPi, and whether the stationary location has a static web address.</p>	"
