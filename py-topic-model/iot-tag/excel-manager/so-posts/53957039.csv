thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53957039,53957039,null,1,0,Fri Dec 28 10:27:00 EST 2018,10842504,"<p>I am working with Azure IoT hub and have a test environment running at the moment. However we are using 4g data subscriptions (Mobile) to upload measurements from our devices and I have done a lot to reduce the data that we gather and upload every 10 minutes. However when measuring the data consumption I still see quite a big overhead. My data take up around 300 bytes compressed, but after measuring data with NetBalancer I can see that after 1 day my application have sent 1.2 MB and received 2.3 MB. I am using the MQTT protocol as that should have the smallest footprint.</p>		<p>I can't seem to find any best practice or similar to reduce the data sent on the wire using IoT hub. Any help is highly appreciated! :) </p>	"
53957039,94766198,53957039,3,0,Fri Dec 28 21:01:00 EST 2018,4148708,"You absolutely sure the RX/TX size you're measuring is JUST the MQTT traffic? Is your MQTT client a Windows PC? There's a lot of chattery going on to/from Internet with Windows even when Windows Update is disabled."
53957039,94752513,53957039,3,0,Fri Dec 28 10:58:00 EST 2018,1945525,"You might want to look into determining the [packet loss](https://en.wikipedia.org/wiki/Packet_loss) of the connection since this will cause data to be retransmitted."
53957039,53985479,53957039,2,0,Mon Dec 31 08:59:00 EST 2018,6565271,"<p>You might be able to reduce the size of the message by serializing using <strong><a href="https://developers.google.com/protocol-buffers/" rel="nofollow noreferrer">Protocol Buffers</a></strong> (there are nuget packages available for C#). </p>		<p>Take a look at the <a href="https://docs.microsoft.com/en-us/azure/iot-accelerators/iot-accelerators-device-simulation-protobuf" rel="nofollow noreferrer">Serialize telemetry using Protocol Buffers</a> guide, on how you might be able to implement it.</p>		<p>Hope it helps!</p>	"
53957039,55026947,53957039,2,0,Wed Mar 06 15:42:00 EST 2019,10062782,"<p>Here are some things you can try:</p>		<ol>	<li>If you are disconnecting after each message, avoid doing so. A TLS handshake can cost up to 10 Kilobytes whereas keep alive pings cost only 80 bytes sent every minute. Reconnecting after every message is often not  economical.</li>	<li>Avoid TLS altogether and use a protocol gateway between the client and IoTHub as a TLS termination point. (This is risky but if you can encrypt your payload in some other reliable way, can prove to be a viable option)</li>	<li>As suggested by Itay, try alternate serialisation options such as protocol buffers or flatbuffers. These tend to have much smaller footprints than JSON</li>	<li>Make sure you're using the best compression algorithm for your payload.</li>	</ol>		<p>It helps to create a simulator on your local network and monitor the traffic using a packet capture tool such as Wireshark to find the source of the problem.</p>	"
