thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
41716760,41716760,null,1,2,Wed Jan 18 10:21:00 EST 2017,4427684,"<p>I've got an IoT Hub in <strong>Azure</strong> that I send messages to from my Raspberry Pi. 	A Web Application and an Azure function receives these messages, and it works great while doing it one by one.</p>		<p><strong>The problem</strong> is that when I try to receive messages with the Web Application and the Azure function at the same time, I get an exception in the Web Application that says that the Epoch Value of another receiver is 12. The other receiver in this case is my Azure Function. </p>		<p>I followed this <a href="https://blogs.msdn.microsoft.com/gyan/2014/09/02/event-hubs-receiver-epoch/" rel="nofollow noreferrer">link</a> and as I understood I will have to set the Epoch value of my Azure Function to 0, to enable multiple receivers from the same IoT Hub. </p>		<p>My question is how do I set the Epoch value of an <strong>Azure Function Event Hub Trigger</strong>? Or is there any other solution to this?</p>	"
41716760,70629883,41716760,3,1,Wed Jan 18 11:00:00 EST 2017,6659347,"Did you try using different consumer groups, one for your Web Application and one for your Azure function?"
41716760,70630447,41716760,3,0,Wed Jan 18 11:14:00 EST 2017,4427684,"Ah, that solved it! Thanks alot!"
41716760,70631225,41716760,3,0,Wed Jan 18 11:35:00 EST 2017,6659347,"No problem, I've posted it as answer so the question will be marked as resolved"
41716760,41718383,41716760,2,5,Wed Jan 18 11:34:00 EST 2017,6659347,"<p>If you have several consuming applications with independent views, you can use Azure IoT Hub consumer groups. They enable multiple consuming applications to each have a separate view of the event stream, and to read the stream independently.</p>	"
