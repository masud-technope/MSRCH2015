thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43675519,43675519,null,1,5,Fri Apr 28 08:26:00 EDT 2017,1163355,"<p>I'm trying to build an IoT + data analytics system and I'm having trouble deciding on what technology or service to use for ingestion.</p>		<p>A high level description of the end goal is:</p>		<ol>	<li>IoT devices push data to an IoT gateway (using Zigbee, Z-wave, Bluetooth, etc)</li>	<li>IoT gateway (which is connected to the internet) pushes data to a pub/sub system</li>	<li>Backend services process the data coming out of the pub/sub system, updates dashboards and sends out alerts</li>	</ol>		<p>My question is what kind of pubsub system should we use if we only need ~10 second response time? (E.g. The following is acceptable: IoT device senses event and then about 10 seconds later it shows up on a user's dashboard or sets off an alert)</p>		<p>Below are some questions I have:</p>		<ol>	<li>I see PubNub advertised a lot for use in IoT. My understanding is that PubNub is basically a very fast pubsub system that guarantees less than 1/4 second delivery- is this a correct understanding of it? But PubNub is a bit expensive compared to using Google's Pub/Sub or maintaining our own Kafka.</li>	<li>Is Google Pub/Sub in a sense similar to PubNub, because unlike being a single self-managed Kafka cluster running in a single data center, Google Pub/Sub has its own network because it's a part of Google? (similar to how PubNub is a "data-streams-network"?)</li>	<li>If I use Kafka, should the producer be in the gateway devices?		<ol>	<li>If the producer isn't in the gateway devices, then should the Kafka producers be on our servers and have a REST API to accept messages from the gateway devices?</li>	<li>If the Kafka producer IS in the gateway devices, does there need to be anything special in front of the Kafka brokers for them to accept messages from the gateway devices?</li>	</ol></li>	<li>PubNub can be used to send commands back to the IoT devices. Can this also be done with Google Pub/Sub or Kafka?		<ol>	<li>To push commands out to the IoT devices With Kafka, would every Gateway device need a consumer that is waiting for messages from the topics it's subscribed to? (e.g. the commands)</li>	</ol></li>	</ol>		<p>Also, not sure if it's worth mentioning, but currently, the team is just me and maybe 2 other full stack developers. We've read up on Kafka and Zookeeper but none of us have gone past rolling out a tutorial example of it.</p>	"
43675519,74414718,43675519,3,1,Fri Apr 28 15:57:00 EDT 2017,6650102,"It might be better to break your list of questions into (at least) 4 different questions so that each point can be addressed separately. Since software/library recommendations are also not well received on Stack Overflow, you might want to take a look around the [IoT site](https://iot.stackexchange.com/) or [Software Recommendations](https://softwarerecs.stackexchange.com/questions) (although Software Recs can't handle your conceptual questions, just the recommendation aspect)."
43675519,43680622,43675519,2,5,Fri Apr 28 12:47:00 EDT 2017,1375512,"<p>All great questions. (Full disclosure I work for PubNub) </p>		<p>PubNub is way more then just pub/sub (I will get to that later on). First PubNub was built as a global distributed network for a reason - so we could provide low-latency connectivity for all devices around the world through local Points of Presence.  Because of this distributed architecture your devices will always connect to the POP closest to them and because we replicate messages globally, if a server or node goes down you will automatically be reconnected to the next closest node with no message lose.  Because of this, PubNub provides 99.999% uptime SLA's to all customers.</p>		<p>When it comes to build vs. buy decision, I can tell you that many of our customers started by thinking they could build it themselves but quickly realized the undertaking was way more than they expected - <a href="http://www.networkworld.com/article/3105352/internet-of-things/build-buy-or-rent-your-iot-communications-stack.html" rel="nofollow noreferrer">read more here</a>.  Building and maintaining the client libraries, scaling the backend, 24-7 monitoring, and security are all things that you would need to have in-house expertise. If you take into consideration the upfront development costs, on-going maintenance - vs. downloading an SDK today, start coding today so you can get to market faster with a known scalable solution. </p>		<p>PubNub is priced based on transactions, so depending on how many devices and the level of traffic, I would bet the total cost would still be less than one full time employee. And for that you get to choose from over 70+ client SDK's, tap into a proven scalable architecture, take advantage of the security features already built in, have a full team ready and waiting to help 24/7, so you can focus on innovation and not infrastructure. </p>		<p>PubNub is way more then just Pub/Sub. PubNub provides not only real-time messaging, but also state management and serverless compute via their <a href="https://www.pubnub.com/products/blocks/" rel="nofollow noreferrer">programmable network</a>. PubNub allows you to write and deploy functions in the network, in fact there are already 30+ prebuilt functions available in the <a href="https://www.pubnub.com/blocks-catalog/" rel="nofollow noreferrer">PubNub BLOCKS Catalog</a> that allow you to send SMS, emails, and more, when data changes.  </p>		<p>PubNub has also created an open source project for building real-time dashboards called <a href="https://www.pubnub.com/developers/eon/" rel="nofollow noreferrer">Project EON</a>. This makes it super easy to provide real-time visualization for all of your device data.</p>		<p>You are also correct in stating that PubNub can be used for <a href="https://www.pubnub.com/solutions/remote-control/" rel="nofollow noreferrer">remote device control</a>. And is being used today for just that by Insteon, Logitech, Samsung, Wink and many more.  </p>		<p>If you have any additional questions, PubNub has an amazing support staff available 24/7 - support@pubnub.com or click chat on the website.</p>	"
43675519,43691374,43675519,2,4,Sat Apr 29 03:02:00 EDT 2017,4950528,"<p>I would recommend option 3.1 since I personally know it is proven in production for many IoT use cases including one which involves over 20 Million devices. Confluent Kafka REST Proxy is open source and makes a great way to convert REST/HTTP(s) from the gateways over the internet (using firewall and load balancer friendly HTTPS protocol) into a Kafka REST Proxy in the cloud/datacenter and then into Kafka and all the back end dashboard tools that all support Kafka very well. Even IBM uses this architecture for their IoT infrastructure on Bluemix MessageHub. If REST is not to your liking then there are MQTT, CoAP, websockset, AMQP, XMPP and many other Kafka Connectors to chose from.</p>	"
