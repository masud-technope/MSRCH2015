thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
51594788,51594788,null,1,1,Mon Jul 30 13:12:00 EDT 2018,10155327,"<p>I'm trying to create a listener in python that automatically retrieve events from devices in Watson-IoT as they occur. When an event occurs I want to call a specific function.</p>		<p>I have read through the documentation and the API-specifications but couldn't find anything.</p>		<p>Is there a way to do this?</p>	"
51594788,90155355,51594788,3,0,Mon Jul 30 13:14:00 EDT 2018,8625952,"I have the same problem, tried it a year ago and couldn't really find a solution, but really need this."
51594788,51595155,51594788,2,2,Mon Jul 30 13:32:00 EDT 2018,3818286,"<p>See the Python client library: <a href="https://github.com/ibm-watson-iot/iot-python" rel="nofollow noreferrer">https://github.com/ibm-watson-iot/iot-python</a></p>		<p>This specific sample should prove very helpful, you can run it without modification and see a function being called in response to events &amp; commands: <a href="https://github.com/ibm-watson-iot/iot-python/tree/master/samples/simpleApp" rel="nofollow noreferrer">https://github.com/ibm-watson-iot/iot-python/tree/master/samples/simpleApp</a></p>		<p>The most relavent parts to the sample are: </p>		<ol>	<li><p>The <a href="https://github.com/ibm-watson-iot/iot-python/blob/master/samples/simpleApp/simpleApp.py#L42" rel="nofollow noreferrer">creation of the callback handler</a> - when an event is received, this function will be called allowing you to take action for that event:</p>		<pre><code>def myEventCallback(event):	    print("%-33s%-30s%s" % (event.timestamp.isoformat(), event.device, event.event + ": " + json.dumps(event.data)))	</code></pre></li>	<li><p>The <a href="https://github.com/ibm-watson-iot/iot-python/blob/master/samples/simpleApp/simpleApp.py#L144" rel="nofollow noreferrer">registration of the callback handler</a> in the client, which directs the client to invoke your method for all incoming events: </p>		<pre><code>client.deviceEventCallback = myEventCallback	</code></pre></li>	<li><p>The <a href="https://github.com/ibm-watson-iot/iot-python/blob/master/samples/simpleApp/simpleApp.py#L148" rel="nofollow noreferrer">subscription to events</a>, you can scope the subscription to avoid processing unnecessary events, or use the defaults to subscribe to all events from all devices: </p>		<pre><code>eventsMid = client.subscribeToDeviceEvents(deviceType, deviceId, event)	</code></pre></li>	</ol>	"
