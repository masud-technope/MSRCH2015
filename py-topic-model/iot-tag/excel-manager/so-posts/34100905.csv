thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
34100905,34100905,null,1,0,Sat Dec 05 03:25:00 EST 2015,5641744,"<p>For an IOT project that I'm currently working on, I'm trying to use and rfid sensor with a particle photon in order to read rfid tags. In my doe, I get an error from the compiler that reads:</p>		<pre><code>SeeedRFID.h:88:34: error: ISO C++ forbids declaration of 'init' with no type [-fpermissive]	     init(int rxPin, int txPin);		SeeedRFID.cpp:55:37: error: ISO C++ forbids declaration of 'init' with no type [-fpermissive]	SeeedRFID::init(int rxPin, int txPin)		SeeedRFID.cpp: In member function 'int SeeedRFID::init(int, int)':	SeeedRFID.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]	</code></pre>		<p>}</p>		<p>To be more specific, I'm using the c++/java particle build ide to develop this code for my particle photon chip. and this combines 3 files (.ino, .cpp, and .h). I denoted what lines of code are cause ing an error with the comment "//This is where I seem to be getting part of the error" My files look like this:</p>		<p><strong>RFID_UART.ino</strong></p>		<pre><code>#if defined (SPARK)	#include "SeeedRFID.h"	#else	#include &lt;SoftwareSerial.h&gt;	#include &lt;SeeedRFID.h&gt;	#endif		#define RFID_RX_PIN RX	#define RFID_TX_PIN TX		// #define DEBUGRFID	#define TEST		SeeedRFID RFID;	RFIDdata tag;		void setup() {	    RFID.init(RFID_RX_PIN, RFID_TX_PIN); //This is where I seem to be getting part of the error	    Serial1.begin(9600);    //Done here to prevent SeeedRFID constructor system crash	    //Serial is basically the same thing as System.out.println(); 	    Serial.begin(57600);	    Serial.println("Hello, double bk!"); //This is so I know that setup() works	}	void loop() { 	    if(RFID.isAvailable()){	        tag = RFID.data();	        Serial.print("RFID card number: ");	        Serial.println(RFID.cardNumber());	#ifdef TEST	    Serial.print("RFID raw data: ");	    for(int i=0; i&lt;tag.dataLen; i++){	        Serial.print(tag.raw[i], HEX);	        Serial.print('\t');	        }	#endif	    }	}	</code></pre>		<p><strong>SeeedRFID.cpp</strong></p>		<pre><code>#include "SeeedRFID.h"		SeeedRFID::init(int rxPin, int txPin)//This is where I seem to be getting part of the error	{	#if (PLATFORM_ID == 0) || (PLATFORM_ID == 6)    //Core or Photon (they're both the same platform essentially)	   _rfidIO = &amp;Serial1;      // Select Serial1 or Serial2	#else	   _rfidIO = new SoftwareSerial(rxPin, txPin);	   _rfidIO-&gt;begin(9600);	#endif	   // init RFID data	   _data.dataLen = 0;	   _data.chk = 0;	   _data.valid = false;		   _isAvailable = false;	_type = RFID_UART;	}		SeeedRFID::SeeedRFID() //Empty constructor	{	}		boolean SeeedRFID::checkBitValidationUART()	{	    if( (5 == _data.dataLen) &amp;&amp; (_data.raw[4] == _data.raw[0]^_data.raw[1]^_data.raw[2]^_data.raw[3]))	    {	    _data.valid = _isAvailable = true;	    return true;	    } else	    {	    _data.valid = _isAvailable = false;	    return false;	    }	}		boolean SeeedRFID::read()	{	    _isAvailable = false;		    if (_data.dataLen != 0)	    {	        _data.dataLen = 0;	    }		    while (_rfidIO-&gt;available())	    {	        _data.raw[_data.dataLen++] = _rfidIO-&gt;read();	#ifdef DEBUGRFID	    Serial.println("SeeedRFID:read() function, and the RFID raw data: ");	    for (int i = 0; i &lt; _data.dataLen; ++i)	    {	        Serial.println();	        Serial.print(_data.raw[i], HEX);	        Serial.print('\t');	    }	    Serial.println();	#endif	        delay(10);	    }		    return SeeedRFID::checkBitValidationUART();	}		boolean SeeedRFID::isAvailable()	{	    switch(_type){	        case RFID_UART:	            return SeeedRFID::read();	            break;	        case RFID_WIEGAND:	            return false;	            break;	        default:	            return false;	            break;	    }	}		RFIDdata SeeedRFID::data()	{	    if (_data.valid)	    {	        return _data;	    }else{	        // empty data	        RFIDdata _tag;	        return _tag;	    }	}		unsigned long SeeedRFID::cardNumber()	{	    // unsigned long myZero = 255;		    unsigned long sum = 0;	    if(0 != _data.raw[0]){	        // _data.raw[0] =   _data.raw[0] &amp; myZero;	        sum = sum + _data.raw[0];	        sum = sum&lt;&lt;24;	    }	    // _data.raw[1] =   _data.raw[1] &amp; myZero;	    sum = sum + _data.raw[1];	    sum = sum&lt;&lt;16;		    unsigned long sum2 = 0;	    // _data.raw[2] =   _data.raw[2] &amp; myZero;	    sum2 = sum2  + _data.raw[2];	    sum2 = sum2 &lt;&lt;8;	    // _data.raw[3] =   _data.raw[3] &amp; myZero;	    sum2 = sum2  + _data.raw[3];		    sum = sum + sum2;		#ifdef DEBUGRFID	    Serial.print("cardNumber(HEX): ");	    Serial.println(sum, HEX);	    Serial.print("cardNumber: ");	    Serial.println(sum);	#endif		    return sum;	}	</code></pre>		<p><strong>SeeedRFID.h</strong></p>		<pre><code>#ifndef SeeedRFID_H	#define SeeedRFID_H			#include "application.h"		struct RFIDdata	{	    int dataLen;	    byte chk;	    boolean valid;	    unsigned char raw[5];	};		enum RFIDType	{ 	    RFID_UART,	    RFID_WIEGAND	};		class SeeedRFID	{ 	private:	 #if (PLATFORM_ID == 0) || (PLATFORM_ID == 6)   //Core or Photon	    USARTSerial * _rfidIO; // software serial	 #else	    SoftwareSerial * _rfidIO; // software serial	 #endif	    RFIDdata _data;	    boolean _isAvailable;	    RFIDType _type;	    boolean checkBitValidationUART();	    boolean read();	public:	    SeeedRFID(int rxPin, int txPin);	    SeeedRFID();   // Empty constructor	    ~SeeedRFID();	        init(int rxPin, int txPin);//This is where I seem to be getting part of the error		    boolean isAvailable();	RFIDdata data();	unsigned long cardNumber();	};		#endif //__SeeedRFID_H__	</code></pre>		<p>I'm not quite sure if it's a deceleration issue that's happening, but if anyone can help my, that would be great. Thanks in advance!</p>		<p><strong>Follow up:</strong></p>		<p>After adding void as a valid function type in init, and adding an extra pair of parenthesis in my checkBitValidationUART() function, I get a new error that looks like this:</p>		<pre><code> ../../../build/target/user/platform-6/libuser.a(rfid_uart.o): In function `__static_initialization_and_destruction_0':	 rfid_uart.cpp:17: undefined reference to `SeeedRFID::~SeeedRFID()'	 collect2: error: ld returned 1 exit status	 make: *** [78d90e0fa4198d16c036bc7b90f2e4ec4507eca98981faccb460440188a7.elf] Error 1	</code></pre>		<p>I don't know why this error comes up, If anyone can help me debug this, that would be great!</p>	"
34100905,34100954,34100905,2,1,Sat Dec 05 03:32:00 EST 2015,1593860,"<p>The error message is telling you that the function <code>init</code> does not have a return type, and it's right.</p>	"
34100905,55957803,34100954,3,2,Sat Dec 05 09:16:00 EST 2015,2881849,"@Marshall Brown: You shoul write a sepsrate Question for this. Als try to only post the relevant parts of the code (ideally provide an [mcve](http://stackoverflow.com/help/mcve)"
34100905,55953873,34100954,3,0,Sat Dec 05 03:35:00 EST 2015,5632890,"So then the compiler tries to add `int` as the return type and fails since there is no return statement, if I understand the errors correctly?"
34100905,55953900,34100954,3,0,Sat Dec 05 03:38:00 EST 2015,5641744,"Thanks for your response. With what you mentioned in mind, how do you think I should change my function?"
34100905,55953995,34100954,3,0,Sat Dec 05 03:48:00 EST 2015,5632890,"Adding `void` as a return type to your init function in both SeeedRFID.cpp and SeeedRFID.h should do the trick, if I get the error messages correctly."
34100905,55954175,34100954,3,0,Sat Dec 05 04:05:00 EST 2015,5641744,"I added void as a return type, but I got a completely new compilation error. Notice the follow up above please."
34100905,55963260,34100954,3,0,Sat Dec 05 14:28:00 EST 2015,5641744,"@MikeMBThanks for the feedback. The thing is, I don't know where in my code this error is pointing to. But you're right, I'll try to make another question for this."
