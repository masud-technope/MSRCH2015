thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40969936,40969936,null,1,1,Mon Dec 05 08:25:00 EST 2016,7250912,"<p>I want to create a headless app for a Raspberry Pi that involves reading data from a serial port.</p>		<p>The sample app from Microsoft works fine, except that it has a user interface.</p>		<p>When creating the headless app, I took all relevant parts over as follows:</p>		<pre><code>var aqs = SerialDevice.GetDeviceSelector();		var dis = await DeviceInformation.FindAllAsync(aqs);		foreach (var t in dis)	{	    if (t.Id.Contains("FTDI"))	    {	        listOfDevices.Add(t);		    }		}		if (listOfDevices.Count == 1)	{	    DeviceInformation entry = listOfDevices[0];		    try	    {	        serialPort = await SerialDevice.FromIdAsync(entry.Id);	        serialPort.WriteTimeout = TimeSpan.FromMilliseconds(1000);	        serialPort.ReadTimeout = TimeSpan.FromMilliseconds(1000);	        serialPort.BaudRate = 9600;	        serialPort.Parity = SerialParity.None;	        serialPort.StopBits = SerialStopBitCount.One;	        serialPort.DataBits = 8;	        serialPort.Handshake = SerialHandshake.None;		        ...	</code></pre>		<p>There is one USB-FTDI-cable, where the ID contains "FTDI" as follows:</p>		<pre><code>serialPort = await SerialDevice.FromIdAsync(entry.Id);	</code></pre>		<p>The program reaches this line before the instance of the program disappears and ignores my breakpoint.</p>		<p>Any ideas?</p>	"
40969936,40987260,40969936,2,0,Tue Dec 06 03:18:00 EST 2016,6601582,"<p>I use your code and add the following lines in Package.appxmanifest.</p>		<pre><code>&lt;DeviceCapability Name="serialcommunication"&gt;	  &lt;Device Id="any"&gt;	    &lt;Function Type="name:serialPort" /&gt;	  &lt;/Device&gt;	&lt;/DeviceCapability&gt;	</code></pre>		<p>It works for me.</p>		<p><strong>Update:</strong></p>		<p>Based on your project(that you sent to me), because your ListAvailablePorts() is an asynchronous operation, you need to <a href="https://msdn.microsoft.com/library/windows/apps/hh700507" rel="nofollow noreferrer">use the GetDeferral method to get a background task deferral to keep the host process from being suspended or terminated before the asynchronous operation complete</a>. You can edit your code like this:</p>		<pre><code>    BackgroundTaskDeferral _deferral = null;	    public async void Run(IBackgroundTaskInstance taskInstance)	    {	        _deferral = taskInstance.GetDeferral();	        // 	        // TODO: Insert code to start one or more asynchronous methods 	        //	        try	        {	            //var u = new USART();	            //await u.Initialize(115200, SerialParity.None, SerialStopBitCount.One, 8);	            listOfDevices = new ObservableCollection&lt;DeviceInformation&gt;();	            ListAvailablePorts();	        }		        ...	    }	</code></pre>		<p>And call <code>_deferral.Complete()</code> when the asynchronous operation is finished.</p>	"
40969936,69293178,40987260,3,0,Thu Dec 08 15:20:00 EST 2016,7250912,"Rita, wanted to send you the project..		using System;	using System.Collections.ObjectModel;	using System.Globalization;	using System.Threading;	using System.Threading.Tasks;	using Windows.ApplicationModel.Background;	using Windows.Devices.Enumeration;	..		now only 320 Chars left :)	Isn`t there something like a private message?"
40969936,69396139,40987260,3,0,Mon Dec 12 07:16:00 EST 2016,6601582,"@Axel I tested your project and updated my answer. Please check it. If there is any concern, feel free to let me know."
40969936,69247230,40987260,3,0,Wed Dec 07 14:31:00 EST 2016,7250912,"How can I send it to you?"
40969936,69197005,40987260,3,0,Tue Dec 06 11:30:00 EST 2016,7250912,"Hi Rita, I had the devicecapabilities in already:		<Capabilities>			<DeviceCapability Name="serialcommunication">				<Device Id="any">					<Function Type="name:serialPort" />				</Device>			</DeviceCapability>		</Capabilities>	but no result."
40969936,69680583,40987260,3,0,Tue Dec 20 10:50:00 EST 2016,7250912,"Hi Rita,thanks for the solution. That is the answer!"
40969936,69224223,40987260,3,0,Wed Dec 07 01:35:00 EST 2016,6601582,"@Axel Do you mind showing the complete code?"
40969936,69268322,40987260,3,0,Thu Dec 08 01:38:00 EST 2016,6601582,"@Axel You can edit you question and paste code in it."
