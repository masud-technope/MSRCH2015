thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
45031974,45031974,null,1,0,Tue Jul 11 10:29:00 EDT 2017,null,"<p>I am trying to communicate between two ESP8266 12 E modules, one is set up in access point mode and the other as a station. My aim is to establish communication between the two.</p>		<ol>	<li>How can I make the data transfer faster?</li>	<li>Is this what is called TCP/IP connection?</li>	</ol>		<p>The code for the access point:</p>		<pre><code>#include &lt;ESP8266WiFi.h&gt;	#include &lt;ESP8266WebServer.h&gt;	#include &lt;WiFiClient.h&gt;	WiFiServer server(80);		void setup() {	  WiFi.mode(WIFI_AP);	  WiFi.softAP("esp", "lol123");	  server.begin();	  Serial.begin(9600);	  IPAddress IP = WiFi.softAPIP();	  //Serial.flush();	  Serial.println();	  Serial.print("Server IP is: ");	  Serial.println(IP);		}		void loop() {	  char ID, R, G, B, anim_ID;	  WiFiClient client = server.available();				  int data_outgoing[5] = {10, 128, 128, 123, 123};	  int mapFun[5];	  Serial.print("Sent data: ");	  Serial.print(ESP.getChipId());	  Serial.println();	  for(int i = 0; i &lt; 5; i++){	    mapFun[i] =data_outgoing[i];	    //mapFun[i] = map(mapFun[i], 0, 255, 0, 128); 	    client.print(mapFun[i]);	    Serial.print(mapFun[i]);		  }		delay(10);	}	</code></pre>		<p>and for the receiving end, the station.</p>		<pre><code>const char* ssid = "esp";	const char* password = "lol123";	const char* host = "192.168.4.1";	WiFiServer server(80);		void setup(){	  int count = 0;	  Serial.begin(9600);	  delay(10);	  //Serial.println();	  //Serial.println();	  //Serial.print("Connecting to: ");	  //Serial.print(ssid);	  //Serial.println();	  WiFi.mode(WIFI_STA);	  WiFi.begin(ssid, password);		  //Serial.println("Connecting");		  while(WiFi.status() != WL_CONNECTED){	    delay(1000);	    Serial.print(".");	    count++;	  }		  Serial.println("");	  Serial.println("WiFi connected");	  Serial.print("Time for connection(s): ");	  Serial.print(count);	  Serial.println();	  Serial.println("IP address: ");	  Serial.print(WiFi.localIP());	  Serial.println();	}		void loop(){	 WiFiClient client;		 if((client.connect(host, 80))){	//  Serial.println("Connected");	//  Serial.print(host);	//  Serial.println();		}		String data;	data = client.readStringUntil('\n');	  //Serial.println(data);		 for(int i = 0; i&lt; 100; i++){	    Serial.write(data[i]);	    Serial.print(data[i]);	 }	}	</code></pre>		<p>The problem with this set up is the data is transferred at a good speed, but while receiving the data is very slow. It takes quite a while to receive the data at the station side, what can be done to make this process faster, are there any other protocols to use to make this faster? 	The output is like this..</p>		<pre><code>WiFi connected	Time for connection(s): 3	IP address: 	192.168.4.2	10128128123123	</code></pre>		<p>The long length of data is the string I received, how do i convert it into integers? I tried ATOI but failed.</p>		<p>I'm kinda new to networking, any suggestion much appreciated.</p>	"
45031974,77037855,45031974,3,1,Tue Jul 11 10:37:00 EDT 2017,5092206,"you are receiving what you have sent.10,128,128,123,123"
45031974,77037961,45031974,3,0,Tue Jul 11 10:40:00 EDT 2017,null,"@ShanilFernando but the data is received with a lot of latency of about 1 second.. can this be faster?"
45031974,77045600,45031974,3,0,Tue Jul 11 13:25:00 EDT 2017,794749,"`client.readStringUntil('\n')` reads until there is a newline character or there is no data for 1 sec. And you are not sending any newline characters. You are not even sending a string, just random bytes."
45031974,45032664,45031974,2,1,Tue Jul 11 11:00:00 EDT 2017,5092206,"<p>Try following.</p>		<p>Server loop </p>		<pre><code>void loop() {	  // listen for incoming clients	  WiFiClient client = server.available();	  if (client) {	    Serial.println("new client");	    if (client.connected()) {	      if (client.available()) {		        int data_outgoing[5] = {10, 128, 128, 123, 123};	    for(int i = 0; i &lt; 5; i++){	    client.print(data_outgoing[i]);		    //Edit	    client.print('\n');		  }		     }	    }		    // close the connection:	    client.stop();	    Serial.println("client disonnected");	  }	}	</code></pre>		<p>Client loop</p>		<pre><code>void loop(){	 WiFiClient client;			WiFiClient client = client.connect(host, 80);		while (client.connected()) {             	        char c = client.read();     	       Serial.print(c);	}		}	</code></pre>	"
45031974,77040186,45032664,3,0,Tue Jul 11 11:32:00 EDT 2017,null,"Taking out client.available() helped. The data TX rate is way too fast now."
45031974,77040315,45032664,3,0,Tue Jul 11 11:35:00 EDT 2017,5092206,"Ohh sorry, I forgot to remove `client.available()` from the client. anyway, glad i could help you out."
45031974,77040788,45032664,3,0,Tue Jul 11 11:46:00 EDT 2017,5092206,"@PrathikGurudatt Please accept it as correct answer if it solves your problem. If you have more questions,please comment here. I'm more than happy to help you."
45031974,77040936,45032664,3,0,Tue Jul 11 11:50:00 EDT 2017,null,"Is it also possible to replace the array with a serial input? I am generating an array from a python code which serially transmits to the AP."
45031974,77041444,45032664,3,0,Tue Jul 11 12:02:00 EDT 2017,5092206,"Yes you can. just replace the array with a function to get data from python or any other source and replace `for` loop with `while` loop. So that data will be transmitted as long as outside source sends the data and finally it will close the client connection."
45031974,77039518,45032664,3,0,Tue Jul 11 11:17:00 EDT 2017,null,"I don't receive anything on the serial monitor on the station's side. Should it be read until  line ending?"
45031974,77075936,45032664,3,0,Wed Jul 12 07:35:00 EDT 2017,null,"Well it kinda makes sense, but it didn't respond with it. but did after commenting. Do you know what could be the reason?"
45031974,77076064,45032664,3,0,Wed Jul 12 07:38:00 EDT 2017,5092206,"Try again with `if (client.available())` check"
45031974,77045690,45032664,3,0,Tue Jul 11 13:27:00 EDT 2017,794749,"This is wrong. Without checking for `client.available()`, `client.read()` just returns -1, if there is nothing in the receiving buffer."
45031974,77046342,45032664,3,0,Tue Jul 11 13:40:00 EDT 2017,null,"But isn't it checking for connection already?"
45031974,77046521,45032664,3,0,Tue Jul 11 13:44:00 EDT 2017,5092206,"if `client.read()` return -1 as @gre_gor said, just put a if condition. It is a simple thing to check."
45031974,77046916,45032664,3,0,Tue Jul 11 13:51:00 EDT 2017,794749,"@PrathikGurudatt An established connection and data availability aren't the same thing."
45031974,49137035,45031974,2,0,Tue Mar 06 17:49:00 EST 2018,6854727,"<p>The code in the original post won't establish a network unless the password length is at least 8 characters.  Using "lol12345" will work.  Hope it helps - this missed detail cost me 4 days.  It could be a manefestation of my IDE version (arduino 1.8.1).</p>	"
