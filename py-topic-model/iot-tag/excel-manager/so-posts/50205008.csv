thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
50205008,50205008,null,1,0,Sun May 06 22:12:00 EDT 2018,303161,"<p>I need to store signals coming from million devices every 1 minute, where each signal object has 4 attributes plus the timestamp:</p>		<ul>	<li>Device ID, always the same</li>	<li>Attr1, always the same (device model)</li>	<li>Attr2, changes every 6 months aprox. (device fixed location)</li>	<li>Attr3, changes every 2-4 weeks (device firmware version)</li>	</ul>		<p>With the collected data I need to get some reports, like "How many devices with attr2 checked in last month". The restriction here is that I may need to filter and group by any attribute, and not only the device ID.</p>		<p>My first approach was to have a model with nested records in bigquery, but I'm not sure this would be the best solution.</p>		<p>Which database and schema would you recommend me to solve this problem? </p>		<p>Thank you!</p>	"
50205008,87555241,50205008,3,0,Thu May 10 08:40:00 EDT 2018,4636126,"Does it have to be BigQuery? Why not utilize a TSDB that can store time-series data and meta-data separately so you choose the best compression/schema for each type of attributes."
50205008,87484581,50205008,3,0,Tue May 08 12:26:00 EDT 2018,2318649,"Thatâ€™s an awful lot of data. What device message value changes so frequently that you need reports every minute? Or are you trying to detect device absence/failure within a minute or two? If the last, maybe your device transmits every minute but you only need to store something in the database when something changes, which from what you have described will be more like one reading every two weeks."
50205008,50205524,50205008,2,1,Sun May 06 23:51:00 EDT 2018,5239549,"<p>Interesting problem - BigQuery can digest with this speed (limit is 100K records pre seconds per project) - but it looks like DeviceId is your key so it make sense expose it as non-nested column - in this case - no nested columns - high price for storage but very effective queries. As alternative you can use Attr1, Attr2, Attr3 as key columns and list of deviceId as nested column - will be most effective from storage perspective - but can be not very good from analytics query perspective.</p>		<p>Another options for you to store only changes (or daily/hourly aggregates) (so it is not important for you to know that specific device report at 10:01, 10:02, 10:03 and you fine with say to know that device reported on 5-May-2018 (or at least at hour 10 of 5-May-2018)	In this case you can implement some in memory solution (e.g. appengine) that will wait for change of status of device and only in this case stream data to BigQuery</p>	"
50205008,87453416,50205524,3,0,Mon May 07 16:00:00 EDT 2018,303161,"The idea to have a "controlled buffer" to store aggregated data is what I'm currently designing to solve the problem. However I wasn't sure if this approach is the best, given all the different technologies for bigdata available nowadays."
50205008,87454981,50205524,3,0,Mon May 07 16:53:00 EDT 2018,5239549,"And I think if you not interested to store every single heartbeat from each device - going with controlled buffer would be most cost effective approach"
