thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33249731,33249731,null,1,2,Wed Oct 21 02:01:00 EDT 2015,2702318,"<p>Hi we have an IOT project that has a running website + android app , that is made on Node.js server and uses the HTTP protocol with REST API's to communicate with embedded device CC3200 from Texas Instruments .</p>		<p>The project controls heating beds by sending messages from web or mobile to CC3200 which is our control box that sends the commands to the heating beds . </p>		<p>Problems :</p>		<ol>	<li>We require port-forwarding on certain ports  , we need to get rid of it</li>	<li>CC3200 when post changes to the web , changes cannot be seen unless the page is refreshed .</li>	</ol>		<p>I researched and found that there are two possible solutions , either to use IO.js or switch to MQTT . But at this final stage of the project both the solutions seem like starting from a beginning .</p>		<p>Any help on this will be appreciated . </p>		<p>PS: Port-forwarding is more of a big issue</p>	"
33249731,33348717,33249731,2,0,Mon Oct 26 14:50:00 EDT 2015,1175633,"<p>Most solutions typically relies on a long-lasting connection initiated by  the embedded device to the outside server in order to get rid of port forwarding issues. As you cited it, <code>MQTT</code> allows you to do just that, but so does Long-polling <code>HTTP</code>, or even <code>Websockets</code>.</p>		<p>Using one of the above does not necessarily mean starting from the beginning, but certainly requires some additional work to get this logic implemented on the embedded device on the first hand, and setup a publicly available <em>secure</em> message broker (e.g <code>MQTT</code>) on the other.</p>		<p>Another solution, would be to use <a href="https://en.wikipedia.org/wiki/Internet_Gateway_Device_Protocol" rel="nofollow">UPnP IGD</a> to dynamically add port-forwarding entries on the home gateway (if it is supported), or use <a href="https://en.wikipedia.org/wiki/STUN" rel="nofollow">STUN techniques</a>. Note however that this solution will expose the device to the outside world, publicly, so you might want to pay attention to the security aspects this implies.</p>		<p><strong>See also :</strong></p>		<ul>	<li><a href="https://en.wikipedia.org/wiki/UDP_hole_punching" rel="nofollow">UDP Hole Punching</a></li>	<li><a href="http://www.eyeball.com/standards/stun-turn-ice/" rel="nofollow">STUN, TURN &amp; ICE for NAT Traversal</a></li>	</ul>	"
