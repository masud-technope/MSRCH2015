thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44634222,44634222,null,1,2,Mon Jun 19 15:14:00 EDT 2017,1529150,"<p>For an IoT project, we need to send messages from mobile application (iOS and Android) to Azure IoT Hub. We were able to do it connecting as a device using MQTT library. However, the device simulator too connect as a device and since both uses same device ID, the existing connection is dropped when both connect to IoT Hub at the same time.</p>		<p>We realized we need to connect mobile apps as a service (not as a device) and for that some research shows we need to use following library.</p>		<p><a href="https://github.com/Azure/azure-iot-sdk-java" rel="nofollow noreferrer">https://github.com/Azure/azure-iot-sdk-java</a></p>		<p><a href="https://github.com/Azure/azure-iot-sdk-java/blob/master/service/iot-service-samples/service-client-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/ServiceClientSample.java" rel="nofollow noreferrer">https://github.com/Azure/azure-iot-sdk-java/blob/master/service/iot-service-samples/service-client-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/ServiceClientSample.java</a></p>		<p>However, this java sample uses lot of java specific implementations and which are not supported by Android.</p>		<p>Has anyone faced the same problem?</p>		<ol>	<li>Which library can we use to achieve above from Android mobile application?</li>	<li>Which library can we use to achieve above from iOS mobile application?</li>	</ol>		<p>Please let me know if any alternate solution is available.</p>	"
44634222,76300755,44634222,3,0,Tue Jun 20 15:52:00 EDT 2017,2932840,"We are working at Android support for our Java service SDK for IoT Hub and you should see progress in the coming month in the repo https://github.com/Azure/azure-iot-sdk-java"
44634222,44636885,44634222,2,4,Mon Jun 19 17:47:00 EDT 2017,8084828,"<p>You can use a <a href="https://docs.microsoft.com/en-us/rest/api/iothub/httpruntime#HttpRuntime_SendDeviceEvent" rel="nofollow noreferrer">REST API</a> for sending a D2C message to the Azure IoT Hub. The following screen snippet shows an example of this call. Note, that no library is required for this request.</p>		<p><a href="https://i.stack.imgur.com/jsQC3.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/jsQC3.png" alt="Send D2C Message"></a></p>		<ul>	<li>another solution for your scenario is to use an Azure Function as a pre-processor to the Azure IoT Hub, see the following example:</li>	</ul>		<p><a href="https://i.stack.imgur.com/E6TQc.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/E6TQc.png" alt="AzureFunction"></a></p>		<p>Thanks	Roman</p>	"
44634222,76302253,44636885,3,0,Tue Jun 20 16:30:00 EDT 2017,1529150,"Thanks, liked the second option."
44634222,44644816,44634222,2,1,Tue Jun 20 05:52:00 EDT 2017,4989676,"<p>Just as additional content about another solution for your scenario. Based on my understanding and per my experience, I think you can try to create an App service, such as Mobile App for using Custom API at the side of <a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-android-how-to-use-client-library#a-namecustom-apiacall-a-custom-api" rel="nofollow noreferrer">client</a> &amp; <a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-node-backend-how-to-use-server-sdk#a-namecustomapia-custom-apis" rel="nofollow noreferrer">backend</a>, or WebApps, etc, to receive the payload which includes custom json properties from your Android App, and forward the payload message using Azure IoTHub SDK for NodeJS or Java to IoTHub.</p>	"
