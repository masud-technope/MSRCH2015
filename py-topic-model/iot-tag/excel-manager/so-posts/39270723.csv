thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
39270723,39270723,null,1,0,Thu Sep 01 11:47:00 EDT 2016,1986760,"<p>I need help regarding RF Receiver 433 MHz. I have RF remote with 433 MHz frequency. 	What I want to achieve is that I want to decode the signal value of RF remote using RF Receiver. I followed the RC Switch Library but I was not able to get the solution.</p>		<p>Followed tutorial Link :-	<a href="http://jubitoblog.blogspot.in/2014/06/arduino-radio-remote-control-rf.html" rel="nofollow">http://jubitoblog.blogspot.in/2014/06/arduino-radio-remote-control-rf.html</a></p>		<p>My Receiver Code :-</p>		<pre><code>#include &lt;RCSwitch.h&gt;		RCSwitch mySwitch = RCSwitch();	int txPin = 10;	String readString;		void setup(void) {	  Serial.begin(9600);		  mySwitch.enableTransmit(txPin);	  mySwitch.enableReceive(0);    	}		void loop(void) {		  if (mySwitch.available()) {	      Serial.print("Received ");	      Serial.print( mySwitch.getReceivedValue() );	      Serial.print(" / ");	      Serial.print( mySwitch.getReceivedBitlength() );	      Serial.print("bit ");	      Serial.print("Protocol: ");	      Serial.println( mySwitch.getReceivedProtocol() );		    output(mySwitch.getReceivedValue(), mySwitch.getReceivedBitlength(), mySwitch.getReceivedDelay(), mySwitch.getReceivedRawdata(),mySwitch.getReceivedProtocol());	    mySwitch.resetAvailable();	  }		  while (Serial.available())	  {	    delay(1); //delay to allow byte to arrive in input buffer	    char c = Serial.read();	    readString += c;	    readString.toLowerCase();	    readString.trim();	  }		  if (readString.length() &gt;= 24)	  {	    //mySwitch.disableReceive();	    char inBin[25];	    readString.toCharArray(inBin,25);	    mySwitch.send(inBin);	    //mySwitch.enableReceive(0, output);	  }	  readString = "";	}		void output(unsigned long decimal, unsigned int length, unsigned int delay, unsigned int* raw, unsigned int protocol) {	  if (decimal == 0) {	    Serial.print("Unknown encoding.");	  } else {	    char* b = dec2binWzerofill(decimal, length);	    Serial.println( b );		      char* c = bin2tristate(b);	      Serial.println( c );	  }	}		static char* bin2tristate(char* bin) {	  char returnValue[50];	  int pos = 0;	  int pos2 = 0;	  while (bin[pos]!='\0' &amp;&amp; bin[pos+1]!='\0') {	    if (bin[pos]=='0' &amp;&amp; bin[pos+1]=='0') {	      returnValue[pos2] = '0';	    } else if (bin[pos]=='1' &amp;&amp; bin[pos+1]=='1') {	      returnValue[pos2] = '1';	    } else if (bin[pos]=='0' &amp;&amp; bin[pos+1]=='1') {	      returnValue[pos2] = 'F';	    } else {	      return "not applicable";	    }	    pos = pos+2;	    pos2++;	  }	  returnValue[pos2] = '\0';	  return returnValue;	}		static char* dec2binWzerofill(unsigned long Dec, unsigned int bitLength) {	  static char bin[64]; 	  unsigned int i=0;		  while (Dec &gt; 0) {	    bin[32+i++] = (Dec &amp; 1 &gt; 0) ? '1' : '0';	    Dec = Dec &gt;&gt; 1;	  }		  for (unsigned int j = 0; j&lt; bitLength; j++) {	    if (j &gt;= bitLength - i) {	      bin[j] = bin[ 31 + i - (j - (bitLength - i)) ];	    }else {	      bin[j] = '0';	    }	  }	  bin[bitLength] = '\0';		  return bin;	}	</code></pre>		<p>Kindly help me to get rid-off this issue.</p>	"
