thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
51060332,51060332,null,1,1,Wed Jun 27 10:21:00 EDT 2018,1179828,"<p>When testing commands Southbound, I am currently using the NGSI v1 endpoint as shown:</p>		<pre><code>curl -X POST \	  'http://{{iot-agent}}/v1/updateContext' \	  -H 'Content-Type: application/json' \	  -H 'fiware-service: openiot' \	  -H 'fiware-servicepath: /' \	  -d '{	    "contextElements": [	        {	            "type": "Bell",	            "isPattern": "false",	            "id": "urn:ngsi-ld:Bell:001",	            "attributes": [	                {	                    "name": "ring",	                    "type": "command",	                    "value": ""	                }	            ]	        }	    ],	    "updateAction": "UPDATE"	}'	</code></pre>		<p>As you can see this is an NGSI v1 request. According to <a href="https://www.slideshare.net/fermingalan/orioncontextbroker20180615" rel="nofollow noreferrer">this presentation</a> on Slideshare (slide 16) use of NGSI v1 is <strong>discouraged</strong> - I would like to replace this with an NGSI v2 request. I believe that all IoT Agents are now NGSI v2 capable, however I have been unable to find the details of the replacement NGSI v2 request within the documentation.</p>		<p>So the question is what is the equivalent cUrl command to mimic a command from Orion using NGSI v2?</p>	"
51060332,51060489,51060332,2,1,Wed Jun 27 10:29:00 EDT 2018,1485926,"<p>In <a href="http://fiware-iot-stack.readthedocs.io/en/master/device_api/index.html#transport-protocol" rel="nofollow noreferrer">this document</a> you can see a good reference on how to send commands using the NGSIv2 API:</p>		<blockquote>	  <p>If you take a look to the previous device example, you can find that a "ping" command was defined. Any update on this attribute â€œPingâ€? at the NGSI entity in the ContextBroker will send a command to your device. For instance, to send the "Ping" command with value "Ping request" you could use the following operation in the ContextBroker API:</p>		<pre><code> PUT /v2/entities/[ENTITY_ID]/attrs/ping		 {	   "value": "Ping request",	   "type": "command"	 }	</code></pre>	  	  <p>ContextBroker API is quite flexible and allows to update an attribute in several ways. Please have a look to the <a href="http://telefonicaid.github.io/fiware-orion/api/v2/stable" rel="nofollow noreferrer">NGSIv2 specification</a> for details.</p>	  	  <p><strong>Important note:</strong> don't use operations in the NGSI API with creation semantics. Otherwise, the entity/attribute will be created locally to ContextBroker and the command will not progress to the device (and you will need to delete the created entity/attribute if you want to make it to work again). Thus, the following operations <em>must</em> not be used:</p>	  	  <ul>	  <li><code>POST /v2/entities</code></li>	  <li><code>PUT /v2/entities</code></li>	  <li><code>POST /v2/op/entites</code> with <code>actionType</code> <code>append</code>, <code>appendStrict</code> or <code>replace</code> </li>	  <li><code>POST /v1/updateContext</code> with <code>actionType</code> <code>APPEND</code>, <code>APPEND_STRICT</code> or <code>REPLACE</code></li>	  </ul>	</blockquote>		<p><strong>EDIT</strong>: all the above refers to the <em>Orion endpoint used by final client to send commands</em>. @jason-fox has clarified that question refers to the <em>IOTA endpoint that receives commands request from Orion</em> (it should have been evident by the <code>{{iot-agent}}</code>, but I missed that part sorry :)</p>		<p>The Orion-to-IOTA communication for commands is based on the registration-forwarding mechanism. Currently, Orion always uses NGSIv1 to forward updates (even in the case the client uses NGSIv2 updates). In the future, we envision the usage of NGSIv2 but in order to achieve this, first we need:</p>		<ul>	<li>To complete the Context Source Forwarding Specification, based on NGSIv2. It is currently under discussion <a href="https://github.com/Fiware/specifications/pull/2" rel="nofollow noreferrer">in this PR</a>. Feedback is welcome as comments to that PR!</li>	<li>To implement forwarding based in Context Source Forwarding Specification in Orion</li>	<li>To implement NGSIv2 endpoint compliant with Context Source Forwarding Specification in the IOTAs.</li>	</ul>		<p>While the above gets completed, the only mechanism is the current one based in NGSIv1. However, note the Orion-IOTA interaction is internal to platform component and final client could base all their interactions to the platform (in particular, to the Orion endpoint) on NGSIv2, so this is not a big issue.</p>	"
