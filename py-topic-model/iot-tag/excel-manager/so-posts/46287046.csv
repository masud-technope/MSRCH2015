thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
46287046,46287046,null,1,4,Mon Sep 18 19:44:00 EDT 2017,762956,"<p>I was wondering if anyone has the idea of the best practices on AWS IoT regarding the handling of policies, for example, we could have two different cases: </p>		<p>Case 1:	Call a lambda(identity-id as param) which creates a policy on the fly and then attach the policy to the identity id. The policy will contains hardcoded the things name like for example:</p>		<pre><code>{	  "Version": "2012-10-17",	  "Statement": [	    {	      "Effect": "Allow",	      "Action": "iot:Connect",	      "Resource": "arn:aws:iot:us-west-2:XXXX:client/hardcodedClient1"	    },	    {	      "Effect": "Allow",	      "Action": [	        "iot:Publish",	        "iot:Subscribe",	        "iot:Receive"	      ],	      "Resource": [	        "arn:aws:iot:us-west-2:XXXX:topic/$aws/things/THINGNAME1/*",	        "arn:aws:iot:us-west-2:XXXX:topicfilter/$aws/things/THINGNAME1/*"	      ]	    }	  ]	}	</code></pre>		<p>Case 2: by using policy variables like  <code>${iot:ClientId}</code>, <code>${iot:ThingName}</code>, we can attach one single policy to all the congito-identity-users;</p>		<pre><code>{	  "Version": "2012-10-17",	  "Statement": [	    {	      "Effect": "Allow",	      "Action": "iot:Connect",	      "Resource": "arn:aws:iot:us-west-2:XXXX:client/${iot:ClientId}"	    },	    {	      "Effect": "Allow",	      "Action": [	        "iot:Publish",	        "iot:Subscribe",	        "iot:Receive"	      ],	      "Resource": [	        "arn:aws:iot:us-west-2:XXXX:topic/$aws/things/${iot:Connection.Thing.ThingName}/*",	        "arn:aws:iot:us-west-2:XXXX:topicfilter/$aws/things/${iot:Connection.Thing.ThingName}/*"	      ]	    }	  ]	}	</code></pre>		<p>So, the question is. Which of then is the best practices, but also both of them are secure regarding the Cognito user only is able to interact with his own devices? </p>	"
46287046,81924426,46287046,3,0,Sat Nov 25 10:11:00 EST 2017,592641,"Did you maybe answer some of your own questions?"
46287046,46356378,46287046,2,0,Fri Sep 22 03:29:00 EDT 2017,962545,"<p>Case 2 using the policy variables is the recommended way to go.</p>		<p>It reduces the number of policies to deal with and keep them meaningful and re-usable. On bright side it will save some extra bucks and time by not using lambda and creating policy each time!</p>		<p>As far as security is concerned it has nothing to do with the policy variables in a policy, its ultimately what action policy allows or denies as policy variables gets resolved on the fly depending upon who is trying to do the operation and there after it is same as your hardcoded policy.</p>	"
46287046,88480028,46356378,3,0,Thu Jun 07 08:19:00 EDT 2018,962545,"Yes and you can control that by using a bool condition to allow principal to act only as those things to which it is attached. And you can attach principal and thing using attach-thing-principal API"
46287046,88470374,46356378,3,0,Thu Jun 07 00:15:00 EDT 2018,762956,"But the #case2 will allow any user to connect to any thing in the iot registry, correct?"
46287046,53669548,46287046,2,0,Fri Dec 07 12:27:00 EST 2018,3249355,"<p>Case 2 is better. You can also implement authentication mechanism using Cognito Federated Pool with proper IAM policy and use <code>${cognito-identity.amazonaws.com:sub}</code> variable in your IoT policy with proper permissions (just remember to attach this policy to your Cognito <code>identityId</code>). </p>		<p>If your clients connects from browser, it is better to not use <code>iot:ClientId</code> as clientId must be unique so user will not be able to open multiple browser tabs.</p>	"
