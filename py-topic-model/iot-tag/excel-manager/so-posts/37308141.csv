thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
37308141,37308141,null,1,2,Wed May 18 19:05:00 EDT 2016,6143908,"<p><strong>Windows.System.Profile</strong> is included in the Desktop and Mobile extensions for 	UWP, but alas is not included in the <strong>IoT extensions for UWP</strong>.  </p>		<p>So when a UWP app is running on an IoT device like Raspberry Pi, it cannot get a unique device id by calling HardwareIdentification.GetPackageSpecificToken.</p>		<pre><code>  if (Windows.Foundation.Metadata.ApiInformation.IsTypePresent("Windows.System.Profile.HardwareIdentification"))	  {	       var token = HardwareIdentification.GetPackageSpecificToken(null);	  }	</code></pre>		<p>Is there a way to get a <strong>unique device Id</strong> for a <strong>Raspberry Pi IoT device on UWP</strong>? </p>		<p>Thanks</p>	"
37308141,37314630,37308141,2,0,Thu May 19 05:34:00 EDT 2016,371933,"<p>You may try to use App Specific Hardware ID as described here: 	<a href="https://msdn.microsoft.com/en-us/jj553431" rel="nofollow">https://msdn.microsoft.com/en-us/jj553431</a></p>		<p>Basically, you will not get a device Id that is unique to the device itself, only an ID which makes that ID unique for your app that is running on that device. This is to prevent things like ads gathering too much information about your habits by targetting unique device ID's. </p>		<p>I'm not 100% this satisfies your question, but I hope that it is helpful :)</p>	"
37308141,62152348,37314630,3,0,Thu May 19 07:11:00 EDT 2016,6143908,"Unfortunately, to get the ASHWID you need to call HardwareIdentification.GetPackageSpecificToken, which exists within the Windows.System.Profile namespace, which is not currently included in the IoT extensions for UWP."
