thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56185596,56185596,null,1,0,Fri May 17 11:34:00 EDT 2019,5053799,"<p>I have been working on react-native-ble-plx with sensortag <strong>cc2650stk</strong> and having issues fetching accelerometer and gyro data.</p>		<pre><code>Error: Characteristic "f000aa82-0451-4000-b000-000000000000" write failed for device xxxxxx and service "f000aa80-0451-4000-b000-000000000000"	</code></pre>		<p>Things work fine for all the other sensors of the ticc2650 sensortag. like humidity,temperature,barometer etc.</p>		<pre><code>constructor() {	    super();	    this.manager = new BleManager()	    this.state = {info: "", values: {}}	    this.prefixUUID = "f000aa"	    this.suffixUUID = "-0451-4000-b000-000000000000"	    this.sensors = {	     0: "Temperature",	     8: "Accelerometer",	     2: "Humidity",	     7: "Magnetometer",	     4: "Barometer",	    // 5: "Gyroscope"	    }	  }	  serviceUUID(num) {	    return this.prefixUUID + num + "0" + this.suffixUUID	  }		  notifyUUID(num) {	    return this.prefixUUID + num + "1" + this.suffixUUID	  }		  writeUUID(num) {	    return this.prefixUUID + num + "2" + this.suffixUUID	  }	</code></pre>		<p>My sensortag Movemnet UUIDS are:</p>		<pre><code>MOVEMENT_SERVICE = 'f000aa80-0451-4000-b000-000000000000';	MOVEMENT_DATA = 'f000aa81-0451-4000-b000-000000000000';	MOVEMENT_CONFIG = 'f000aa82-0451-4000-b000-000000000000';	MOVEMENT_PERIOD = 'f000aa83-0451-4000-b000-000000000000';	MOVEMENT_NOTIFICATION = '00002902-0000-1000-8000-00805f9b34fb';	if (device.name === 'CC2650 SensorTag' || device.name === 'SensorTag') {	        this.info("Connecting to TI Sensor")	        this.manager.stopDeviceScan();	        device.connect()	          .then((device) =&gt; {	            this.info("Discovering services and characteristics")	            return device.discoverAllServicesAndCharacteristics()	          })	          .then((device) =&gt; {	            this.info("Setting notifications")	            console.log(device);	            return this.setupNotifications(device)	          })	          .then(() =&gt; {	            this.info("Listening...")	          }, (error) =&gt; {		            this.error(error.message)	          })	      }	async setupNotifications(device) {	    for (const id in this.sensors) {	      //id = 8;	      const service = this.serviceUUID(id);	      const characteristicW = this.writeUUID(id);	      const characteristicN = this.notifyUUID(id);		      const characteristic = await device.writeCharacteristicWithResponseForService(	        service, characteristicW, "AQ==" /* 0x01 in hex */	      )		      device.monitorCharacteristicForService(service, characteristicN, (error, characteristic) =&gt; {	        if (error) {		          this.error(error.message)	          return	        }	        console.log(characteristic.uuid+":::"+characteristic.value);	        this.updateValue(characteristic.uuid, characteristic.value)	      })	    }	  }	</code></pre>		<p>work fine for other sensors but not gyro and accelerometer.</p>	"
56185596,56197305,56185596,2,1,Sat May 18 08:35:00 EDT 2019,7903641,"<p>Things work fine for other sensors when we write "AQ==" / 0x01 in hex / But for movement sensor we need to add "MDE=" for 0x01 in function for notifications</p>		<pre><code>const characteristic = await device.writeCharacteristicWithResponseForService(	        service, characteristicW, "AQ==" /* 0x01 in hex */	      )	</code></pre>		<p>I dont know why have they done so but this solved the issue for me.</p>	"
