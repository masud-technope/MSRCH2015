thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
39868402,39868402,null,1,0,Wed Oct 05 07:57:00 EDT 2016,6924933,"<p>I'm trying to get some initial info on my very first IoT project. I want to build a * <strong>tiny</strong> * wifi connected relay to control, let's say, lights. I'm a newbie in the hardware and electronics field though, but I'm a pro developer, so programming is not a problem.</p>		<p>Now, I've looked at different options and I can't seem to find really small components for the task. It might be I overlooked something, so please help me with available options.</p>	"
39868402,67064062,39868402,3,0,Thu Oct 06 06:27:00 EDT 2016,6601582,"You need a [IoT device](http://robokits.co.in/iot-internet-of-things/esp8266-wifi-serial-module-esp-01-for-iot-and-other-applications) that hosts a service related lights control, [relay board](http://robokits.co.in/development-boards/interface-boards/opto-isolated-2-channel-5v-relay-board), a serial device, power supply and some wires. More detailed information is [here](http://www.instructables.com/id/WiFi-Internet-Controlled-Relays-using-ESP8266-Quic/)."
39868402,41420005,39868402,2,0,Sun Jan 01 23:43:00 EST 2017,3885063,"<p>Look at the ESP8266 devices. They have WiFi on chip and can be programmed using the Arduino environment. You basically write code in C++ to do whatever you need. </p>		<p>Here is an example device: 	<a href="https://rads.stackoverflow.com/amzn/click/com/B01LYYC4MW" rel="nofollow noreferrer" rel="nofollow noreferrer">https://www.amazon.com/ESP8266-7-30V-Network-Relay-Module/dp/B01LYYC4MW</a></p>		<p>I recently did a project using a Linknode R4 (similar to above but with 4 relays) and programmed it as a web server with REST API. Then I built a front end with ASP.NET Core to that talks to the REST API for the devices on my network. The Arduino sketch for the web server is posted on Github at <a href="https://github.com/SteveInCO/LinknodeR4" rel="nofollow noreferrer">https://github.com/SteveInCO/LinknodeR4</a>. I would assume it would work with little modification on the device I linked above.</p>		<p>The default program for the R4 allows controlling it via their website or iOS/Android apps, though I could never get it to work out of the box. Their model uses a polling method so the relays continually ask the server what to do next.</p>		<p>Windows IoT doesn't run on these small devices yet, but no reason you can't front end the Arduino API with a UWP app running under Windows IoT on a Raspberry Pi instead of the web app like I did. I think the eventual plan is for ASP.NET Core to be able to run on an ARM based system like a Raspberry Pi, but last I checked it wasn't quite there yet.</p>	"
