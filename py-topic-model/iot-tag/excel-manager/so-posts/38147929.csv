thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38147929,38147929,null,1,1,Fri Jul 01 14:26:00 EDT 2016,2444066,"<p>I'm trying to transition from dweet.io to my own InfluxDB database.</p>		<p>The request i was doing to dweet.io looked like this:</p>		<pre><code>client.print(String("GET /dweet/for/nJLDK4mm3Xl6TcT8Yr06?key=7hHa9AhSGp6u684LGfya4Y&amp;temperature=") + String(t) + "&amp;humidity=" + String(h) + " HTTP/1.1\r\n" +	    "Host: " + host + "\r\n" +	    "Connection: close\r\n\r\n");	delay(10);	</code></pre>		<p>So i though i could just edit that to work on the database, i tried this:</p>		<pre><code>client.print(String("GET /write?db=mydb' --data-binary 'temperature,host=ESP826601 value=") + String(t) + "' HTTP/1.1\r\n" + 	    "Host: " + host + "\r\n" + 	    "Connection: close\r\n\r\n");	delay(10);	</code></pre>		<p>It wasn't working, it was able to connect to server, though could not make the request. My code is based on this: <a href="https://www.openhomeautomation.net/cloud-temperature-logger-esp8266/" rel="nofollow">https://www.openhomeautomation.net/cloud-temperature-logger-esp8266/</a></p>	"
38147929,63731251,38147929,3,0,Fri Jul 01 17:20:00 EDT 2016,2444066,"Well, i found this sketch that I've linked to in the 1st post, it was working, even that on the dweet.io website it alsay say that this is a POST request.. http://i.imgur.com/Q6INHVM.png		Or maybe I'm wrong on this one.."
38147929,63731837,38147929,3,0,Fri Jul 01 17:41:00 EDT 2016,2444066,"Now I've tried it like this: `client.print(String("POST /write?db=mydb' --data-binary 'temperature,host=ESP8266 value=1.42' HTTP/1.1\r\n") +			"Host: " + host + "\r\n" +			"Connection: close\r\n\r\n");		delay(10);`		Still getting `Bad Request` error"
38147929,63732824,38147929,3,0,Fri Jul 01 18:14:00 EDT 2016,2322488,"Without knowing more about how `client` works its hard to answer this question. Can you point me in the direction of any documentation for `client`."
38147929,63735152,38147929,3,0,Fri Jul 01 19:42:00 EDT 2016,2444066,"Sure, it's part of ESP8266WiFi.h library. But i figured out how to make this work, will get to you in some time, after testing."
38147929,63726913,38147929,3,0,Fri Jul 01 15:05:00 EDT 2016,794749,"If you want a POST request, why are you making a GET request?"
38147929,63851773,38147929,3,1,Tue Jul 05 22:56:00 EDT 2016,2322488,"Glad to hear you've got it working."
38147929,48491986,38147929,2,0,Sun Jan 28 22:22:00 EST 2018,6783666,"<p>A more convenient method of sending data to InfluxDB from an ESP8266 or ESP32 is the use of the HTTPclient library instead of the WiFiClient. The following code sets the header and the payload and then sends it to InfluxDB via its <a href="https://docs.influxdata.com/influxdb/v1.4/guides/writing_data/" rel="nofollow noreferrer">REST API</a>.</p>		<pre><code>#include &lt;ESP8266HTTPClient.h&gt;		const char* influxUrl = "http://localhost:8086/write?db=mydb";	const char* influxUser = "username";	const char* influxPassword = "password";		// Add your own sensors here, e.g., read from OneWire or ADC	id[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};	value[10] = {22, 25, 24, 21, 22, 26, 22, 25, 24, 21};		// Send to InfluxDB	Serial.println("Sending data to InfluxDB");		String influxData = "";	for(int i = 0; i &lt; 10; i++){	  // Set data type and add tags	  influxData += "air_temperature,house=hydroponic,id=" + id[i];	  // Add temperature value and delimiter for next measurement	  influxData += " value=" + String(value[i]) + "\n";	}		// Create POST message	http.begin(influxUrl);	http.addHeader("Content-Type", "application/x-www-form-urlencoded");	http.setAuthorization(influxUser, influxPassword);		// The first attempt to send returns -1	int httpCode = -1;	while(httpCode == -1){	  httpCode = http.POST(influxData);	  http.writeToStream(&amp;Serial);	}	http.end();	</code></pre>		<p>As a bonus, it makes sense to combine it with ESP's <a href="https://www.losant.com/blog/making-the-esp8266-low-powered-with-deep-sleep" rel="nofollow noreferrer">deep sleep</a> functionality to reduce the power usage from 80mA to less than 10mA (according to my measurements which are limited to 0.01A).</p>		<p><em>Note: the code above has been extracted from a larger project, so may have a bug or two from the transcription.</em> </p>	"
