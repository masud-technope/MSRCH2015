thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
47296629,47296629,null,1,-1,Tue Nov 14 22:55:00 EST 2017,8629183,"<p>I need to simulate the position tracking for my 'IoT thing' in my IoT platform Thingworx. For eg: If I have a car as a Thing, and it has two modes moving and stopped. I need to simulate the changing latitude and longitude for the car when it is in 'moving' state and store the generated coordinates so that they can be later displayed on the Google map widget in the mashup. Similarly, if the car is stopped then it should display the location where it was last stopped. I have the following questions:</p>		<ol>	<li>How do I achieve this? As in, should I create and use a service or a subscription (with speed values as the trigger)?</li>	<li>What sort of code snippet will be required for such a functionality?</li>	<li>Should I employ the Google api?</li>	<li>Also how do you store the changing values of the lat/long in the variable which has a datatype 'Location'?</li>	</ol>		<p>Thanks!</p>	"
47296629,47297034,47296629,2,0,Tue Nov 14 23:32:00 EST 2017,7738142,"<p>What you ask for is not easy to explain in a few words! The best way is to show you an example that uses the Google Map API and may interest you also as it uses CSS transitions to smooth the trip of you car (or Hansel and Gretel in my case).</p>		<p>You can see the fully documented code for the <a href="https://hypocampus.applications.uwa.edu.au/travelmanager.html" rel="nofollow noreferrer">Brotkrumen</a> Web App <a href="https://drive.google.com/drive/folders/0B7Rmd3Rn8_hDNW1zSWRoXzBTclU" rel="nofollow noreferrer">here</a>. It includes a aaa_readme.txt</p>		<p>Note that knowing when someone has stopped is not straight forward and has to be obtained heuristically. I provide a number of secs parameter that must elapse sans interesting movement-change to work out you've stop and for how long. Try running Brotkrumen in your car and it should work out when you were at the lights (At least in Perth they take forever) and will show you when you press the Map Trip or Replay button.</p>	"
47296629,81545406,47297034,3,0,Tue Nov 14 23:34:00 EST 2017,7738142,"BTW Rewriting Uber may take longer than you think ;-)"
47296629,47346365,47296629,2,0,Fri Nov 17 08:36:00 EST 2017,1722247,"<p>A part of the logic to simulate movement, which can be as complex as you want or a simple as adding Randomly movements to the Latitude / Longitude.</p>		<ol>	<li><p>You should use a Timer Thing which for instance triggers every second  ( or any other frequency ) and you subscribe to "Timer" event and there you write the code to move the car.</p></li>	<li><p>You need to have a property on the Car Thing that we can call it "location" which of baseType LOCATION, and this property should be set as "logged" then you just need to update location property with the new location ( if it moved since last location - on your simulator code - ). Of course you also must set car Thing's ValueStream property in order to get storage for location changes.</p></li>	<li><p>You can use TW Marketplace Google Maps extension in order to show Location and Paths on Google Maps from the recorded simulation.</p></li>	<li><p>Setting a location property in TW it's something like:</p></li>	</ol>		<p>me.location = { 	   latittude: latitude_value, 	   longitude: longitude_value,	  elevation: elevation_value,	  units: "WGS84"	}</p>		<p>Hope it helps.</p>	"
47296629,82182687,47346365,3,0,Sat Dec 02 20:30:00 EST 2017,1722247,"Hi Rushar,		when you mean value you mean me.location ? if that's the case, you just need to set it with the new value, you shouldn't have any problem, location should be set Not Read Only of course, and logged in order to record location changes."
47296629,82256443,47346365,3,0,Tue Dec 05 08:28:00 EST 2017,1722247,"Yes the format it's correct, but if you add 1 to latitude, longitude and elevation it will move super far.."
47296629,82198250,47346365,3,0,Sun Dec 03 15:58:00 EST 2017,8629183,"Hey, thanks for the reply. Yes, I did set the new values up. It seems the value stream is not picking it up, but it is showing correct values in the properties column and on the mashup. However, my other question was that, if I want to increase the latitude and longitude of a thing for the next time the subscription runs, is the format-- me.location = { latitude: latitude_value 1, longitude: longitude_value+1, elevation: elevation_value+1, units: "WGS84" } correct? If not, then what is the syntax which can be used to increase the value of lat/long everytime the subscription runs?"
47296629,82565473,47346365,3,0,Wed Dec 13 21:05:00 EST 2017,8629183,"Hi Carles, It works now but not completed correctly. I had to give elevation = 0 so that it changes only relevant Lat and Long values. I feel that the location base type matches all the three values and if a particular combination does not exist it starts displaying garbage value (or maybe a correct combination of Lat/Long/Ele), which of course I didn't need at that point. However, the bottom line is that the syntax which you mentioned earlier, works. Thanks!"
47296629,82156665,47346365,3,0,Fri Dec 01 18:14:00 EST 2017,8629183,"Hi, I am trying to do something similar which you suggested: I am writing a subscription which is enabled by speed change and then I am randomly trying to increase the value by 0.0001 or something like that. The problem which I am facing is that Thingworx has stored a garbage/initial value and it is not changing its value even I have tried resetting it. Can you please tell me on how to increase the value of lat/long in the correct format or what exactly the problem may be behind this issue?"
