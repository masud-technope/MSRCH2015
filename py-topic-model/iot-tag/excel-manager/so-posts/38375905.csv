thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38375905,38375905,null,1,1,Thu Jul 14 13:43:00 EDT 2016,980186,"<p>We have Windows 10 application and we are trying to change time zone on the system. </p>		<p>I have found documentation about having IOT extensions included into the project, what would give basic system administration capabilities.</p>		<p><a href="https://msdn.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations" rel="nofollow">https://msdn.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations</a></p>		<p><a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.system.timezonesettings.changetimezonebydisplayname" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/apps/windows.system.timezonesettings.changetimezonebydisplayname</a></p>		<p>So far, I failed to get permission to do anything (reboot system, change time zone etc), always get auth exception.</p>		<p>This is what I have tried:</p>		<p>manifest (important parts):</p>		<pre><code>&lt;Package	  xmlns="http://schemas.microsoft.com/appx/manifest/foundation/windows10"	  xmlns:mp="http://schemas.microsoft.com/appx/2014/phone/manifest"	  xmlns:uap="http://schemas.microsoft.com/appx/manifest/uap/windows10"	  xmlns:iot="http://schemas.microsoft.com/appx/manifest/iot/windows10"	  IgnorableNamespaces="uap mp iot"&gt;		&lt;Dependencies&gt;	    &lt;TargetDeviceFamily Name="Windows.Universal" MinVersion="10.0.10586.0" MaxVersionTested="10.0.10586.0" /&gt;	    &lt;TargetDeviceFamily Name="Windows.IoT" MinVersion="10.0.10586.0" MaxVersionTested="10.0.10586.0" /&gt;	  &lt;/Dependencies&gt;		 &lt;Capabilities&gt;	    &lt;iot:Capability Name="systemManagement" /&gt;  	  &lt;/Capabilities&gt;	&lt;/Package&gt;	</code></pre>		<p>code:</p>		<pre><code> Boolean canChange = Windows.System.TimeZoneSettings.CanChangeTimeZone;	 Windows.System.TimeZoneSettings.ChangeTimeZoneByDisplayName("(UTC+13:00) Samoa");	</code></pre>		<p>reference to IOT added to project</p>	"
38375905,64169928,38375905,3,1,Thu Jul 14 16:56:00 EDT 2016,634824,"Is this actually running on a Windows IOT device?"
38375905,64187730,38375905,3,0,Fri Jul 15 06:39:00 EDT 2016,980186,"It is running on Windows 10 tablet. Some of the methods are available, such as: https://msdn.microsoft.com/en-us/library/windows/apps/windows.system.timezonesettings.supportedtimezonedisplaynames.aspx?cs-save-lang=1&cs-lang=javascript#code-snippet-1 , var supportedTimeZoneDisplayNames = Windows.System.TimeZoneSettings.supportedTimeZoneDisplayNames;   This works and lists all time zones. If I call method to change time zone, I get unauthorized exception. This makes me believe that these methods exist in regular Windows 10 and I just need to obtain permissions."
38375905,64188444,38375905,3,2,Fri Jul 15 07:02:00 EDT 2016,5570139,"Seems there is no way to make this work in regular windows 10."
38375905,64190269,38375905,3,0,Fri Jul 15 07:55:00 EDT 2016,980186,"Any Idea how would one change system time or time zone programmatically in Windows 10?"
38375905,64190358,38375905,3,0,Fri Jul 15 07:57:00 EDT 2016,5730046,"Interesting that Shutdown, change TimeZone are all working on my Raspberry Pi 2."
38375905,64190381,38375905,3,0,Fri Jul 15 07:58:00 EDT 2016,980186,"No, same exception, not authorized."
38375905,64199584,38375905,3,0,Fri Jul 15 12:03:00 EDT 2016,980186,"In case someone might need this. Workaround can be to launch Windows settings screen: https://msdn.microsoft.com/en-us/windows/uwp/launch-resume/launch-settings-app"
38375905,64190819,38375905,3,0,Fri Jul 15 08:10:00 EDT 2016,980186,"Difference is, I need this on Windows 10 tablet/desktop machine. From MSDN documentation, it says IoT extension available from Win build version 10240 +, and I have newer. So, It seems like the api is there, but Windows does not give permission to use it. I will have to see if there is a way to run external process to run tzutil or something like that."
38375905,64191130,38375905,3,2,Fri Jul 15 08:19:00 EDT 2016,5730046,"I see. Looks like IoT extension are only for IoT devices, you cannot just reference the IoT extension in your regular UWP project and expect the IoT APIs to work on your Desktop/tablet, can you?"
38375905,64191175,38375905,3,1,Fri Jul 15 08:20:00 EDT 2016,5730046,"By the way, if you want to do the system level operations like shutdown/change timezone, you may reference this tutorial https://xamltips.wordpress.com/2015/11/13/brokered-component-for-uwp-on-windows-10/ to create an brokered component."
38375905,64191237,38375905,3,0,Fri Jul 15 08:22:00 EDT 2016,980186,"Thanks Jackie, I will check out the tutorial."
38375905,64191325,38375905,3,1,Fri Jul 15 08:24:00 EDT 2016,5730046,"Not sure it'll work out. But the point is IoT extension are only meant for windows IoT devices. I'm suggesting we put that as an answer so that others an have reference."
38375905,38499083,38375905,2,1,Thu Jul 21 08:34:00 EDT 2016,980186,"<p>IOT: as Jackie said: 	"Not sure it'll work out. But the point is IoT extension are only meant for windows IoT devices"</p>		<p>However, I did find a workaround...</p>		<p>If anyone else encounters this problem.</p>		<p>I have run a local lightweight NancyFX web service that has an access to system settings. From an UWP application, I will make api calls and change system settings this way.</p>		<p>see <a href="http://nancyfx.org/" rel="nofollow">http://nancyfx.org/</a> and self hosting example</p>		<p>Also, if calling localhost from edge, you will need to setup a loopback app exception, see <a href="https://loopback.codeplex.com/" rel="nofollow">https://loopback.codeplex.com/</a> and <a href="https://msdn.microsoft.com/en-us/library/windows/apps/hh780593.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/apps/hh780593.aspx</a></p>		<p>Pretty much everything works after that.</p>	"
38375905,64551471,38499083,3,1,Tue Jul 26 04:56:00 EDT 2016,5730046,"that sounds awesome."
38375905,46970360,38375905,2,1,Fri Oct 27 08:10:00 EDT 2017,8591912,"<p>Old threat but when i search for my solution to this IoT systemManagement manifest i stumble into this. I using VS2017. My fix is 	View code package manifest manually. Then add this line</p>		<pre><code>&lt;Package xmlns="http://schemas.microsoft.com/appx/manifest/foundation/windows10" xmlns:mp="http://schemas.microsoft.com/appx/2014/phone/manifest" 	xmlns:uap="http://schemas.microsoft.com/appx/manifest/uap/windows10" 	xmlns:uap4="http://schemas.microsoft.com/appx/manifest/uap/windows10/4" 	xmlns:iot="http://schemas.microsoft.com/appx/manifest/iot/windows10" IgnorableNamespaces="uap mp uap4 iot"&gt;		&lt;Capabilities&gt;	    &lt;iot:Capability Name="systemManagement"/&gt; 	&lt;Capabilities&gt;	</code></pre>		<p>*Remember you can only declare 1 Capabilites so if you had declare just add new.</p>		<p>Then add capability in manifest with this code</p>		<p>And plus go to add reference->Extension select	Windows IoT Extensions for the UWP version 10.0.10586.0	*even you have newer version must select this to work. </p>	"
