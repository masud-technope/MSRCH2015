thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
29510733,29510733,null,1,1,Wed Apr 08 09:23:00 EDT 2015,2686607,"<p>Just wanted to know whether IOT based ThingWorx platform supports in-production Java application and database porting. </p>		<p>I had already worked on Google App Engine and it supports database(with data dump) porting available for selected DB.</p>		<p>What all needs to be done if I am having Java rest api based project and port it to ThingWorx platform to utilize M2M communication. </p>	"
29510733,47179232,29510733,3,6,Wed Apr 08 10:11:00 EDT 2015,358221,"This sort of question might be better off in an email to the vendor."
29510733,30055418,29510733,2,0,Tue May 05 14:11:00 EDT 2015,1572273,"<p>ThingWorx does not have any inherent database porting methods available, however, it is not be terribly hard to write you own - I've done this and assisted with this for several migrations when the database backend was changing and data was still pouring into the old server while we brought the new one online. ThingWorx provides JDBC Connectors, a SQL connector, so you could easily read the database rows out and write into ThingWorx. Or write RESTful services to talk from Twx server A to Twx server B. Less easy, I suppose, if you have tons and tons of both meta data and actual rows of data.</p>		<p>If you are serious about Thingworx, you are likely running at least two servers, the Platform server and a database server. (These should not be the same box.) In this case you have more porting options (like pg_dump if you are on Postgres, or similar dump tool if you are on DataStax or SAP) to another database. If you are using AWS or another cloud database you can take an image of the database and spin up a new one. This is often easier than exporting entities and data, esp once you have a lot of both.</p>		<p>As for application porting... there is not really a good way to do this. ThingWorx mostly runs on JavaScript based scripts. You can develop extension packages and that is all done Java, but you would have to do that yourself and mush you original Java it into the ThingWorx extension package format, or at least wrap it with their Entities. That is not where ThingWorx shines as a development platform - it's a great platform overall but not for that, yet.</p>	"
29510733,48225498,30055418,3,0,Tue May 05 14:14:00 EDT 2015,2357766,"Kindly Format your Answer..."
29510733,31910562,29510733,2,2,Mon Aug 10 01:41:00 EDT 2015,1927175,"<p>I couldn't get a complete context about support java EE application. But upto my understanding, yes ThingWorx platfrom supports Java EE application (it was built using Java, Javascript and webservices). </p>		<p>In the <code>ThingWorx Composer</code>, you can import/export the database. To import the data, you need <code>JSON</code> file and to import entities, you need <code>XML</code> file. </p>	"
29510733,32547625,29510733,2,0,Sun Sep 13 08:07:00 EDT 2015,2686607,"<p>Thingworx is a powerful M2M communication platform. It has its own builders - Composer (data modelling) and Mashup (UI) plus data storage and connectivity options and many more IoT capabilities.	It also supports connecting to external DB and Java extensions for writing custom functionalities.	I believe, enterprise application and database porting(DB dump) are not yet supported. Thingworx application can be connected to existing external DB.</p>		<p>For more details:	<a href="http://www.thingworx.com/" rel="nofollow">http://www.thingworx.com/</a></p>	"
29510733,101915158,32547625,3,0,Sat Aug 31 12:33:00 EDT 2019,1927175,"you are correct by saying 'Thingworx can be connected to existing external DB'. However, Thingworx also supports taking a DB dump i.e., either with Postgres DB or other - you can very well take a dump of it."
