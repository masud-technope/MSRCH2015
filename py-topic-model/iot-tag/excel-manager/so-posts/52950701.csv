thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
52950701,52950701,null,1,0,Tue Oct 23 13:46:00 EDT 2018,5606321,"<p>I have a AWS Lambda which publishes data to a AWS IOT topic A and waits for the result, which will be published to a different topic B.</p>		<p>I was wondering how to get this data from topic B when the thing publishes it to the already running lambda.</p>		<p>I was not able to find any equivalent to get_thing_shadow for a particular topic <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iot-data.html#id4" rel="nofollow noreferrer">https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iot-data.html#id4</a></p>		<p><strong>Eg:</strong></p>		<p>Lambda1 -> IOT Topic A -> Thing</p>		<p>Lambda1 waiting</p>		<p>Thing -> IOT Topic B</p>		<p>Lambda1 reads from Topic B and updates say DB and dies.</p>		<p>I was wondering how this can be done.</p>		<p>For some reasons we are unable to use IOT Shadow anymore.</p>		<p><strong>Current architecture:</strong></p>		<p>Lambda1 -> IOT Shadow Desired -> Thing</p>		<p>Lambda1 -> waits for 5 sec </p>		<p>Lambda1 -> reads IOT Shadow Reported -> success or failure</p>		<p>If failure Lambda1 -> resets IOT Desired to old state -> exists</p>	"
52950701,52951373,52950701,2,0,Tue Oct 23 14:19:00 EDT 2018,13070,"<p>It is not possible to configure IoT to send the new message to the "already running" Lambda. It will always trigger a new invocation of the Lambda function. Isn't the previous state already in the IoT Shadow Update Failed message? Can't you just use that data in the new invocation to do whatever DB updates or whatever else you need? </p>	"
52950701,92834105,52951373,3,0,Wed Oct 24 07:57:00 EDT 2018,5606321,"invocation of lambda1 expects a response from the iot device to report back the action. So I guess we can still use the reported to see if the update happened."
52950701,54473781,52950701,2,0,Fri Feb 01 06:08:00 EST 2019,3064421,"<p>AWS sdk for lambda(e.g. boto3 for python) does not support subscribing topic. 	It only support publishing topic.</p>		<p>If you want to subscribe topic, You must use device sdk	(ref. <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-sdks.html" rel="nofollow noreferrer">https://docs.aws.amazon.com/iot/latest/developerguide/iot-sdks.html</a> )</p>		<p>And then, You can publish and subscribe by device sdk in lambda.</p>		<p>If you don't want to use device sdk, you have to use redis or dynamoDB like below.</p>		<p>device publish response message -> AWS IoT Rule trigger some action(e.g. write to DB ) -> lambda polling DB.</p>	"
