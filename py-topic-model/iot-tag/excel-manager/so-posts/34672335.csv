thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
34672335,34672335,null,1,0,Fri Jan 08 08:15:00 EST 2016,5470298,"<p>I am trying to run a C sample on Intel Edison like in :</p>		<p><a href="https://github.com/neeraj-khanna/azure-iot-sdks/blob/master/c/doc/run_sample_on_intel_edison.md" rel="nofollow">https://github.com/neeraj-khanna/azure-iot-sdks/blob/master/c/doc/run_sample_on_intel_edison.md</a></p>		<p>I am trying to Build the Azure IoT sdk ,	I Set necessary environment variables </p>		<pre><code>export CFLAGS="-I/home/root/qpid-proton/proton-c/include"		export CPPFLAGS="-I/home/root/qpid-proton/proton-c/include"		export LDFLAGS="-L/lib/"	</code></pre>		<p>and try to run ./build.sh in azure-iot-sdks/c/build_all/Linux	but I am getting a error :</p>		<pre><code>-- The C compiler identification is GNU 4.9.1	-- The CXX compiler identification is GNU 4.9.1	-- Check for working C compiler: /usr/bin/cc	-- Check for working C compiler: /usr/bin/cc -- works	-- Detecting C compiler ABI info	-- Detecting C compiler ABI info - done	-- Detecting C compile features	-- Detecting C compile features - done	-- Check for working CXX compiler: /usr/bin/c++	-- Check for working CXX compiler: /usr/bin/c++ -- works	-- Detecting CXX compiler ABI info	-- Detecting CXX compiler ABI info - done	-- Detecting CXX compile features	-- Detecting CXX compile features - done	CMake Error at CMakeLists.txt:27 (add_subdirectory):	  add_subdirectory given source "azure-c-shared-utility/c" which is not an	  existing directory.	</code></pre>		<p>Many thanks in advance !</p>	"
34672335,57286387,34672335,3,0,Wed Jan 13 15:38:00 EST 2016,1221516,"I've tested my answer above on raspbian on a Raspberry PI 2. It works..."
34672335,57251381,34672335,3,0,Tue Jan 12 19:57:00 EST 2016,1221516,"azure-c-shared-utility is a separate GitHub project. Have you tried:    git clone https://github.com/Azure/azure-c-shared-utility.git In your "azure-iot-sdks/c" directory?"
34672335,35324125,34672335,2,0,Wed Feb 10 19:22:00 EST 2016,2932840,"<p>The instructions for the Intel Edison running Yocto have been updated.	<a href="https://github.com/Azure/azure-iot-sdks/blob/master/doc/get_started/yocto-intel-edison-c.md" rel="nofollow">https://github.com/Azure/azure-iot-sdks/blob/master/doc/get_started/yocto-intel-edison-c.md</a>	Have you used the --recursive option when cloning the SDK repo?	This is now necessary as the SDK is using sub module to use other libs sitting on other repos.	Hope this helps</p>	"
34672335,36897720,34672335,2,0,Wed Apr 27 18:11:00 EDT 2016,6262999,"<p>The --recursive option isn't supported on the git client that is default on Edison.  </p>		<p>There are 3 options:</p>		<ol>	<li>Manually clone all of the submodules.  This is error prone, especially if submodules update or change.</li>	<li>Clone onto a different system and use your favorite transfer program to get it onto the Edison. </li>	<li>Build your own private git client on Edison and use that one instead.</li>	</ol>		<p>I personally use the BitVise ssh client on my Windows machine to transfer my Windows clone to my Edison.  I do all of my file editing on my Windows machine and I use <a href="https://github.com/avranju/rsync" rel="nofollow">https://github.com/avranju/rsync</a> to keep the Windows machine and the Edison in sync.  It's not a perfect workflow, but it works for me, especially when I use the Visual Studio GDB extension to debug (<a href="https://blogs.msdn.microsoft.com/vcblog/2015/11/18/announcing-the-vs-gdb-debugger-extension/" rel="nofollow">https://blogs.msdn.microsoft.com/vcblog/2015/11/18/announcing-the-vs-gdb-debugger-extension/</a>) </p>	"
