thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
35184389,35184389,null,1,5,Wed Feb 03 18:03:00 EST 2016,4463429,"<p>I have a Raspberry Pi running Windows IOT Core and it is running my home automation application. Now I need to set up communication between the RB pie and ESP8266. </p>		<p>I've been considering the MQTT protocol but I don't want to have an external server running the MQTT broker and I can't find a broker for the Win IOT. Does a MQTT broker exist for Windows IOT Core? If not, what communication protocol would you recommend for this purpose? </p>	"
35184389,59523772,35184389,3,0,Fri Mar 11 06:09:00 EST 2016,131929,"Which one did you eventually choose? Is there any more feedback you need? If not I suggest you accept the right answer so that SO can mark this question as closed, http://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work."
35184389,35187328,35184389,2,2,Wed Feb 03 20:44:00 EST 2016,504554,"<p>The is the <a href="https://github.com/ppatierno/gnatmq" rel="nofollow">GnatMQTT</a> which is written in C# so I guess should build on Window IoT</p>	"
35184389,35202995,35184389,2,1,Thu Feb 04 13:58:00 EST 2016,745049,"<p>Possibly there exist some MQTT lib or another protocol. But I assume the following situation and going to suggest a solution:</p>		<p><strong>Assumptions:</strong></p>		<ul>	<li>Rpi is at the core of the system. </li>	<li>ESP is working like satellite, sensor etc.</li>	<li>So ESP is reporting data to the Rpi</li>	<li>They (Rpi and ESPs) all are in the same subnet.</li>	</ul>		<p><strong>Solution:</strong></p>		<ul>	<li>On the Rpi side implement a simple  UDP bcast listener and listen to some specific port on BROADCAST ip. (ex: 8889)</li>	<li>On the ESP side implement a UDP Client to send data to BROADCAST ip and to specific port. (ex: 8889)</li>	<li>Implement a message format and make ESP to send it and Rpi to parse it.</li>	</ul>		<p><strong>Example Message Format:</strong></p>		<p>The message can be a string (ASCII encoded).</p>		<pre><code>ABBBEEECCCDDDD.....DDD	A: Start Header	BBB: Sender ID	EEE: Receiver ID	CCC: Payload Byte Count	D..: Payload		OR		A|BBB|EEE|DDDDD..DDDDDD|F	A: Start Header	|: Seperator	BBB: Sender ID	EEE: Receiver ID	D..: DATA payload	F: End Header.	</code></pre>		<p>This config will allow you to use DHCP, not to record any IP address of the clients and it is cheap to implement (according to resources ram,cpu etc). 	Note: I don't know how MQTT uses resources.</p>	"
35184389,58137641,35202995,3,2,Thu Feb 04 20:44:00 EST 2016,131929,"I don't see why I'd wanna do that if there are standardized lightweight protocols like MQTT or CoAP available."
35184389,35211529,35184389,2,-2,Thu Feb 04 21:00:00 EST 2016,131929,"<p>There are a <a href="https://github.com/mqtt/mqtt.github.io/wiki/server-support" rel="nofollow noreferrer">ton of MQTT brokers</a> available. <a href="https://en.wikipedia.org/wiki/Apache_ActiveMQ" rel="nofollow noreferrer">ActiveMQ</a> is built with Java and can be installed on any platform that supports Java. <a href="http://mosquitto.org/" rel="nofollow noreferrer">Mosquitto</a> and <a href="https://en.wikipedia.org/wiki/RabbitMQ" rel="nofollow noreferrer">RabbitMQ</a> have installers for Windows.</p>		<p>However, if you want something even more lightweight than MQTT you might also want to look into <a href="https://en.wikipedia.org/wiki/Constrained_Application_Protocol" rel="nofollow noreferrer">CoAP</a>.</p>	"
35184389,68951267,35211529,3,0,Tue Nov 29 14:09:00 EST 2016,5261698,"I think they are looking for c# based brokers, so those brokers aren't going to help. 	CoAP is interesting, but is there a good implementation around?"
35184389,73819681,35211529,3,0,Wed Apr 12 20:12:00 EDT 2017,131929,""they are looking for c# based brokers" - well, how would one know? The question doesn't say so explicitly. Windows IoT can run both Python and Java. Even the accepted answer mentions Node.js and Python brokers. Furthermore, the OP was also asking for alternative protocols why I mentioned CoAP."
35184389,35302338,35184389,2,3,Tue Feb 09 21:16:00 EST 2016,5854240,"<p>Antonio there are a few options available for you on Windows IoT Core</p>		<p>If you're building an application using Node.js there's <strong>Mosca</strong> (<a href="http://www.mosca.io" rel="nofollow">http://www.mosca.io</a>)</p>		<p>If you're building an application using Python, you can check out <strong>hbmqtt</strong> (<a href="https://github.com/beerfactory/hbmqtt" rel="nofollow">https://github.com/beerfactory/hbmqtt</a>)</p>		<p>Of course for .NET applications you can search Nuget. <strong>GnattMQ</strong> (www.nuget.org/packages/GnatMQ) seems to be pretty popular .NET library</p>	"
35184389,68245665,35302338,3,0,Wed Nov 09 06:17:00 EST 2016,2612760,"@VladimirAkopyan I am trying GnatMQ on Raspberry PI 2 with Win 10 IoT core as os. App/broker starts successfully, but as soon as a client connects, app crashes for no visible reason(debug in VS yielded no results). I have provided all available capabilities to rule out permission issues. Any pointers appreciated."
35184389,68950248,35302338,3,1,Tue Nov 29 13:45:00 EST 2016,2713582,"@VladimirAkopyan can you share some code explaining how you use GnatMQ?"
35184389,72779876,35302338,3,0,Thu Mar 16 13:24:00 EDT 2017,2435406,"@VladimirAkopyan +1 for describing your experience with GnattMQ. I ended up using GnattMQ and M2Mqtt at the same time (on the same device that acts as the broker) instead of messing with the GnattMQ broker code. The reason is that **you may break the protocol** if you just intercept the incoming messages in the broker event handler. Messages that should only be received once (QOS_LEVEL_EXACTLY_ONCE) could arrive twice there... so your code does not work as you'd expect of a client."
35184389,58318410,35302338,3,0,Tue Feb 09 23:13:00 EST 2016,4463429,"I've looked into GnatMQ but i can't find any documentation on how to get it up and running. Or am I looking in the wrong places?"
35184389,62576703,35302338,3,1,Tue May 31 11:06:00 EDT 2016,131929,"It's now at https://m2mqtt.wordpress.com/"
35184389,64490306,35302338,3,1,Sun Jul 24 07:03:00 EDT 2016,5261698,"I use GnattMQ, and it seems to be rock solid. For all intents an purposes there is no documentation (the only page in Wiki is.. performance! Really?)	However  the code is very easy to follow. I have wired an event to fire every time there is a message published, and use that as data input to the rest of my app. There is also a send method in the broker class, which i've made public. 	I don't know if that is correct, but it does seem to serve me well for months."
