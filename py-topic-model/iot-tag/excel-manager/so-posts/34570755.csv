thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
34570755,34570755,null,1,2,Sat Jan 02 21:09:00 EST 2016,460912,"<p>I am trying to create an Windows 10 IoT app running headless on a Raspberry Pi 2.	Everything is set up correctly and I am able to debug my from Visual Studio using the Raspberry Pi as the remote machine for debugging.</p>		<p>Now I want to add a clock on the app page but I can't figure out how to keep the displayed time updated. 	In plain old C# I would use a BackgroudWorker or something similar to keep the displayed time current, but that type is not available in UWP.</p>		<p>I have been looking into <a href="https://msdn.microsoft.com/en-us/library/windows/apps/xaml/mt299100.aspx" rel="nofollow">"Create and register a background task"</a> on MSDN but that seems to be way to complex, just to be able to keep the display time up to date.</p>		<p>So my question is: How can I - in the simplest posible way - create a clock display that is updated every time the time ticks?</p>	"
34570755,34577690,34570755,2,2,Sun Jan 03 14:36:00 EST 2016,1521173,"<p>If your app is running headless, you will have to set data to a display device (LCD, LEDs, etc.).	With a headed app, you will use a XAML page to display the clock.	You can use a timer to get notified every time span occurs.</p>		<p>Timer declaration</p>		<pre><code>ThreadPoolTimer _clockTimer = null;	</code></pre>		<p>Timer initialization</p>		<pre><code>_clockTimer = ThreadPoolTimer.CreatePeriodicTimer(_clockTimer_Tick, TimeSpan.FromMilliseconds(1000));	</code></pre>		<p>Timer tick event</p>		<pre><code>private void _clockTimer_Tick(ThreadPoolTimer timer)	{	    //Update your display. Use a dispatcher if needed	}	</code></pre>		<p>ThreadPoolTimer reference documentation</p>		<p><a href="https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.system.threading.threadpooltimer.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.system.threading.threadpooltimer.aspx</a></p>		<p>Keep in mind that a Raspberry Pi does not have a battery to save the current time. Your board will have to sync through the Internet to update its date/time.</p>	"
34570755,57048927,34577690,3,0,Thu Jan 07 09:49:00 EST 2016,460912,"Perfect, works like a charm! Thanks."
