thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
58023741,58023741,null,1,0,Fri Sep 20 07:29:00 EDT 2019,8636516,"<p>We are using MQTT protocol for publish and subscriber message over VerneMQ server</p>		<p>Can anyone help with in VerneMQ can we do queue streaming like Kafka  where if a subscriber offline and later it back to online that time it will able to get all old missed messages that he missed at time offline</p>		<p>if VerneMQ goes not support Streaming message then what all options we have apart from Kafka and which is good </p>		<p><strong><em>User case</em></strong> </p>		<p>this suppose i have 3(A, B and C) client who subscriber same topic for some reason my A client is office , In this mean time publisher publish 100 messages while A is office but B and C able to receive message so if A will be back online will he able to get those 100 message that publisher publish while he offline</p>	"
58023741,102450695,58023741,3,0,Fri Sep 20 07:52:00 EDT 2019,504554,"Go look up MQTT QOS levels and the Clean Session flag"
58023741,102452471,58023741,3,0,Fri Sep 20 08:55:00 EDT 2019,8636516,"when i can find this clean session flag"
58023741,102452498,58023741,3,0,Fri Sep 20 08:56:00 EDT 2019,8636516,"and what the time period for stream message"
58023741,58025176,58023741,2,1,Fri Sep 20 09:02:00 EDT 2019,504554,"<p>MQTT is not a message queue, it is a pub/sub system.</p>		<p>But you can get something close to what you describe. Using a hight subscriber QOS (1 or 2) you can get the broker to queue messages for client that is offline until it reconnects.</p>		<p>To do this you must do the following:</p>		<ul>	<li>Use a fixed client id for the client</li>	<li>Ensure the Clean Session flag is set to false when the client reconnects to the broker.</li>	<li>When the client subscribes to the topic it must include a QOS greater than 0 (using 1 may result in some messages being delivered multiple times, 2 should be only once)</li>	</ul>		<p>ALL messages published while the client is offline will be delivered, there is no way to get any window on this from the client side. Depending on the broker it may be possible to set either a byte limit or time limit on what the broker stores (but this is outside the MQTT spec, which implies the data should be stored forever). (As of MQTT v5 it is possible for the publisher of the message to set TTL value that will have the message removed if it expires)</p>	"
58023741,102452883,58025176,3,0,Fri Sep 20 09:09:00 EDT 2019,8636516,"ok please tell me this suppose i have 3(A, B and C) client who subscriber same topic for some reason my A client is office , In this mean time publisher publish 100 messages while A is office but B and C  able to receive message so if A will be back online will he able to get those 100 message that publisher publish while he offline"
58023741,102452906,58025176,3,0,Fri Sep 20 09:10:00 EDT 2019,504554,"That's what I said"
58023741,102452970,58025176,3,0,Fri Sep 20 09:12:00 EDT 2019,8636516,"tell me if am using verneMQ 1.9.2  then what all thing i need to do how i can get byte limit and time limit or storage"
58023741,102453047,58025176,3,1,Fri Sep 20 09:14:00 EDT 2019,504554,"No idea, I've never used vernMQ, you will have to read the doc"
58023741,102453228,58025176,3,0,Fri Sep 20 09:20:00 EDT 2019,8636516,"i read they only suggest to MQTT QOS 1 or 2  levels and the Clean Session flag  	but is notthing about time and storage"
58023741,102453312,58025176,3,0,Fri Sep 20 09:23:00 EDT 2019,504554,"Then they probably don't support it, as it's not part of the MQTT spec"
58023741,102453383,58025176,3,0,Fri Sep 20 09:25:00 EDT 2019,8636516,"then that i can user Kafka as Message Streaming is good idea you suggesting something else"
