thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
46385045,46385045,null,1,0,Sat Sep 23 23:04:00 EDT 2017,4344443,"<p>I am doing an IoT project. A typical scenario is:</p>		<ol>	<li>I need to control the device to move to a coordinate (x, y) </li>	<li>Then I need to get the current coordinate to decide what to do next.</li>	</ol>		<p>I use MQTT to communicate with devices. So in my code, I express the operations like this in <code>Blockly</code>:</p>		<pre><code>//javascript	robot.move(x, y);	if(robot.x &gt; 100) {	// do something...	}	</code></pre>		<p>Obviously, move(..) method is an asynchronous one, it just publishes the command and does not wait for the completion. </p>		<p>Due to the messaging pattern, even I make move(..) as an <code>async</code> function and apply <code>await</code>. I still don't think it works, because I only get the callback about the message is delivered to the robot by the message broker, rather than the robot DOES actually move to the specified location.</p>		<p>So how should I do for this kind of scenario?</p>	"
46385045,46385201,46385045,2,0,Sat Sep 23 23:31:00 EDT 2017,8569693,"<p>Did you try using callbacks and promises? Usually an asynchronous function either provides some callback:</p>		<pre><code>robot.move(x, y, function(err, res) { // do something })	</code></pre>		<p>or returns a promise:</p>		<pre><code>robot.move(x, y).then(function(res) { // do something }).catch(function(err) { // error })	</code></pre>	"
46385045,79728783,46385201,3,0,Sun Sep 24 00:07:00 EDT 2017,4344443,"Thanks. I know that. I mean the callback is invoked when the message is delivered to the robot, but the robot still needs time to move to the specific location after receiving the message. And the later completion is what I don't know."
46385045,46387978,46385045,2,0,Sun Sep 24 08:10:00 EDT 2017,504554,"<p>To be clear, there is no end to end delivery notification in MQTT, the callback is only that the message has been delivered to the broker, not onward to the robot. The only way to know it's been acted on by the robot is to have it publish a separate message to confirm it has completed an action</p>	"
