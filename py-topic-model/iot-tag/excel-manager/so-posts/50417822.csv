thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
50417822,50417822,null,1,1,Fri May 18 19:08:00 EDT 2018,1930814,"<p>I am trying to receive "notifications" from IoT Hub when some data is published to the MQTT topic <code>devices/device_id/messages/events/</code>. To receive data, I am using the following topic: <code>devices/device_id/messages/devicebound/</code>. My subscribe code is below (Python):</p>		<pre><code>import paho.mqtt.client as mqtt	import ssl, random	from time import sleep		root_ca = "./certs/digicertbaltimoreroot.pem"	public_crt = './certs/rsa_cert.pem'	private_key = './certs/rsa_private.pem'		iothub_name = "myhub"	device_id = "mydevice"	mqtt_url = "{}.azure-devices.net".format(iothub_name)	mqtt_port = 8883	topic = "devices/{}/messages/devicebound/#".format(device_id)		def error_str(rc):	    return "Some error occurred. {}: {}".format(rc, mqtt.error_string(rc))		def on_disconnect(unused_client, unused_userdata, rc):	    print("on_disconnect", error_str(rc))		def on_connect(client, userdata, flags, response_code):	    print("Connected with status: {0}".format(response_code))	    client.subscribe(topic, 1)		def on_subscribe(client, userdata, mid, granted_qos):	    print("Subscribed: "+str(mid)+" "+str(granted_qos))		def on_message(client, userdata, msg):	    print("Topic: {0} -- Payload: {1}".format(msg.topic, str(msg.payload)))		if __name__ == "__main__":    	    client = mqtt.Client(device_id, protocol=mqtt.MQTTv311)		    client.tls_set(root_ca,	                   certfile = public_crt,	                   keyfile = private_key,	                   cert_reqs = ssl.CERT_REQUIRED,	                   tls_version = ssl.PROTOCOL_TLSv1_2,	                   ciphers = None)		    client.on_connect = on_connect	    client.on_message = on_message	    client.on_disconnect = on_disconnect		    print("Connecting to Azure IoT Hub...")	    client.connect(mqtt_url, mqtt_port, keepalive=60)	    client.loop_forever()	</code></pre>		<p>When I run, I am getting the following output:</p>		<blockquote>	  <p>Connecting to Azure IoT Hub...<br>	  Connected with status: 3<br>	  ('on_disconnect', 'Some error occurred. 5: The connection was refused.')<br>	  Connected with status: 3<br>	  ('on_disconnect', 'Some error occurred. 5: The connection was refused.')  </p>	</blockquote>		<p>Can anyone suggest what I am missing?</p>	"
50417822,87851667,50417822,3,0,Fri May 18 19:26:00 EDT 2018,1658906,"Maybe this documentation might help: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-mqtt-support#using-the-mqtt-protocol-directly"
50417822,87852116,50417822,3,0,Fri May 18 19:46:00 EDT 2018,1930814,"Hello, @juunas . I already had read that before post my question here. It was helpful, for the publishing process. The "subscribe" section (Receiving cloud-to-device messages) is not good enough."
50417822,50441437,50417822,2,1,Mon May 21 03:02:00 EDT 2018,6601582,"<p>Based on the document <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-mqtt-support#using-the-mqtt-protocol-directly" rel="nofollow noreferrer">"Using the MQTT protocol directly"</a>, you need </p>		<blockquote>	  <p>to download and reference the DigiCert Baltimore Root Certificate. This certificate is the one that Azure uses to secure the connection.</p>	</blockquote>		<p>As you did in the publishing process like this:</p>		<pre><code>client.tls_set(ca_certs=path_to_root_cert,     	               certfile=None, keyfile=None, 	               cert_reqs=ssl.CERT_REQUIRED,       	               tls_version=ssl.PROTOCOL_TLSv1, 	               ciphers=None)	</code></pre>		<p>Also, you need <strong>set username and password</strong>:</p>		<pre><code>client.username_pw_set(username=iot_hub_name+".azure-devices.net/" + device_id, password=sas_token)	</code></pre>		<p>At last, you can <strong>subscribe</strong> like this:</p>		<pre><code>client.subscribe(topic=topic, qos=0)	</code></pre>		<p>Sample code for <strong>Security Keys authenticated device</strong>: </p>		<pre><code>import paho.mqtt.client as mqtt	import ssl, random	from time import sleep		path_to_root_cert = "./certs/digicertbaltimoreroot.cer"		iothub_name = "your hub name"	device_id = "device1"	sas_token = "SharedAccessSignature sr=[your hub name].azure-devices.net%2Fdevices%2Fdevice1&amp;sig=[sig]&amp;se=1526955728"	mqtt_url = "{}.azure-devices.net".format(iothub_name)	mqtt_port = 8883	topic = "devices/{}/messages/devicebound/#".format(device_id)		def error_str(rc):	    return "Some error occurred. {}: {}".format(rc, mqtt.error_string(rc))		def on_disconnect(unused_client, unused_userdata, rc):	    print("on_disconnect", error_str(rc))		def on_connect(client, userdata, flags, response_code):	    print("Connected with status: {0}".format(response_code))	    client.subscribe(topic, 1)		def on_subscribe(client, userdata, mid, granted_qos):	    print("Subscribed: "+str(mid)+" "+str(granted_qos))		def on_message(client, userdata, msg):	    print("Topic: {0} -- Payload: {1}".format(msg.topic, str(msg.payload)))		if __name__ == "__main__":    	    client = mqtt.Client(device_id, protocol=mqtt.MQTTv311)		    client.username_pw_set(username=iothub_name+".azure-devices.net/" + device_id, password=sas_token)		    client.tls_set(ca_certs=path_to_root_cert, certfile=None, keyfile=None, cert_reqs=ssl.CERT_REQUIRED, tls_version=ssl.PROTOCOL_TLSv1, ciphers=None)		    client.on_connect = on_connect	    client.on_message = on_message	    client.on_disconnect = on_disconnect			    print("Connecting to Azure IoT Hub...")	    client.connect(mqtt_url, mqtt_port, keepalive=60)	    client.subscribe(topic=topic, qos=0)	    client.loop_forever()	</code></pre>		<p>Sample code for <strong>x509 authenticated device</strong>:	(Need provide device certificate and private key files. No need SAS token as password; just leave it empty. But still need set username.)</p>		<pre><code>import paho.mqtt.client as mqtt	import ssl, random	from time import sleep		root_ca = "./certs/digicertbaltimoreroot.cer"	public_crt = './certs/mydevice-public.pem'	private_key = './certs/mydevice-private.pem'		iothub_name = "your hub name"	device_id = "mydevice"	mqtt_url = "{}.azure-devices.net".format(iothub_name)	mqtt_port = 8883	topic = "devices/{}/messages/devicebound/#".format(device_id)		def error_str(rc):	    return "Some error occurred. {}: {}".format(rc, mqtt.error_string(rc))		def on_disconnect(unused_client, unused_userdata, rc):	    print("on_disconnect", error_str(rc))		def on_connect(client, userdata, flags, response_code):	    print("Connected with status: {0}".format(response_code))	    client.subscribe(topic, 1)		def on_subscribe(client, userdata, mid, granted_qos):	    print("Subscribed: "+str(mid)+" "+str(granted_qos))		def on_message(client, userdata, msg):	    print("Topic: {0} -- Payload: {1}".format(msg.topic, str(msg.payload)))		if __name__ == "__main__":    	    client = mqtt.Client(device_id, protocol=mqtt.MQTTv311)		    client.on_connect = on_connect	    client.on_message = on_message	    client.on_disconnect = on_disconnect		    client.username_pw_set(username=iothub_name+".azure-devices.net/" + device_id, password="")		    client.tls_set(root_ca,	                   certfile = public_crt,	                   keyfile = private_key,	                   cert_reqs = ssl.CERT_REQUIRED,	                   tls_version = ssl.PROTOCOL_TLSv1_2,	                   ciphers = None)	    client.tls_insecure_set(False)			    print("Connecting to Azure IoT Hub...")	    client.connect(mqtt_url, mqtt_port, keepalive=60)	    client.subscribe(topic=topic, qos=0)	    client.loop_forever()	</code></pre>		<p><strong>Note</strong>: The topic is "devices/{device-id}/messages/devicebound/<strong>#</strong>".</p>		<p>How to create device certificate files you can reference <a href="https://github.com/Azure/azure-iot-sdk-c/blob/master/tools/CACertificates/CACertificateOverview.md" rel="nofollow noreferrer">here</a>.</p>		<p><strong>Update:</strong> These sample code used to receive <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messages-c2d" rel="nofollow noreferrer">D2C messages</a> that you can send like this for simple test:</p>		<p>From <a href="https://github.com/Azure/azure-iot-sdk-csharp/tree/master/tools/DeviceExplorer#send" rel="nofollow noreferrer">device explorer</a>:</p>		<p><a href="https://i.stack.imgur.com/jQtO4.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/jQtO4.png" alt="enter image description here"></a></p>		<p>From azure portal:</p>		<p><a href="https://i.stack.imgur.com/C03qd.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/C03qd.png" alt="enter image description here"></a></p>		<p><strong>Upate:</strong> Receive D2C messages:</p>		<p>As I pointed out in my comments, Azure IoT Hub is not generic MQTT brober, so you can't directly subscribe messages sent from the device.	To workaround it, you can use the Event Hubs-compatible endpoint exposed by the IoT Hub like "<a href="https://docs.microsoft.com/en-us/azure/iot-hub/quickstart-send-telemetry-python#read-the-telemetry-from-your-hub" rel="nofollow noreferrer">Read the telemetry from your hub</a>	" part does. But unfortunately, Python doesn't support this way. You can use the iothub-explorer CLI utility or either create a <a href="https://docs.microsoft.com/en-us/azure/iot-hub/quickstart-send-telemetry-node#read-the-telemetry-from-your-hub" rel="nofollow noreferrer">Node.js</a> or a <a href="https://docs.microsoft.com/en-us/azure/iot-hub/quickstart-send-telemetry-dotnet" rel="nofollow noreferrer">.NET</a> or <a href="https://docs.microsoft.com/en-us/azure/iot-hub/quickstart-send-telemetry-java#read-the-telemetry-from-your-hub" rel="nofollow noreferrer">Java</a> event hub-based console app to read the device-to-cloud messages from IoT Hub.</p>	"
50417822,87994937,50441437,3,0,Wed May 23 14:31:00 EDT 2018,1930814,"I was going to open another question, asking about this, but I just read again my question here. I think it is not fully answered since I started it with: **I am trying to receive "notifications" from IoT Hub when some data is published to the MQTT topic `devices/device_id/messages/events/`**. So, I think it is not fully answered yet. Agree, @Rita ? You still think it is better to open a new question? The content will be almost the same. =]"
50417822,87931155,50441437,3,0,Tue May 22 02:26:00 EDT 2018,6601582,"You can't subscribe the messages that device sent to Azure IoT Hub.(I mean publish script in this question.) Azure IoT Hub is not common MQTT broker. You can subscribe messages we discussed here are D2C messages that you can send from device explorer or azure portal. See my update answer."
50417822,88035577,50441437,3,0,Thu May 24 14:16:00 EDT 2018,1930814,"Thank you again, @Rita . So, it seems the "IoT hub" is very limited. With what you said, I can not apply the IoT hub to monitor something and do some kind of processing regarding the received data (events)..."
50417822,88079150,50441437,3,0,Fri May 25 16:43:00 EDT 2018,1930814,"I am understanding the "misuderstanding", @Rita . This is due to the fact that MQTT is a protocol generally used for pub/sub systems. AWS IoT allows developers to implement code that publish to a specific "point" and subscribe to it in order to receive the published values... Google IoT also allows this, although not so simple as AWS IoT. So, I would like to do the same with Azure IoT Hub. This misunderstanding would not happen if all these providers were following some standardization (or even just implementing a pub/sub system as it has to be). So, I'd like to get these published values."
50417822,87911297,50441437,3,0,Mon May 21 12:37:00 EDT 2018,1930814,"You are right. I added the username and it connected. But, unfortunately, I can not see the notifications (published values received). Do you suggest something? The values are being published, by publish script, and the output of the subscribe script is: `Connecting to Azure IoT Hub...	Connected with status: 0	('on_disconnect', 'Some error occurred. 1: Out of memory.')	Connected with status: 0	('on_disconnect', 'Some error occurred. 1: Out of memory.')	`."
50417822,88013018,50441437,3,0,Thu May 24 02:48:00 EDT 2018,6601582,"@DaltonCézane About receiving D2C message, you can check my update."
50417822,88057094,50441437,3,0,Fri May 25 06:09:00 EDT 2018,6601582,"@DaltonCézane It seems there is some misunderstanding of what I have said. Come back to your "subscribe" code(python), it can't receive D2C message. That's what I mean. If you want to processing these D2C message(events) at back end, for example, you can set event trigger for Azure function and process the event when received. But this is not the only option."
50417822,87906486,50441437,3,0,Mon May 21 10:10:00 EDT 2018,6601582,"@DaltonCézane You also need set username but no need SAS token as password. You can check my update answer."
50417822,87971752,50441437,3,0,Wed May 23 02:46:00 EDT 2018,6601582,"@DaltonCézane This is another question distracted from the initial question. We can close this question instead of extending longer. This can be beneficial to other community members reading this. For new issues you can open new questions. I am glad to help you."
50417822,87898425,50441437,3,0,Mon May 21 05:00:00 EDT 2018,1930814,"But I did all you mentioned, as can be seen in my code, @Rita . The only difference is that I am using a x509 certificate to authentication instead of SAS. Because of this, I do not need the username/password..."
50417822,87958240,50441437,3,0,Tue May 22 16:19:00 EDT 2018,1930814,"Then, what if I want to receive the "published" messages (`devices/device_id/messages/events/`) in some kind of notification? Isn't it possible? Or even if I want to do programaticaly what you said is made from device explorer/azure portal?"
50417822,87993160,50441437,3,0,Wed May 23 13:49:00 EDT 2018,1930814,"You are right. I will mark this, since the code now is working... As soon as possible, I will open another, asking about the published values to `/events` and how to subscribe to receive them."
50417822,50829467,50417822,2,0,Wed Jun 13 05:14:00 EDT 2018,5752362,"<p>As Rita already mentioned that D2C message was not supported to received on the device side currently.</p>		<p>Azure IoT hub is a cloud gate way in the IoT solution like figure below:	<a href="https://i.stack.imgur.com/YrHAB.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/YrHAB.png" alt="enter image description here"></a></p>		<p>Azure IoT hub provide the service for backed solution and device side based on the <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-endpoints" rel="nofollow noreferrer">endpoints</a>. Currently it provides the <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-d2c-guidance" rel="nofollow noreferrer">device to cloud feature</a> like <strong>D2C messages</strong>, <strong>Device Twin's reported properties</strong> and <strong>file upload</strong>. And from cloud we can use the <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-c2d-guidance" rel="nofollow noreferrer">cloud to device feature</a> like direct method, <strong>Twin's desired properties</strong> and <strong>Cloud-to-device messages</strong>. </p>		<blockquote>	  <p>I am trying to receive "notifications" from IoT Hub when some data is published to the MQTT topic devices/device_id/messages/events/</p>	</blockquote>		<p>It depends on which side you want to receive the message. Currently there are two scenarios Azure IoT hub supports.</p>		<ol>	<li><p>Send Device-to-Cloud message on device side and receive the message on the cloud back-end solution(D2C message only support AMQP protocol)</p></li>	<li><p>Send Could-to-device message on cloud back end solution and receive the message on the device side.</p>		<p>And if you have any idea or feedback about Azure IoT Hub, you can submit it via <a href="https://feedback.azure.com/forums/321918-azure-iot" rel="nofollow noreferrer">Azure IoT Hub - user voice</a>.</p></li>	</ol>	"
