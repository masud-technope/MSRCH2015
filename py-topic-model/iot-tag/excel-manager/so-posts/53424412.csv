thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
53424412,53424412,null,1,1,Thu Nov 22 05:28:00 EST 2018,78356,"<p>We have an IoT app where we need to force sending requests over wifi, even when the OS thinks it should be using mobile data instead (e.g. when google is not reachable over the current wifi network)</p>		<p>DownloadManager.Request allows specifying which network interfaces are allowed per-request, with the setAllowedNetworkTypes method.  </p>		<p>We invoke it like:</p>		<pre><code>DownloadManager.Request req = new DownloadManager.Request(uri);	req.setAllowedNetworkTypes(DownloadManager.Request.NETWORK_WIFI);	</code></pre>		<p>This works fine on Android 7-9, except on certain devices, including the Pixel 2.  With the default system settings on these devices, it still tries to use the cellular network.  </p>		<p>The expected behavior can be reinstated by setting "Network rating provider" to None in the Advanced wifi settings, but we can't ask our users to do this.</p>		<p>ConnectivityManager.bindProcessToNetwork also works at forcing the app to use wifi, but this is a heavy-handed solution that's on ongoing safety liability in a multithreaded application.</p>		<p>Any ideas on how to restore setAllowedNetworkTypes to its advertised capabilities?</p>	"
