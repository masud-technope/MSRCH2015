thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
30884390,30884390,null,1,1,Wed Jun 17 06:59:00 EDT 2015,3563133,"<p>I have receiving data from our sensors using GET. The request format is: <a href="http://IP:PORT/PATH?Operation=InsertObservation&amp;value=0.0012&amp;unit_id=123456&amp;sensor_id=75648">http://IP:PORT/PATH?Operation=InsertObservation&amp;value=0.0012&amp;unit_id=123456&amp;sensor_id=75648</a>. How I can, using iotagent-node-lib, write them to Orion Context Broker?</p>	"
30884390,30895065,30884390,2,0,Wed Jun 17 14:49:00 EDT 2015,4340880,"<p>The fast answer is: "using the iotagentLib.update() method".  The slow and complete one imply some other steps you will need to complete to have a fully working agent. I suggest you take a look at the code of <a href="https://github.com/telefonicaid/sigfox-iotagent" rel="nofollow">https://github.com/telefonicaid/sigfox-iotagent</a>. That's one of the latest IOTAs we started to develop, and makes use of the IoT Agent Node Lib. Sigfox callbacks use HTTP calls much like your approach, so it should be really easy to modify the Sigfox Agent's code to feet your needs. Most of the interesting code is in this file:</p>		<p><a href="https://github.com/telefonicaid/sigfox-iotagent/blob/develop/lib/sigfoxHandlers.js" rel="nofollow">https://github.com/telefonicaid/sigfox-iotagent/blob/develop/lib/sigfoxHandlers.js</a></p>		<p>I think you can reuse most of the code, excluding the sigfoxParser. If you have further doubts, you should be able to solve your doubts using iotagent-node-lib documentation. </p>	"
