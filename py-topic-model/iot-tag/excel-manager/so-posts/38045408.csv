thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38045408,38045408,null,1,2,Mon Jun 27 03:20:00 EDT 2016,4790051,"<p>I am trying to build some smart home devices by myself. And I am very interested in building IoT algorithms like Nest Thermostat does which is able to learn the characteristics of the house and the behavior of the family members.</p>		<p>Though I have some machine learning basics, I barely know about thermal model which is all the researches and methods of Nest based on.</p>		<p>So if I want do some study and create similar algorithms like Nest do by myself, how should I get started? Any suggested references?</p>	"
38045408,38045945,38045408,2,2,Mon Jun 27 04:26:00 EDT 2016,167735,"<p>You said it yourself - thermal modelling. So read up on thermodynamics. If you don't read on thermodynamics you won't know which part of thermodynamics to read on to model heat distribution in a house.</p>		<p>One of the most important thing about being a programmer is not programming. Programming is almost the least important thing a programmer does (slightly lower than debugging). The most important thing about being a programmer is to understand the requirements of the program.</p>		<p>So someone writing an accounting program should know a bit about accounting. He doesn't need to be an expert but he should at least be able to spot a bug.</p>		<p>Working for big companies you'll find that usually you'll have project managers and systems analysts helping you figure out the requirements. But coding your own project you have to be your own project manager and architect. So you have to do the reading-up.</p>		<hr>		<p>Now, apart from the general advice above, when writing software to control real-world objects and phenomena you can't get away from knowing about the PID loop (Proportional, Integral, Differential). It's how software thermostats control the temperature of industrial ovens. It's how quadcopters can hover without becoming unstable. It's how Segways balance themselves.</p>		<p>The theory behind PID is more than a hundred years old. It was developed to govern steam engines. But it is so useful and important that we generally still depend on it in electronics.</p>		<p>There's a lot of math-heavy theory out there about PIDs. There are also a lot of less complicated rule-of-thumb guides about PIDs aimed at technicians and mechanics. I suggest reading the simpler less theory-heavy guides first then work your way up if you need to know something. </p>	"
38045408,63531656,38045945,3,0,Mon Jun 27 04:35:00 EDT 2016,4360875,"interesting :D there is lot to read"
