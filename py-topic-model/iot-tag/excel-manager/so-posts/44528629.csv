thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
44528629,44528629,null,1,1,Tue Jun 13 18:08:00 EDT 2017,4304746,"<p><h2>Objective</h2><br>	A scalable/resilient IoT platform with potentially thousands of devices.	We are using kubernetes to deploy this chain:<br></p>		<pre><code>kafka --&gt; logstash --&gt; elasticsearch	</code></pre>		<h3>Choice 1</h3>		<p>We start with a static configuration and manually scale up as demand grows.<br>	Pros: simple and works.<br>	Cons: requires human intervention.<br></p>		<h3>Choice 2</h3>		<p>We build a software that monitors the different components, and automatically scale up when demand grows.<br>	Pros: Does not require human intervention.<br>	Cons: Complex.<br></p>		<p>It is complex because too many case arise, for example:<br></p>		<ul>	<li>Kafka: Simply adding a new broker does distribute load, we have to create a new partition for a set of topics, or we initially create enough partitions then we reassign partitions. </li>	<li>Elasticsearch: If we want to distribute read load, we must add a data node, increase the number of replicas. If we want to distribute the write load we must use sharding. Data is split into shards, the number of shards cannot be altered after index creation, we can bypass this limitation by the use of aliases.<br></li>	</ul>		<p><br>	Autoscaling also involve interaction with the cloud provider to automatically add resources.<br></p>	"
44528629,76051181,44528629,3,0,Tue Jun 13 19:14:00 EDT 2017,684908,"This kind of question is generally considered "too broad" on Stack Overflow. But I'm not sure why you would consider choice 2 until it is an issue. Why wouldn't you just start simple and actually scale and/or look for an auto-scaling solution for Kubernetes when it becomes a problem? Kubernetes already provides easy components (Deployments and DaemonSets) to help scale the application. I imagine in the future there will be other software components to help scale the compute resources automatically. So, you probably wouldn't have much reason to do choice 2."
