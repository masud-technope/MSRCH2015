thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
58160857,58160857,null,1,0,Mon Sep 30 02:33:00 EDT 2019,11701191,"<p>I have 10 thousand devices and each device has 10 thousand records. For each record, we should have columns including devId(int),devName(string),devgroup(int),time(timestamp),temperature(int) and humidity(float). To be specific, devId ranges from 1 to 10000; devName similarly ranges from 'dev'_1 to 'dev_10000'; devGroup ranges from 0 to 99 (every 100 devices as a group). In DolphinDB, I have desgined two schemas:</p>		<pre><code>dbDir = 'dfs://devDB'	if(existsDatabase(dbDir))	   dropDatabase(dbDir)	range_schema=0..100 * 100 + 1	db = database(dbDir, RANGE, range_schema)	dev = db.createPartitionedTable(schema, `dev , `devId)	</code></pre>		<p>Or if I partition like this:</p>		<pre><code>dbDir = 'dfs://devDB'	if(existsDatabase(dbDir))	   dropDatabase(dbDir)	range_schema=0..100 * 100 + 1	db1 = database("", VALUE, 0..99)	db2 = database("", RANGE, range_schema) 	db = database(dbDir, COMPO, [db1,db2])	db.createPartitionedTable(schema,`dev,`devGroup`devId)	</code></pre>		<p>I wonder which is more proper, or is there a partition rule?</p>	"
