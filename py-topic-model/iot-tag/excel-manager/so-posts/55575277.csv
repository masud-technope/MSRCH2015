thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
55575277,55575277,null,1,0,Mon Apr 08 14:03:00 EDT 2019,3457384,"<p>I am trying to make a smart IOT device (capable of performing smart Computer Vision operations, on the edge device itself). A Deep Learning algorithm (written in python) is implemented on Raspberry Pi. Now, while shipping this product (software + hardware) to my customer, I want that no one should log in to the raspberry pi and get access to my code. The flow should be something like, whenever someone logs into pi, there should be some kind of key that needs to be input to get access to code. But in that case how OS will get access to code and run it (without key). Then I may have to store the key on local. But still there is a chance to get access to key and get access to the code. I have applied a patent for my work and want to protect it.</p>		<p>I am thinking to encrypt my code (written in python) and just ship the executable version. I tried pyinstaller for it, but somehow there is a script available on the internet that can reverse engineer it. </p>		<p>Now I am little afraid as it can leak all my effort of 6 months at one go. Please suggest a better way of doing this.</p>		<p>Thanks in Advance.</p>	"
55575277,97849556,55575277,3,1,Mon Apr 08 14:08:00 EDT 2019,699305,"there is no way to both ship out code, even compiled, and keep it entirely to yourself. The best you can do is not to release parts of the program at all; e.g. if you could embed in the device a trained model and the code that reads it, but not the code that trains it."
55575277,97850052,55575277,3,0,Mon Apr 08 14:21:00 EDT 2019,3457384,"But the thing is, I also don't want to give out the trained model too. Bcz my code contains few customs logics on top of detection, that also I don't want to reveal.		Let me know if a way is there for the same."
55575277,97850755,55575277,3,0,Mon Apr 08 14:40:00 EDT 2019,699305,"You can't have your cake and eat it too. There are things you can do to obfuscate your code, but if it's running on someone else's device, they can inspect it and reverse-engineer it if they can put in the effort and skill. Start from that baseline, and then you can protect your assets from _some_ users (the ones who are not professional hackers out to steal your intellectual property), and be happy with the result."
55575277,97850783,55575277,3,0,Mon Apr 08 14:41:00 EDT 2019,699305,"If you want your code to be safe, don't embed it. Embed a client app that will submit everything to your api (internet connection required), and get back the results from your server."
55575277,55578897,55575277,2,0,Mon Apr 08 17:39:00 EDT 2019,11063046,"<p>Keeping the code on your server and using internet access is the only way to keep the code private (maybe). Any type of distributed program can be taken apart eventually. You can't (possibly shouldn't) try to keep people from getting inside devices they own and are in their physical possession. If you have your property under patent it shouldn't really matter if people are able to see the code as only you will be legally able to profit from it.</p>		<p>As a general piece of advice, code is really difficult to control access to. Trying to encrypt software or apply software keys to it or something like that is at best a futile attempt and at worst can often cause issues with software performance and usability. The best solution is often to link a piece of software with some kind of custom hardware device which is necessary and only you sell. That might not be possible here since you're using generic hardware but food for thought.</p>	"
