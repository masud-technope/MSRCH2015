thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33116867,33116867,null,1,3,Wed Oct 14 04:53:00 EDT 2015,4556996,"<p>I have managed to create my first iot project and can get an image to load on a button press on my Raspberry Pi2.</p>		<p>I have tried to put together code that will get me a random image from a set of images but I have a few areas I am falling over.</p>		<p>1) I don't know how to scan a USB stick from the Pi</p>		<p>2) I cannot seem to load an image from a file, only from an embedded resource.</p>		<p>3) I cannot seem to work out how to close the app, I would have thought <code>App.exit</code> would do it but it appears not.</p>		<p>Basically I am just playing around and I thought a good learning project would be to create a digital photo frame which randomly shows images from a USB stick, it's not gone well for me at all.</p>		<p>If I can get it to work on the button press I should be able to drop in a timer and have it run all the time quite easily.</p>		<p>Here is my code, you can see from my commented out parts what I have tried:</p>		<pre><code>' The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&amp;clcid=0x409	''' &lt;summary&gt;	''' An empty page that can be used on its own or navigated to within a Frame.	''' &lt;/summary&gt;		Public NotInheritable Class MainPage	    Inherits Page	    Dim random As Random = New Random()		    Private Sub ClickMe_Click(sender As Object, e As RoutedEventArgs)	        'Dim DirectoryPath As String = "F:/VB.Net files/Images/"	        'Dim finfo As FileInfo = New FileInfo(GetRandomImageFilePath(DirectoryPath))	        'Dim filename As String = finfo.Name.Replace(finfo.Extension, "")	        'BBPLogo.Source = New BitmapImage(New Uri("file:///" &amp; finfo.FullName, UriKind.Relative))	        BBPLogo.Source = New BitmapImage(New Uri("ms-appx:///Assets/Bowral-Bricks.png", UriKind.Absolute))	    End Sub		    Private Sub ExitButton_Click(sender As Object, e As RoutedEventArgs) Handles ExitButton.Click		    End Sub		    Public Function GetRandomImageFilePath(ByVal folderPath As String) As String	        Dim files() As String = Directory.GetFiles(folderPath, "*.png")	        Return files(random.Next(0, files.Length))	    End Function		End Class	</code></pre>		<p>Not sure if you need it but here is the xaml</p>		<pre><code>&lt;Page	    x:Class="PiTest01.MainPage"	    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"	    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"	    xmlns:local="using:PiTest01"	    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"	    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"	    mc:Ignorable="d" Height="480" Width="800"&gt;		    &lt;Grid&gt;	        &lt;Grid.Background&gt;	            &lt;ImageBrush Stretch="Fill"/&gt;	        &lt;/Grid.Background&gt;	        &lt;Image x:Name="BBPLogo" HorizontalAlignment="Left" Height="480" VerticalAlignment="Top" Width="800" RenderTransformOrigin="1.163,0.596" Stretch="UniformToFill"/&gt;	        &lt;StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="78,18,436,164" Height="178"&gt;	            &lt;Button x:Name="ClickMe" Content="Click Me!"  Margin="10" HorizontalAlignment="Center" Click="ClickMe_Click"/&gt;	            &lt;Button x:Name="ExitButton" Content="Exit" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="126"/&gt;	        &lt;/StackPanel&gt;	    &lt;/Grid&gt;	&lt;/Page&gt;	</code></pre>	"
33116867,54216621,33116867,3,2,Mon Oct 19 03:01:00 EDT 2015,4556996,"If you are going to down vote at least have the courtesy to say why so I can fix it. It shows both research effort by the way of commented out code and it is extremely clear what I am trying to do."
33116867,33225188,33116867,2,2,Mon Oct 19 22:44:00 EDT 2015,394331,"<p>I've tested the following on my Raspberry Pi so in theory it's all doable.</p>		<p><strong>(1) Finding image files on USB drive</strong></p>		<p>Firstly, you will need to add the "Removable Storage" capability to your app: open Package.appxmanifest, navigate to the Capabilities tab, and ensure that "Removable Storage" is checked. This will allow your app access to files on the USB drive. Secondly, Universal applications can only enumerate/read/modify file types that have been explicitly declared in the manifest under "File Type Associations". Again open Package.appxmanifest, navigate to the Declarations tab, select "File Type Associations", and hit Add. You will now need to fill in the fields on the right-hand pane according to what file types your app wants to support: details can be found <a href="https://msdn.microsoft.com/en-us/library/windows/apps/hh452684.aspx" rel="nofollow noreferrer">on MSDN</a>.</p>		<p>You can then enumerate removable drives and their sub-files/folders like in <a href="https://msdn.microsoft.com/en-us/library/windows/apps/mt185400" rel="nofollow noreferrer">these examples</a>. For example, to enumerate top-level files (C#, sorry):</p>		<pre class="lang-cs prettyprint-override"><code>var drives = await Windows.Storage.KnownFolders.RemovableDevices.GetItemsAsync();		foreach (var drive in drives)	{	    var files = await drive.GetFilesAsync();	}	</code></pre>		<p>Also remember that only sub-folders and explicitly associated file types will show up.</p>		<p><strong>(2) Loading image from a file</strong></p>		<p><a href="https://stackoverflow.com/a/18419269/394331">It is not possible to load a file directly from a file:// URI</a>. Instead you need to go via a StorageFile and stream, like for example:</p>		<pre class="lang-cs prettyprint-override"><code>var file = await StorageFile.GetFileFromPathAsync(@"E:\test.png");		using (var stream = await file.OpenAsync(FileAccessMode.Read))	{	    var bmp = new BitmapImage();	    await bmp.SetSourceAsync(stream);	    ImageControl.Source = bmp;	}	</code></pre>		<p><strong>(3) Exiting the application</strong></p>		<p><code>App.Current.Exit();</code> appears to work for me, exiting the app and weirdly showing the "Please wait while we set up your device" progress spinner which apparently still lurks behind.</p>	"
33116867,54307363,33225188,3,0,Wed Oct 21 07:06:00 EDT 2015,394331,"Which part is giving problems?"
33116867,54309751,33225188,3,0,Wed Oct 21 08:16:00 EDT 2015,4556996,"Part 1 and 2 but that is because I am a vba coder so getting my head around vb.net is a challenge. Part 3 works perfectly though :) the difficulty is further compounded by the pi as I can't use picture boxes and the like as I have in a previous vb.net project"
33116867,54303056,33225188,3,0,Wed Oct 21 03:54:00 EDT 2015,4556996,"Awesome, I still can't make it work but your comments and links have given me direction, I am pretty sure I should be able to work it out from here :)."
