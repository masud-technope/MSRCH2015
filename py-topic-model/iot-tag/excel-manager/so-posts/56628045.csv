thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56628045,56628045,null,1,-1,Mon Jun 17 09:02:00 EDT 2019,11204992,"<p>I am trying unsuccessfully to export Azure Iot Hub devices twins to a Blob Storage, so that it can be used as a reference input in Azure Stream Analytics.	I have read and understood this documentation, <a href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-bulk-identity-mgmt" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-bulk-identity-mgmt</a>.	But it is in C#, and I have no idea how to make it in nodejs or javascript ... Someone who has tried something similar, or are there any other documentation or examples?</p>	"
56628045,56704142,56628045,2,0,Fri Jun 21 13:09:00 EDT 2019,9401038,"<p>You can leverage <a href="https://github.com/Azure/azure-iot-sdk-node" rel="nofollow noreferrer">azure iot node sdk</a> . Here's a snippet on how to export devices to Blob:</p>		<pre><code>registry.exportDevicesToBlob(outputSasUrl, false, function (error, result) {	                       if (error) {	                           console.error('Could not create export job: ' + error.message);	                       } else {	                           console.log('--------------\r\nDevices Export Job Identifier:--------------\r\n' + result);	                           var jobId = result.jobId;	                           var interval = setInterval(function () {	                               registry.getJob(jobId, function (error, result) {	                                  if (error) {	                                      console.error('Could not get job status: ' + error.message + ' : ' + error.responseBody);	                                  } else {	                                      console.log('--------------\r\njob ' + jobId + ' status:\r\n--------------\r\n' + result);	                                      var status = result.status;	                                      if (status === "completed") {	                                          clearInterval(interval);	                                      }	                                  }	                              });	                           }, 500);	                       } 	                   });	</code></pre>	"
