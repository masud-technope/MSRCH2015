thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33539520,33539520,null,1,0,Thu Nov 05 08:15:00 EST 2015,5528149,"<p>Is it possible to aggregate measurements or create custom queries beyond the standard <code>dateFrom</code> <code>dateTo</code> queries?</p>		<p>As an example, I have measurements which have a time delta of 1 minute (2015-01-01T05:05:00, 2015-01-01T05:05:00, 2015-01-01T05:05:00, ...) and I would like to query the measurements at 15 minute intervals (2015-01-01T05:15:00, 2015-01-01T05:30:00, 2015-01-01T05:45:00, ...)</p>		<p>So far I have only come up with these solutions:</p>		<ol>	<li>Using the standard api request as in	<code>https://tenant.cumulocity.com/measurement/measurements?dateFrom=2015-10-01&amp;dateTo=2015-11-05</code>	and then throwing away most of the data will use a massive amount of time loading the data.</li>	<li>Using cep (cumulocity event language) to generate a new measurement every 15 minutes using the nearest 1 minute measurement seems like a bit of overkill and not very elegant.</li>	<li>Batch requesting the exact minute 	<code>https://tenant.cumulocity.com/measurement/measurements?dateFrom=2015-11-05T05:15:00%2B01:00&amp;dateTo=2015-11-05T05:16:00%2B01:00</code>	which will in a massive amount of API requests and also does not seem very efficient.</li>	<li>Use the <code>/measurements/series</code> endpoint which will only give me all series, even those I do not want, as well as only having the aggregation options hourly and daily (as far as I can tell).  </li>	</ol>		<p>Is there a better way of doing this?</p>	"
33539520,33540912,33539520,2,1,Thu Nov 05 09:32:00 EST 2015,2667868,"<p>you have captured nearly all of the mechanisms that are currently available. There is one more possibility -- not sure if this is an option for you: </p>		<ol start="5">	<li>Mark the fifteenth measurement when sending it from the device, using e.g. a different type.</li>	</ol>		<p>I would normally use 2. It's actually quite efficient, it's similar to a materialized view in traditional SQL, plus you can use the data everywhere and in all widgets.</p>		<p>Good luck :-)</p>		<p>Cheers,	Andr√©</p>	"
33539520,33541829,33539520,2,1,Thu Nov 05 10:12:00 EST 2015,2532578,"<p>I would prefer the CEP solution. The rule wouldn't be that complicated. You would of course then store these measurements twice which is not that nice but having your desired measurement with a specific type or fragment will give you the fastest way to query it.</p>		<p>Instead of copying the measurement you could just add a special fragment to the measurement every 15 min in the CEP rule. You cannot update  measurements so you would have to delete the measurement incoming every 15 min and then create a new measurement with exactly the same values but add a fragement (e.g. "aggregatedMeasurement": {}).</p>		<p>Your query then looks like this:	<a href="https://tenant.cumulocity.com/measurement/measurements?dateFrom=2015-10-01&amp;dateTo=2015-11-05&amp;fragmentType=aggregatedMeasurement" rel="nofollow">https://tenant.cumulocity.com/measurement/measurements?dateFrom=2015-10-01&amp;dateTo=2015-11-05&amp;fragmentType=aggregatedMeasurement</a></p>		<p>One more idea for point 3:</p>		<p>You could use SmartREST to create a template with the query string and leave the dateFrom and dateTo as placeholders.	From the client side you then would have to make only one request using the bulking feature in SmartREST.	On the server side this would still be transformed into the single requests so you wouldn't gain anything in speed.</p>	"
