thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
39247797,39247797,null,1,2,Wed Aug 31 11:00:00 EDT 2016,4266442,"<p>According to Microsoft's api documentation (and their samples for IOT Hub) for the <a href="https://msdn.microsoft.com/en-us/library/microsoft.azure.devices.registrymanager.aspx" rel="nofollow">RegistryManager Class</a> (Microsoft.Azure.Devices namespace) there should be several "QueryDevices" methods exposed.  Yet when I create a new console app, downloading the latest version of Microsoft.Azure.Devices from Nuget, it is no where to be seen in the RegistryManager class definition or intellisense.  I do see many of the other methods like GetDevices, AddDevices, etc.</p>		<p>I am trying to query on my devices so I can send messages to groups of devices.</p>		<p>I have tried multiple versions including: 1.0.14 (latest at the time of writing this), 1.0.11, 1.0.09, and 1.0.2.</p>		<p>Any idea if the Query methods for IOT hub devices were moved to another namespace/class?  Or perhaps I am missing something?</p>	"
39247797,39248136,39247797,2,1,Wed Aug 31 11:15:00 EDT 2016,6625726,"<p>As far as I know, those Query methods are only available in the pre-release version <a href="https://www.nuget.org/packages/Microsoft.Azure.Devices/1.1.0-preview-003" rel="nofollow">1.1.0</a>. If you want to try them out, tick the "Include prerelease" checkbox in NuGet and get the version <code>1.1.0-preview-003</code>.</p>		<p>This can also be verified by checking out the source code on <a href="https://github.com/Azure/azure-iot-sdks" rel="nofollow">GitHub</a>. In the master branch, there's no mention of QueryDevices methods. However, in the <em>dmpreview</em> branch <a href="https://github.com/Azure/azure-iot-sdks/blob/dmpreview/csharp/service/Microsoft.Azure.Devices/RegistryManager.cs" rel="nofollow">they exist</a>. Those methods were <a href="https://github.com/Azure/azure-iot-sdks/commit/40728ff84cfb54f8cc8b4b84006c716fac73ed7d" rel="nofollow">added in the end of May</a> and haven't made their way to the stable release yet.</p>	"
39247797,65832592,39248136,3,0,Wed Aug 31 11:29:00 EDT 2016,4266442,"+1 You are exactly right, the pre-release includes these.  Wow, confusing to me they would include pre-release specifics in their api.  Thank you very much, you saved me a lot of frustration."
39247797,65832632,39248136,3,1,Wed Aug 31 11:30:00 EDT 2016,6625726,"@Nate No problem, I was also very confused when I saw that there's no mention of prerelease in MSDN."
