thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40511870,40511870,null,1,0,Wed Nov 09 16:37:00 EST 2016,4062492,"<p>My project is to build a product that has some PM 2.5 sensor, temperature sensor, humidity and I must decide what database I should choose. That product connects to the server and sent data to it.	I'm thinking about MongoDB and Cassandra. Don't know what is suitable for my project. Maybe my project is not big enough to build with Cassandra.	I want to have some advice. And if it has something better, you can let me know.</p>	"
40511870,40511924,40511870,2,2,Wed Nov 09 16:40:00 EST 2016,864763,"<p>I would recommend using a database specifically for time series data, such as <a href="https://www.influxdata.com/" rel="nofollow noreferrer">InfluxDB</a>.  Coupled with a good charting platform like <a href="http://grafana.org/" rel="nofollow noreferrer">Grafana</a> gives a great amount of flexibility and functionality out the box.</p>		<p>Both have free open source versions.</p>	"
40511870,68266589,40511924,3,0,Wed Nov 09 17:06:00 EST 2016,4062492,"InfluxDB for time series data, I have some other data, such as latitude and longitude, user data. Maybe I need to put time series database together with another database."
40511870,40523888,40511870,2,2,Thu Nov 10 09:20:00 EST 2016,1870387,"<p>We use MongoDB since some years for Sensor Date / Internet-of-things since some years and are satisfied. </p>		<p>When we selected MongoDB a few years ago, we selected it because compared to Cassandra it offered at that time (!) additionally:	* Multiple Indexing (index sensors by name, type, location, vendor, ...)	* Query language (i.e. find all sensors with old firmware version)	* Geo-spacial indexes (find sensors in certain area)	* Text search</p>		<p>Cassandra has introduced many improvements since then, please check yourself. </p>		<p>Main drawback: Storing time series data as "naive" documents is not that space efficient. You can find some hints in this presentation: <a href="http://www.slideshare.net/mongodb/mongodb-for-time-series-data-schema-design" rel="nofollow noreferrer">http://www.slideshare.net/mongodb/mongodb-for-time-series-data-schema-design</a>. But please be aware that this presentation describes optimisations that are IMHO only valid for the old storage engine (MMAP)! So for the new one (WiredTiger) you need to find other optimisations.</p>	"
