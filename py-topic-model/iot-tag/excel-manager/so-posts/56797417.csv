thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
56797417,56797417,null,1,0,Thu Jun 27 19:17:00 EDT 2019,4458718,"<p>We have an API for real time device info (location and some other things) for app users in a certain area (10-30K). The data refreshes in real time, but we get it through get requests. I don't know what the frequency would be, but they want to support future ML use cases. Does Kinesis make sense to use here? I am new to aws and don't know if I should write a lambda function that just writes it to s3 every minute, or if there is a specific service I should be using. Thanks!</p>	"
56797417,56802877,56797417,2,0,Fri Jun 28 07:44:00 EDT 2019,2831135,"<p><strong>Kinesis Firehose</strong> is the optimal solution according to the requirements you have described. </p>		<p>You can send your data from API Gateway directly to Firehose if no serious data transformation is required at this stage. Simple transformation and mapping you can perform at API Gateway level on "IntegrationRequest" stage, or simply proxy the data "as is".</p>		<p>The Firehose can then also transform the data using some Lambda if required to prepare it for S3.</p>		<p>The beauty of this architecture is that you use only AWS managed services here and  don't need to invent your own data-pipeline.</p>		<p><a href="https://docs.aws.amazon.com/firehose/latest/dev/what-is-this-service.html" rel="nofollow noreferrer">Read more about Firehose.</a></p>	"
56797417,100174958,56802877,3,0,Fri Jun 28 16:32:00 EDT 2019,4458718,"Thanks, I'm actually pretty close to having something like this set up. So would the approach be to have a lambda function run at some interval, do a pull from the API and post it to Kinesis? Theoretically it could be as many as 70K devices, each with 10-15 data points. Is that still a practical approach? And why post it to Kinesis here, why not write directly to a redshift table or something else? Just trying to understand the process and make sure I'm going the right direction.... thanks again!"
56797417,100198203,56802877,3,0,Sun Jun 30 06:06:00 EDT 2019,2831135,"Could you please explain what do you mean by "pull from API"?	API Gateway is a **synchronous** HTTP endpoint where your devices will post data. The Gateway than translates this to some back-end. The backend may return some response that the API will forward to the user or API Gateway can handle the response himself.	--- In the solution with Kinesis Firehose, you do not to create any mechanisms (Lambdas, EC2, etc) in between. AWS integrates API Gateway with Firehose automatically and the Firehose will stream this data to your destination. S3 was your initial requirement and is supported."
56797417,100236241,56802877,3,0,Mon Jul 01 20:38:00 EDT 2019,4458718,"So in this case the device does not post any data, we have to use GETrequest to get the data at any given time. Each API calls returns the current status of the data, we can make calls at any interval we choose. So to me it sounds like we just need a lambda to run at a certain interval, get the data and post to a redshift table? In my case I'm not sure what benefit Kinsesis would have? A few people are pushing for it but I don't see the need the more I think about it..."
56797417,100244430,56802877,3,0,Tue Jul 02 06:52:00 EDT 2019,2831135,"I can agree with your design. I just didn't realise at first that you have to actively PULL the data from your devices. It might very quickly become a hell to maintain this Lambda puller. 70*15k pulls is not a ***big*** deal, but you will need some tool to Orchestrate. I recommend having a look at `sosw` package in Python. We use it for Orchestration of similar Lambda workflows. The docs are still a bit raw, but it can save a lot of headache once you implement."
