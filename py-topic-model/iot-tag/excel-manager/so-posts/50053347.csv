thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
50053347,50053347,null,1,2,Thu Apr 26 23:45:00 EDT 2018,9705751,"<p>I will preface by saying I am new to AWS but am required to use it to set up a MQTT broker for class. The problem may stem that I am just unfamiliar with how it should be used but whenever I update the shadow of my thing "TestMichael" using a lambda function the rule should send an sms notification if the temperature is out of range but it doesn't. When I publish it under the test the notification works but not when the lambda function changes it. Does anybody know why that is?</p>		<p><strong>TLDR: Updating the thing's shadow with a lambda function won't activate the rule I created. Why is this?</strong></p>		<p>Heres the relevant lambda function and rule query:</p>		<pre><code>def lambda_handler(event, context):	temp = 74 #text should be sent if &gt; 70	client = boto3.client('iot-data', region_name='us-east-1')		#Code portion for changing the state	data = {"state" : { "reported" : { "Temperature" : temp , "Moisture" : moist, "Light" : light, "Conductivity" : conduct}}}	mypayload = json.dumps(data)	response = client.update_thing_shadow(	    thingName = 'TestMichael', 	    payload = mypayload	)	</code></pre>		<p>Here is the SQL query used in my rule:</p>		<pre><code>SELECT * FROM '$aws/things/TestMichael/shadow/update' WHERE Temperature &gt; 70	</code></pre>	"
50053347,50265426,50053347,2,0,Thu May 10 04:21:00 EDT 2018,3044186,"<p>When this happens, I check by using the test functionality in AWS IoT. You can listen to the '$aws/things/TestMichael/shadow/update' topic and see if it is getting data published when the lambda updates the shadow. </p>	"
