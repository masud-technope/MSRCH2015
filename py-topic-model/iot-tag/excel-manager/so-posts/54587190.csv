thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54587190,54587190,null,1,0,Fri Feb 08 06:39:00 EST 2019,4396482,"<p>I have some problem about my <code>TabLayout</code> And <code>SQLite</code>,</p>		<p>I work with IOT, MQTT,</p>		<p>when data publish from device, then data will be update to mysqlite and then show in listview. </p>		<p>It's Okay when I move to <code>TabLayout</code> Index 0 and Index 1, Problem is when I click <code>TabLayout</code> Index 3 and error showing when data read from <code>SQLite</code>.	error in </p>		<blockquote>	  <p><code>SQLiteDatabase database = this.getWritableDatabase();</code></p>	</blockquote>		<p>MainActivity</p>		<pre><code>        TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);	        tabLayout.addTab(tabLayout.newTab().setText("AirConditioner"));	        tabLayout.addTab(tabLayout.newTab().setText("Chiller"));	        tabLayout.addTab(tabLayout.newTab().setText("VoltMeter"));	        tabLayout.addTab(tabLayout.newTab().setText("AmpereMeter"));	        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);		        viewPager = (ViewPager) findViewById(R.id.pager);	        pagerAdapter = new PagerAdapter(getSupportFragmentManager(), tabLayout.getTabCount());	        viewPager.setAdapter(pagerAdapter);	        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));	        tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {	            @Override	            public void onTabSelected(TabLayout.Tab tab) {	                viewPager.setCurrentItem(tab.getPosition());	                //Toast.makeText(FirstActivity.this, getSupportFragmentManager().toString().trim(), Toast.LENGTH_SHORT).show();	            }		            @Override	            public void onTabUnselected(TabLayout.Tab tab) {		            }		            @Override	            public void onTabReselected(TabLayout.Tab tab) {		            }	        });	</code></pre>		<p>PagerAdapter</p>		<pre><code>import android.support.v4.app.Fragment;	import android.support.v4.app.FragmentManager;	import android.support.v4.app.FragmentStatePagerAdapter;	import sems.idi.controllergospel.fragments.TabAC;	import sems.idi.controllergospel.fragments.TabAmper;	import sems.idi.controllergospel.fragments.TabChiller;	import sems.idi.controllergospel.fragments.TabVolt;		public class PagerAdapter extends FragmentStatePagerAdapter {	    int mNumOfTabs;		    public PagerAdapter(FragmentManager fm, int NumOfTabs) {	        super(fm);	        this.mNumOfTabs = NumOfTabs;	    }		    @Override	    public Fragment getItem(int position) {		        switch (position) {	            case 0:	                TabAC tab1 = new TabAC();	                return tab1;	            case 1:	                TabChiller tab2 = new TabChiller();	                return tab2;	            case 2:	                TabVolt tab3 = new TabVolt();	                return tab3;	            case 3:	                TabAmper tab4 = new TabAmper();	                return tab4;	            default:	                return null;	        }	    }		    @Override	    public int getCount() {	        return mNumOfTabs;	    }	}	</code></pre>		<p>Publish From MQTT</p>		<pre><code>LocalBroadcastManager.getInstance(context).sendBroadcast(new Intent("ListAC"));	</code></pre>		<p>TabAC Fragment</p>		<pre><code>public class TabAC extends Fragment {		    ListView listView;	    ArrayAdapter&lt;DataAc&gt; adapter;	    List&lt;DataAc&gt; itemListAC = new ArrayList&lt;DataAc&gt;();	    AdapterAc adapterAc;	    Context context;		    public static TabAC newInstance() {	        return new TabAC();	    }		    @Nullable	    @Override	    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {	        View v =  inflater.inflate(R.layout.tab_ac, container, false);			        initializeViews(v);	        loadData();		        LocalBroadcastManager.getInstance(getActivity()).registerReceiver(ListAC,	                new IntentFilter("ListAC"));		        return v;	    }	    private BroadcastReceiver ListAC = new BroadcastReceiver() {	        @Override	        public void onReceive(Context context, Intent intent) {	            loadData();	        }	    };	    /*	    INITIALIZE VIEWS	     */	    private void initializeViews(View rootView)	    {	        listView = (ListView) rootView.findViewById(R.id.list_ac);		        adapterAc = new AdapterAc(getActivity(), itemListAC);	        listView.setAdapter(adapterAc);	    }	    /*	    LOAD DATA	     */	    private void loadData()	    {		        itemListAC.clear();	        DbHelper SQLite = new DbHelper(getActivity());	        ArrayList&lt;HashMap&lt;String, String&gt;&gt; row = SQLite.getDataAC();		        for (int i = 0; i &lt; row.size(); i++) {	            String poster = row.get(i).get(DbHelper.F_KD);	            String title = row.get(i).get(DbHelper.F_TI);	            String title0 = row.get(i).get(DbHelper.F_TO);	            String title1 = row.get(i).get(DbHelper.F_AR);	            String title2 = row.get(i).get(DbHelper.F_SG);	            String title3 = row.get(i).get(DbHelper.F_DT);	            String title4 = row.get(i).get(DbHelper.F_PS);	            String title5 = row.get(i).get(DbHelper.F_TPA);		            DataAc data = new DataAc();		            data.setKD(poster);	            data.setTI(title);	            data.setTO(title0);	            data.setAR(title1);	            data.setSG(Integer.parseInt(title2));	            data.setDT(title3);	            data.setPS(title4);	            data.setTPA(title5);		            itemListAC.add(data);	            //Toast.makeText(MainActivity.this,"Kode Device" + poster + "|" + title, Toast.LENGTH_SHORT).show();	        }		        adapterAc.notifyDataSetChanged();		    }		    @Override	    public String toString() {	        return "TabAc";	    }	}	</code></pre>		<p>Error In class DbHelper</p>		<pre><code>public ArrayList&lt;HashMap&lt;String, String&gt;&gt; getDataAC() {		        ArrayList&lt;HashMap&lt;String, String&gt;&gt; wordList;	        wordList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();	        String selectQuery = "SELECT KD, TI, TOs, AR, SG, DT, PS, TPA  FROM " + TABLE_Isems + " WHERE TP = '1'";	        SQLiteDatabase database = this.getWritableDatabase();	        Cursor cursor = database.rawQuery(selectQuery, null);	        if (cursor.moveToFirst()) {	            do {	                HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();	                map.put(F_KD, cursor.getString(0));	                map.put(F_TI, cursor.getString(1));	                map.put(F_TO, cursor.getString(2));	                map.put(F_AR, cursor.getString(3));	                map.put(F_SG, cursor.getString(4));	                map.put(F_DT, cursor.getString(5));	                map.put(F_PS, cursor.getString(6));	                map.put(F_TPA, cursor.getString(7));		                wordList.add(map);	            } while (cursor.moveToNext());	        }			        Log.e("select sqlite ", "" + wordList);		        database.close();	        return wordList;	    }	</code></pre>	"
54587190,95971324,54587190,3,0,Fri Feb 08 07:04:00 EST 2019,1568530,"`and error showing` which error?"
54587190,95972645,54587190,3,0,Fri Feb 08 08:02:00 EST 2019,4744514,"Probably not the issue, but you should close the Cursor when done with it e.g. after looping through the Cursor. Please edit your question and include the stack-trace."
