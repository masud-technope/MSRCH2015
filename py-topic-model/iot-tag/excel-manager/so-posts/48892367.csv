thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
48892367,48892367,null,1,1,Tue Feb 20 18:56:00 EST 2018,9387439,"<p>Azure IoT edge uses container based modules, while AWS greengrass is process centric. It will be interesting to understand the trade-offs, and how might the two evolve in the future? Would like to hear your opinion.</p>	"
48892367,84802708,48892367,3,1,Wed Feb 21 05:23:00 EST 2018,6601582,"There are some [benefits](https://www.docker.com/docker-azure#/features)."
48892367,49699033,48892367,2,1,Fri Apr 06 18:30:00 EDT 2018,2009472,"<p>With Greengrass already out in the market, Azure had the advantage of hindsight in launching their Edge intelligence and IoT Edge. </p>		<ul>	<li>With Container approach, customers are able to use their existing containerized applications. This seems to be an interesting approach - vs requiring customers to build Lambda function - for those apps to run on Lambda runtime in case of AWS. Azure IoT Edge runtime allows you to run these containerized application out of the box. </li>	<li>Azure IoT Edge Modules are Portable (because of container approach) vs AWS Lambda functions.  </li>	<li>As of this writing there are Lambda resource limits such as the size of your deployment package or the amount of memory your Lambda function is allocated per invocation. I am sure AWS will change this in the future. There is no such limitation when you run containerized applications. (Of course Docker Containers have their own limitations on security which can be overcome). </li>	</ul>	"
48892367,86688514,49699033,3,0,Sat Apr 14 22:13:00 EDT 2018,2009472,"My bad - I meant to say Lambda resource limits such as the size of your deployment package or the amount of memory your Lambda function is allocated per invocation. I will edit my response. Thanks."
48892367,86681270,49699033,3,0,Sat Apr 14 15:26:00 EDT 2018,1175633,"In Greengrass you can run long lasting Lambda functions, which is not subject to time limitations and can run indefinitely."
