thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
37132963,37132963,null,1,0,Tue May 10 08:23:00 EDT 2016,6313903,"<p>I'm trying to bind a list of elements to my listview, each elements has some propery but i need to bind only following property: Type.</p>		<p>I have read this <a href="https://stackoverflow.com/questions/33339255/how-to-use-listview-in-universal-windows-platformwindows-10-app">thread</a> that is very clear but it's not working for me, my listview remains empty...  i checked if the list that i bind to listview contains elements and it contains them. </p>		<p>Also i tried to bind a simple "List MyList" and without ListView.ItemTemplate and it works</p>		<p>Following an example of my code, i have this structures:</p>		<pre><code>public class MainType	{	    public string Type { get; set;}	}		public class ChildType : MainType	{	    public string Prop1 { get; set; }	    public string Prop2 { get; set; }	}		public class SimpleClass	{	    public ObservableCollection&lt;ChildType&gt; SimpleList { get; set; } 		    public SimpleClass()	    {	        SimpleList  = new ObservableCollection&lt;ChildType&gt;();	        SimpleList.Add(new ChildType { Prop1 = "prop1", Prop2 = "prop2", Type = "type1" }	        SimpleList.Add(new ChildType { Prop1 = "prop1", Prop2 = "prop2", Type = "type2" }	    }	}	</code></pre>		<p>In the source where i have my list view i have this on xaml side: </p>		<pre><code>           &lt;ListView x:Name="myListView"&gt;	                &lt;ListView.ItemTemplate&gt;	                    &lt;DataTemplate&gt;	                        &lt;StackPanel&gt;	                            &lt;TextBlock Text="{Binding Type}" /&gt;	                        &lt;/StackPanel&gt;	                    &lt;/DataTemplate&gt;	                &lt;/ListView.ItemTemplate&gt;	            &lt;/ListView&gt;	</code></pre>		<p>and this on C# side:</p>		<pre><code>public sealed partial class MyUserControl : UserControl	{ 	    private SimpleClass MySimpleClass;		    public MyUserControl()	    {	       this.InitializeComponent(); 	       myListView.DataContext = MySimpleClass = new SimpleClass();	       myListView.ItemsSource = MySimpleClass.SimpleList;	    }	}	</code></pre>		<p>Anyone can tell me what i missing? </p>		<p>Thanks!</p>		<p>[EDIT: The above code is correct, the problem was another. ]</p>		<p>The problem was another, inside SimpleClass through another method i deserialize a json file to SimpleList, and it create problems to binding because also if afterwards i simply add an element through ADD method, binding was not working... but if i deserialize the json file to another list: TempList and after through a foreach i add all elements of TempList to SimpleList, it works.</p>		<p>Binding doesn't work:</p>		<pre><code>SimpleList = JsonConvert.DeserializeObject&lt;ObservableCollection&lt;ChildType&gt;&gt;(text, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });	</code></pre>		<p>Binding works:</p>		<pre><code>TempList = JsonConvert.DeserializeObject&lt;ObservableCollection&lt;ChildType&gt;&gt;(text, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });	foreach(ChildType item in TempList)	{	   SimpleList.Add(item);	} 	</code></pre>	"
37132963,61806286,37132963,3,0,Tue May 10 08:49:00 EDT 2016,2354187,"I read the below comments. You have to Implement INotifyPropertyChanged in SimpleClass to reflect the items added to the list to UI"
37132963,61806629,37132963,3,0,Tue May 10 08:58:00 EDT 2016,6313903,"Hi LovetoCode, thank you for your reply, i know that INotifyPropertyChanged is used to update the list when the property changes, but in my case i add a new element, for this i haven't used INotifyPropertyChanged but i have used ObservableCollection<> instead a simple List<> , i will try your tip and i will let you know, thanks!"
37132963,61807832,37132963,3,0,Tue May 10 09:28:00 EDT 2016,6313903,"No INotifyPropertyChanged doesn't helped but i found the problem..	In my code i add new elements to SimpleList from a json file:	SimpleList = JsonConvert.DeserializeObject<ObservableCollection<ChildType>>(text, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });		Like this is not working and if i add another element from code trough ADD method, also this element is not showed in listview. 		But if i create another list: TempList, to which i deserialize my json file, and after, trough a foreach from TempList i add all elements to my SimpleList, it works! :)"
37132963,37133071,37132963,2,0,Tue May 10 08:29:00 EDT 2016,2011653,"<p>You could tried your source as an XML and use XmlSerializer to map the Class object to the source</p>		<p>Call</p>		<pre><code>  var objectType = typeof(DataClass.AssessmentLayoutDataClass);	                    return (DataClass.AssessmentLayoutDataClass)Utilities.XmlFunctions.ObjectFromXMLString(objectType, found.DataElements);	</code></pre>		<p>Method:</p>		<pre><code>  public static object ObjectFromXMLString(Type typeOfObject, string xmlFile)	    {	        XmlSerializer serializer = new XmlSerializer(typeOfObject);	        StringReader rdr = new StringReader(xmlFile);	        return serializer.Deserialize(rdr);	    }	</code></pre>	"
37132963,61805892,37133071,3,0,Tue May 10 08:39:00 EDT 2016,6313903,"Hi Chris! Thank you for your reply, after finishing to write my thread i notice that the problem was another...  If i add elements to the list in the constructor method like in my example, it works, the problem is when i add elements in run code... like when i push a button in my list i add an element but this element is not showed in the list view... 		I was deleting this thread but i seen your reply and i thought it was correctly to reply you before"
37132963,61806262,37133071,3,0,Tue May 10 08:48:00 EDT 2016,2011653,"Would this not resolve the issue:	myListView.Items.Add(new ChildType(){ Prop1 = " ",  Prop2 = "", Type = ""});"
37132963,61806289,37133071,3,0,Tue May 10 08:49:00 EDT 2016,6313903,"Yes my find was not the issue... sorry, i must to delete the thread?"
37132963,61806102,37133071,3,0,Tue May 10 08:44:00 EDT 2016,2011653,"I find, once you put your question up you find the answer or your find it was not the issue.	Have you resolve the issue tho?"
