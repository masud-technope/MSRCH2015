thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
34361325,34361325,null,1,0,Fri Dec 18 17:53:00 EST 2015,257470,"<p>Below I present a part of an Azure Web App that handles a device notification logic. What I'm doing is invoking the code shown below from a ASP MVC Controller.	But when I run it I get an hung (ever-pending) request from the browser. </p>		<p>I thought I've found a workaround by wrapping the SendAsync call in a BackgroundWorker thread. It's better, but I doesn't work right. For first couple of times (one or two) it works ok, but then it happens again, the wrapped thread hangs.</p>		<p>The code is not far different from the one on MSDN for a console application. What am I missing?</p>		<pre><code>using System.Web.Configuration;	using Microsoft.Azure.Devices;		namespace MyTest	{	    public class Sender	    {	        private readonly string connectionString;	        private readonly Microsoft.Azure.Devices.ServiceClient serviceClient;		        public Sender()	        {	            connectionString = WebConfigurationManager.AppSettings["ConnectionString"];	            serviceClient = ServiceClient.CreateFromConnectionString(connectionString);	        }		        public async void SendRequest(string deviceId, string msgText)	        {	            var message = new Message();	            message.Properties.Add("text", msgText));		            await serviceClient.SendAsync(deviceId, message);	        }	    }	}	</code></pre>	"
34361325,56471943,34361325,3,2,Fri Dec 18 22:12:00 EST 2015,3234163,"can you try creating a console app and running it from the console app in the website? You can use Kudu's debug console by going to `https://<yourSiteName>.scm.azurewebsites.net/DebugConsole` and log in with your azure account. The reason I ask this is to try to determin if it's an azure issue or an async/deadlock issue. The behavior you're describing sounds like async deadlock in an ASP.NET thread which would point to a bug in the library you're using."
34361325,34567880,34361325,2,1,Sat Jan 02 16:11:00 EST 2016,257470,"<p>The problem was caused by inappropriate usage of ASP MVC framework. </p>		<p>It turned out that AsyncController has to be used instead of just Controller when a long running async\await is utilized. The pipeline must be async all the way.</p>	"
34361325,66055564,34567880,3,0,Wed Sep 07 07:06:00 EDT 2016,4537164,"The whole line has to be async. I had the same problem and I solve it by adding async."
