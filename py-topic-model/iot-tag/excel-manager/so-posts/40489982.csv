thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
40489982,40489982,null,1,1,Tue Nov 08 14:53:00 EST 2016,3612664,"<p>I have an IoT registry of things, all of them identical and processed in the same way. </p>		<p>I create a rule which triggers whenever some condition holds for one of the things. The rule invokes lambda function, which gets the thing shadow or subset of its fields in the <em>event</em> parameter. (I use Python for lambda)</p>		<p>However it does not seem to be possible for lambda to figure which exactly thing triggered the rule - there are only two parameters, <em>event</em> and <em>context</em>, neither of which contains information about original thing id. Am I missing something?</p>	"
40489982,41970774,40489982,2,2,Wed Feb 01 02:04:00 EST 2017,5765589,"<p>Hey so some more details about your things would be helpful but to get you started I'll explain how the amazon IoT button works. The event parameter that's passed in is a JSON object with some information regarding the state of the thing. For the IoT button this is:</p>		<pre><code>{ 	  "serialNumber": "0000000000000000",	  "batteryVoltage": "xxmV",	  "clickType": "SINGLE" | "DOUBLE" | "LONG"	}	</code></pre>		<p>When writing code (ahh I'm sorry I've just been assuming node.js) you can refer to what's in the object as event.serialNumber, event.clickType...</p>		<p>This is relevant because if you can get your things to have IDs of some sort, like names or serial numbers, you can access this information through the event parameter and use it when your function is invoked.</p>	"
40489982,74174661,41970774,3,0,Sat Apr 22 16:48:00 EDT 2017,3612664,"Thanks for that, and sorry I just saw your answer. So I see that the button publishes its own serial, which is what I wanted to avoid - but seems inevitable. I would expect it to be somewhere in the context, who triggered."
