thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
42696593,42696593,null,1,0,Thu Mar 09 13:24:00 EST 2017,2054348,"<p>After successful ble connection, I am writing a Characteristic with DefaultWriteType. </p>		<p>Just after that <code>onCharacteristicChanged</code> triggers and after that <code>onCharacteristicWrite</code> triggers with same Characteristics UUID which was write but with values came as response in that Characteristics are same as response of <code>onCharacteristicChanged</code>. </p>		<p>Summary:</p>		<p>How onCharacteristicChanged triggers before onCharacteristicWrite ?</p>		<p>As I believe onCharacteristicWrite indicates that your write operation was successful or not.	And onCharacteristicChanged responds/notify to the command for which we write to ble device.</p>		<p>Is this possible or is it going out of Ble cycle?</p>	"
42696593,42698131,42696593,2,1,Thu Mar 09 14:38:00 EST 2017,2960788,"<p>I think this is expected.</p>		<ol>	<li><p>Because <code>onCharacteristicWrite</code> only indicates, that your write operation was successful or not. </p></li>	<li><p>A <code>BluetoothGattCharacteristic</code> can hold only one value, which is the last one send or received. </p></li>	<li><p>Both operations are using the same <code>BluetoothGattCharacteristic</code> instance.</p></li>	</ol>		<p>So regarding to your  described sequence, it is "normal" that you have the same value in both callbacks. Since the last operation, which manipulates the <code>value</code> in your characteristic was a BLE notification.</p>		<p>I think that was not the best idea, how it was implemented in the BLE stack. It would be better if the operations would not interfere each other and would be more idempotent/immutable. </p>	"
42696593,72545579,42698131,3,0,Fri Mar 10 07:15:00 EST 2017,2054348,"notification fires before confirming that operation is successful. So I find it strange to understand."
42696593,72545817,42698131,3,0,Fri Mar 10 07:23:00 EST 2017,2960788,"I think its clear. At least on Android. It seems clear, that Android calls the callbacks in the order, it receives some messages. Basically a connected device can always send a notification, not only as a response to a write characteristic. So it is completely ok, that a `onCharacteristicChanged` is called between a `writeCharacteristic` and `onCharacteristicWrite`. Maybe you should change your IOT device to fire the notfication after confirming the write characteristic operation."
42696593,72544382,42698131,3,0,Fri Mar 10 06:33:00 EST 2017,2054348,"ok but what about the sequence? Why onCharacteristicChanged triggers before onCharacteristicWrite? As I believe onCharacteristicChanged respond to the value for which we write cmd to Ble device and like you said onCharacteristicWrite only indicates, that your write operation was successful or not."
42696593,72544847,42698131,3,0,Fri Mar 10 06:50:00 EST 2017,2054348,"ok I understood ur BluetoothGattCharacteristic holding value concept. check it out my edited question(summary)."
42696593,72545143,42698131,3,0,Fri Mar 10 07:00:00 EST 2017,2960788,"When does your connected device fire up the notification? Before or after it has confirmed that the writeCharacteristic operation was successful? On the other hand, I absolutely have no clue, in which order the callbacks are fired on Android BLE stack. :("
42696593,72546081,42698131,3,1,Fri Mar 10 07:31:00 EST 2017,2054348,"IOS device is also having the same sequence, so Convinced from your last comment."
