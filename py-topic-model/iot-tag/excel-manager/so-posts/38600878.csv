thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38600878,38600878,null,1,0,Tue Jul 26 22:28:00 EDT 2016,6568853,"<p>I am a newbie in node-red and IoT, yet currently working on a project.	Basically my aim is to create an alerter system for construction workers.</p>		<p>I want to measure altitude, ambient temperature and the state of the safety mechanism (locked or not). Based on the readings the system should make decisions (if the measurement exceeds a threshold  - send a notification [buzzer/LED]). </p>		<p>The logic is as follows:</p>		<ol>	<li>When the system is turned on, measure an initial altitude (h initial), </li>	<li>after a particular period of time (not defined yet), measure the current altitude (h current). </li>	<li>The difference between current and initial altitude would be the actual altitude of a worker(h). </li>	<li>If the altitude h is higher than 2 meters - send a buzzer signal. If the h is less than 0, calculate h initial and h current again. </li>	</ol>		<p>I have connected the TI CC2650 SensorTag to the RPi's Node-red and it sends measurements to the node-red as json objects, depending on how many sensor readings you'd like you read. In my case (temperature and pressure) I am receiving two jsons in turn:</p>		<pre><code>{ "d": { "id": "b827ebb2b2bd.c4be84711c81.0", "tstamp": { "$date": 1469565713321 }, "json_data": { "object": 21.40625, "ambient": 27.125 } } }		{ "d": { "id": "b827ebb2b2bd.c4be84711c81.4", "tstamp": { "$date": 1469565713328 }, "json_data": { "pressure": 1016.36 } } }	</code></pre>		<p>I've faced the following problems:</p>		<ol>	<li><p>I couldn't feed multiple data to Node-RED. Was wondering if someone could guide me how to send (temperature, pressure, mechanism's state[1 or 0] data) to the function node;</p></li>	<li><p>Regarding the alerting. Basically, to find the actual altitude I need to have two altitude measurements. Means, I need to somehow store two pressure/temperature measurements. Do I need to store measurements data as an array or there can be a better way to deal with this? </p></li>	</ol>		<p>Was wondering If anyone could guide/help me with this.</p>		<p>P.S. The clipboard of the flow is quite long so I decided don't paste it here, though can send it if anyone requests.</p>		<p><strong>the very very raw code</strong></p>		<pre><code>var hInit;	var hChecked;	var h;		//p0 is the hardcoded pressure on the level of the sea	//hardcoded for the current area	var p0 = 1019;		//extract the pressure value and the ambient temp from jsons	tagPressure = msg.payload.json_data.pressure;	tagTemp = msg.payload.json_data.ambient;		//the formula to convert a pressure to an altitude		//here it should measure the altitde (hInit) when the testbest is turned on		hInit = (((Math.pow((tagTemp/p0), (1/5.257)))-1)*(tagTemp + 273.15))/0.0065;	//hChecked is the measured altitude afterwards	hChecked = (((Math.pow((tagTemp/p0), (1/5.257)))-1)*(tagTemp + 273.15))/0.0065;		//h is the actual altitude the worker is working on	h = hChecked - hInit;		//in the case if a worker turned the testbed on 	//when he was operating on the altitude he then	//might go down so altitude can reduce.	//therefore if the altitude h is &lt; 0 we need to	//calculate a new reference 		if (h &lt; 0) {	    hInit = (((Math.pow((tagTemp/p0), (1/5.257)))-1)*(tagTemp + 273.15))/0.0065;	    hChecked = (((Math.pow((tagTemp/p0), (1/5.257)))-1)*(tagTemp + 273.15))/0.0065;	    h = hChecked - hInit;	    return h;	}		//check current altitude	while (h&gt;0){		    if (h&gt;2){		        if (lockerState == 1) {	            msg.payload = "safe";	            return msg;	        }		        else if (lockerState === 0) {	            msg.payload = "lock your belt!";	            //basically i want to send a 1 signal	            //to the buzzer which is a pin on the RPI3	            //so probably msg.payload = 1;	            return msg;	        }	    }    	}	//return msg;	</code></pre>	"
38600878,38607958,38600878,2,1,Wed Jul 27 08:41:00 EDT 2016,504554,"<p>While Node-RED nodes only have one input tab, that doesn't mean they can't process inputs from multiple sources. </p>		<p>There are multiple options</p>		<p>One way to do this is to use some other message property to distinguish them, usually the <code>msg.topic</code>.</p>		<p>Or to  would be to check which properties the payload has using <code>Object.hasOwnProperty()</code></p>		<p>e.g.</p>		<pre><code>if (msg.payload.json_data.hasOwnProperty('ambient'){ 	    //do something with 	}	</code></pre>		<p>But more in keeping with flow based programming it may be better to split the functions up based on message type using a <strong>Switch Node</strong> to fork the flow based on properties of the message.</p>		<p>You should also look at the Node-RED <a href="http://nodered.org/docs/writing-functions#storing-data" rel="nofollow">doc</a> about <code>context</code>. This can be used to store values temporarily between messages in order to compare them or use them in calculations.</p>		<pre><code>context.set('altitude') = foo	...	var foo = context.get('altitude');	</code></pre>	"
38600878,64678220,38607958,3,0,Thu Jul 28 22:33:00 EDT 2016,6568853,"Thank you! context helped me!"
