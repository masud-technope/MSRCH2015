thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
46908592,46908592,null,1,0,Tue Oct 24 10:51:00 EDT 2017,8633698,"<p>I am working on an IoT device that has a continuously running function sequence. The device can also receive commands and execute them. While I can have both these "sections" running on their own, I'm having trouble trying to have both these things run simultaneously. Here's what I'm trying to do:</p>		<pre><code>//all required imports	var handler = new events.EventEmitter.call(this)	function step0(){	  //do something	  if(err) {setTimeout(step0, 1500); return; }	  step1(result);	}		function step1(){	  //do something	  if(err) {setTimeout(step0, 1500); return; }	  step2(result);	}		function step2(){	  //do something	  if(err) {setTimeout(step0, 1500); return; }	  console.log(result);	}		var timeOutID = setTimeout(step0, 1500);		//END of loop tasks	aws.device.on('message', function(payload, topic){	    clearTimeout(timeOutID);  	    handler.emit(payload.command);  	})		handler.on('command1', function(){	   /*do something*/	   setTimeout(step0, 1500);	});	handler.on('command2', function(){	   /*do something*/	   setTimeout(step0, 1500);	});	handler.on('command3', function(){	   /*do something*/	   setTimeout(step0, 1500);	});	</code></pre>		<p>The issue I am facing is that there appears to be a race condition between - the "step" functions get invoked while the "command" event handlers are executing. I am fairly new to nodeJS so I'm not sure if this the right way to go about it. </p>	"
46908592,80765815,46908592,3,0,Tue Oct 24 11:43:00 EDT 2017,8633698,"Yes, there are some aync calls made to the serialport but these are wrapped in Promises. For example `//do something is:` `sensor.ledOn().then( function(){ step1(); },  function(){ return; })`."
46908592,80766227,46908592,3,0,Tue Oct 24 11:53:00 EDT 2017,7368985,"Well then the code that is after the `// do something` needs to be wrapped inside the `then` callback of those promises, otherwise it won't wait for the resolution."
46908592,80764173,46908592,3,0,Tue Oct 24 11:02:00 EDT 2017,7368985,"Does the `// do something` part concern some async code? Where are `err` and `result` coming from?"
