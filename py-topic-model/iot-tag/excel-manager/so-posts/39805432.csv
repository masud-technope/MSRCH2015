thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
39805432,39805432,null,1,0,Sat Oct 01 10:18:00 EDT 2016,371933,"<p>I have a number of sensors in my home, and I want to use PowerBI to display a graph of the temperatures in the different rooms as well as gauge the current/most recent values. </p>		<p>I am having the hardest time writing this in dax: </p>		<p>The data comes to PowerBI from an Azure Table named "DeviceReadings" on the form: </p>		<ul>	<li>Location (Text, Partition Key)  </li>	<li>RowKey (Numeric value based on date stored, not used)</li>	<li>Date (DateTime, TimeStamp)</li>	<li>Temperature (Decimal)</li>	<li>Humidity (Decimal)</li>	</ul>		<p>What I would like is: (PSEUDOCODE)</p>		<pre><code>Select Location, Last(Date), Temperature, Humidity FROM DeviceReadings 	GROUP BY Location	</code></pre>		<p>Expected/Wanted outcome is: </p>		<pre><code>"Mediaroom", "01.10.2017 09:00", 26, 17	"Office", "01.10.2017 09:03", 28, 23	"Livingroom", "01.10.2017 09:13", 22, 32	</code></pre>		<p>Obviously, I'm trying to create a calculated DAX table based on these readings. The idea is to create a calculated table that at all times contain the most recent temperature/humidity so that I can display those values in gauge-style visuals.</p>		<p>I have been trying to set table = <strong>SUMMARIZECOLUMNS</strong>, grouping by Location, and then adding named columns <strong>"LastSampled" as "MAX(DeviceReadings[Date])</strong> and then <strong>"Temperature";LASTNONBLANK(DeviceReadings[Temperature];DeviceReadings[Temperature]);</strong> but that does not get a "connected temperature reading, but something else.</p>		<p>Ideally, I want to group by location, then by max date pr location, and then display the raw temperature + humidity value</p>		<p>I simply want a "Most recent temperature reading" by location displayed on my PowerBI dashboard. (I'm using PowerBI desktop to write all the queries and make the reports, and have not yet uploaded to PowerBI portal)</p>		<p>My DAX skills are fairly low, so I need help in writing the calculated query. </p>	"
39805432,39808897,39805432,2,1,Sat Oct 01 16:24:00 EDT 2016,2647648,"<p>Try using this expression:</p>		<pre><code>Table = SELECTCOLUMNS (	    FILTER (	        CROSSJOIN (	            SELECTCOLUMNS (	                GROUPBY (	                    DeviceReadings,	                    DeviceReadings[Location],	                    "LASTDATE", MAXX ( CURRENTGROUP (), DeviceReadings[Date] )	                ),	                "Location", DeviceReadings[Location],	                "Date", [LASTDATE]	            ),	            SELECTCOLUMNS (	                DeviceReadings,	                "DateJoin", DeviceReadings[Date],	                "LocationJoin", DeviceReadings[Location],	                "Humidity", DeviceReadings[Humidity],	                "Temperature", DeviceReadings[Temperature]	            )	        ),	        [Date] = [DateJoin]	            &amp;&amp; [Location] = [LocationJoin]	    ),	    "Location", [Location],	    "LastDate", [Date],	    "Temperature", [Temperature],	    "Humidity", [Humidity]	)	</code></pre>		<p>I am pretty sure there is an easier way to achieve what you are after but I cannot figure out right now. </p>		<p>Let me know if this helps.</p>	"
39805432,66923176,39808897,3,0,Sun Oct 02 11:17:00 EDT 2016,371933,"Accepting this as the answer, it works, and nobody came up with a simpler solution. Thanks, Alex :)"
39805432,66909272,39808897,3,0,Sat Oct 01 16:34:00 EDT 2016,371933,"This works! I've upvoted it for now, and if nothing simpler comes up, I'll mark it as the answer - phew, that's alot of DAX though, for a seemingly simple request! :)"
