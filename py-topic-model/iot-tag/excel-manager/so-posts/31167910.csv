thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
31167910,31167910,null,1,5,Wed Jul 01 17:26:00 EDT 2015,470502,"<p>I'd like to discover as much information about IoT devices on a network as possible. I've seen code to enumerate the devices, find the IP Addresses and MAC Addresses, but what else can I find? In particular, I'd like to know that something is a lamp, and more importantly, what the manufacturer is.</p>		<p>I've been looking through some documentation for IoTivity and AllJoyn as well as the various Zero Configuration protocols. From what I understand, these things are more concerned with the services exposed rather than exactly what the device is.</p>		<p>Do I misunderstand this? Is there some way to map out a local network and know exactly what each device is?</p>	"
31167910,50378632,31167910,3,0,Thu Jul 02 13:59:00 EDT 2015,470502,"I'm really talking about a home network, so there really shouldn't be anything to stop you from doing this. Yes, it's a regular network scan and it's easy to get info like IP Addresses. My interest is how to get more detailed information about the devices."
31167910,50352234,31167910,3,0,Wed Jul 01 21:46:00 EDT 2015,4636126,"This would not be any different from a regular network scan with the objective of listing all IP addressable devices on the local network or within an arbitrary IP range. This could be prohibited by ISP or network admins."
31167910,86966350,31167910,3,0,Mon Apr 23 07:08:00 EDT 2018,1913137,"This paper talks about different scanning techniques to discover IoT devices: https://www.sciencedirect.com/science/article/pii/S1353485818300333"
31167910,31191746,31167910,2,2,Thu Jul 02 18:13:00 EDT 2015,956810,"<p>AllJoyn offers <a href="https://allseenalliance.org/framework/documentation/learn/core/about-announcement" rel="nofollow">About Announcement</a> service through which you can get what you are looking for:</p>		<ul>	<li>App and Device Friendly Names</li>	<li>Make, Model, Version, Description</li>	<li>Supported Languages</li>	<li>App Icon</li>	<li>Supported objects and interfaces</li>	<li>...</li>	</ul>	"
31167910,50394128,31191746,3,0,Thu Jul 02 21:16:00 EDT 2015,470502,"Okay, this is what I'm looking for. So it seems to me that every device I find on the network I can query for this information. *IF* the device supports AllJoyn, then I'm home free. Is this right? Are there any other protocols I can check? I also know about HNAP but that seems to be an ancient protocol that's mostly for routers."
31167910,50397057,31191746,3,0,Thu Jul 02 23:42:00 EDT 2015,956810,"I'm not aware about HNAP. So, I'm useless for you in this regard. Regarding AllJoyn, yes you are right. As described in the link I mentioned above, AllJoyn Devices that have services to offer can advertise them self using the `About Announcement Service`. AllJoyn Client Devices can discover AllJoyn Server Devices by listening to `About Announcement Service`. Once they discover an adequate service, they can connect to it.	It is worth to note that AllJoyn provides [other valuable services](https://allseenalliance.org/developers/learn/base-services) that ease integration of devices in proximity."
31167910,50412630,31191746,3,0,Fri Jul 03 11:08:00 EDT 2015,470502,"HNAP was a protocol from about 15 years ago developed by a company that was bought by Linksys. It made it really easy to identify the devices on a network and gave me exactly what I want, but isn't really used much anymore."
31167910,31196063,31167910,2,0,Thu Jul 02 23:09:00 EDT 2015,4086836,"<p>Start by looking into DPWS (Device Profile for Web Services). This is a subset of we service standards (e.g., WSDL or SOAP) that allows minimal interaction with web services running on embedded devices. Usually the messages exchanged while using such service contains metadata which can inform you about:</p>		<ol>	<li>Scope - attributes used for organising according to groups (e.g., location)</li>	<li>Model and device - info about device (e.g., manufacturer)</li>	<li>Types - messages that the device can send (e.g., turn off)</li>	</ol>		<p>To use these devices you need a control layer which provides a certain abstraction to these devices. This layer is called a middleware. I suggest you look into SOCRADES. It is an EU project and I believe their source code should be available on their dedicated website. </p>		<p>I'm mentioning SOCRADES because it has a feature that can force network installation. It is possible to install new services on these devices using their DPWS profiles and assuming they have some communication and computation capabilities.</p>		<p>Other examples of middlewares are: OpenIot, Choreos, Ubiware, etc. All these middlewares mentioned are opensource. Now, on top of these middleware you build your application. This is what do you want to do with the devices.</p>	"
31167910,50397195,31196063,3,0,Thu Jul 02 23:52:00 EDT 2015,956810,"does DPWS provides a discovery service? For instance, assume that I'm building a smart home where I want to control my TV using my smart phone. Is there a secure way that let my smart phone recognize that the TV (once it is 10 meters away from me) can be switched on and off?"
31167910,50412770,31196063,3,0,Fri Jul 03 11:11:00 EDT 2015,470502,"If I look at a typical network in a home now or five years from now, are there going to be any devices that are going to be using this service?"
31167910,50412995,31196063,3,0,Fri Jul 03 11:18:00 EDT 2015,4086836,"Quite likely it will something similar since the work right now is to figure out how to virtualise the infrastructure and how to compose the services provided by these devices. But, tagging and adding metadata to these devices will be mandatory. Somehow this data needs to be made available to the users or to the middleware. Also, now and five years from now many of such middlewares are provided (e.g., Xively, Carriots) which discover the device and read the data from the device."
31167910,50397622,31196063,3,0,Fri Jul 03 00:21:00 EDT 2015,4086836,"DPWS aids with service discovery by providing metadata such that users or other devices can discover the device and its capabilities. In general, the middlewares provide the component which perform service discovery."
31167910,32940491,31167910,2,0,Mon Oct 05 02:33:00 EDT 2015,1876978,"<p>uPnP is quite common protocol nowadays and implemented in quite a lot of devices (i.e. printers). This is used for some modern IoT projects too. It supports a device description also. See an example:</p>		<pre><code>&lt;?xml version='1.0'?&gt;	&lt;root xmlns="urn:schemas-upnp-org:device-1-0" xmlns:pnpx="http://schemas.microsoft.com/windows/pnpx/2005/11"&gt;	&lt;specVersion&gt;	   &lt;major&gt;1&lt;/major&gt;	   &lt;minor&gt;0&lt;/minor&gt;	 &lt;/specVersion&gt;	&lt;device&gt;  	    &lt;pnpx:X_deviceCategory&gt;MediaDevices&lt;/pnpx:X_deviceCategory&gt;	    &lt;deviceType&gt;urn:schemas-microsoft-com:device:MediaCenterExtenderMFD:1&lt;/deviceType&gt;	    &lt;friendlyName&gt;Xbox 360 Media Center Extender&lt;/friendlyName&gt;	    &lt;manufacturer&gt;Microsoft Corporation&lt;/manufacturer&gt;	    &lt;manufacturerURL&gt;http://www.xbox.com/&lt;/manufacturerURL&gt;	    &lt;modelDescription&gt;Xbox 360 Media Center Extender&lt;/modelDescription&gt;	    &lt;modelName&gt;Xbox 360&lt;/modelName&gt;	    &lt;modelNumber&gt;&lt;/modelNumber&gt;	    &lt;modelURL&gt;http://go.microsoft.com/fwlink/?LinkID=53081&lt;/modelURL&gt;	    &lt;serialNumber&gt;&lt;/serialNumber&gt;	    &lt;UDN&gt;uuid:10000000-0000-0000-0200-00125A702E78&lt;/UDN&gt;	    &lt;UPC&gt;&lt;/UPC&gt;	    &lt;iconList&gt;	        ...	    &lt;/iconList&gt;	    &lt;serviceList&gt;	         ...	    &lt;/serviceList&gt;	&lt;/device&gt;	&lt;/root&gt;	</code></pre>	"
