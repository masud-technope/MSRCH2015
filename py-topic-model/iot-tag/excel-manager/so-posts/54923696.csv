thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54923696,54923696,null,1,0,Thu Feb 28 10:40:00 EST 2019,7921516,"<p>Hi I need to send login headers to sigfox. However they are always rejected or the code fails when I insert the auth variable in a call. </p>		<p>This is the code that does work but does reject. </p>		<pre><code>print 'end of the dummy'	devices = requests.get("https://api.sigfox.com/v2/devices", auth=(API_USER, API_PWD)).json()	r = requests.get('https://api.sigfox.com/v2/devices', data=users, stream=True)	data = r.raw.read(r)	</code></pre>		<p>print(data) </p>		<p>And this is the code that fails. </p>		<pre><code>credentials = b64encode(b"somebase64string:somebase64string").decode("ascii")	headers = { 'Authorization' : 'Basic %s' %  credentials }			print 'end of the dummy'	devices = requests.get("https://api.sigfox.com/v2/devices", auth=(API_USER, API_PWD)).json() r = requests.get('https://api.sigfox.com/v2/devices', auth=credentials, data=users, stream=True) data = r.raw.read(r)			print(data) 	</code></pre>		<p>The second code is less messy but stackoverflow works with idention. I think I need to pass the auth with in the r variable but I cannot figure out how I do that correctly. I am using Python 2.7 </p>	"
54923696,54923848,54923696,2,0,Thu Feb 28 10:46:00 EST 2019,11129528,"<p>You need to encode userid and password.</p>		<pre><code>encodedUname = urllib.quote_plus(userName)	encodedPwd = urllib.quote_plus(password)	http://{encodedUname}:{encodedPwd}@{url}	</code></pre>	"
54923696,96614474,54923848,3,0,Thu Feb 28 11:43:00 EST 2019,7921516,"Can you be a bit more specefic with an example?"
54923696,96624856,54923848,3,0,Thu Feb 28 16:28:00 EST 2019,7921516,"Thx sadly ddidn't work. I used the latest example 			Traceback (most recent call last):	  File ".\devicetypes.py", line 171, in <module>	    data = r.raw.read(r)	  File "C:\Python27\lib\site-packages\urllib3\response.py", line 442, in read	    data = self._fp.read(amt)	  File "C:\Python27\lib\httplib.py", line 573, in read	    return self._read_chunked(amt)	  File "C:\Python27\lib\httplib.py", line 643, in _read_chunked	    amt -= chunk_left"
54923696,96616005,54923848,3,0,Thu Feb 28 12:27:00 EST 2019,11129528,"Following link have example with both Using requests and urllib	https://www.quora.com/How-can-I-make-an-API-call-with-basic-HTTP-authentication-using-Python"
54923696,54923877,54923696,2,0,Thu Feb 28 10:48:00 EST 2019,6006584,"<p>your problem is one of the two:</p>		<ol>	<li>you need to do a POST request instead of GET, since i see that you should send data in body and not as a params in the query.</li>	<li>you should use GET api in a proper way : <code>requests.get(url, params=None, **kwargs)</code></li>	</ol>		<p>this is the function signature from developer interface. so you should replace 	<code>r = requests.get('https://api.sigfox.com/v2/devices', data=users, stream=True)</code>	with 	<code>r = requests.get('https://api.sigfox.com/v2/devices', params=users, stream=True)</code></p>		<p>but i strongly think it should be a POST request and not GET.</p>	"
54923696,96643614,54923877,3,0,Fri Mar 01 08:00:00 EST 2019,7921516,"I did it looks like an issue on sigfox side, it has been an issue for more people over a year. Some obscure solution with curl were given, they worked for some time but now don't seem to anymore."
54923696,96616738,54923877,3,0,Thu Feb 28 12:47:00 EST 2019,6006584,"if it is GET then you should use `params` and not `data` in your request"
54923696,96614536,54923877,3,0,Thu Feb 28 11:45:00 EST 2019,7921516,"devices = requests.get("https://api.sigfox.com/v2/devices", auth=(API_USER, API_PWD)).json()	r = requests.post('https://api.sigfox.com/v2/devices', params=users, stream=True)	data = r.raw.read(r)			print(data) 		Still gives me 		<html>	<head>	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>	<title>Error 401 Unauthorized</title>	</head>	<body><h2>HTTP ERROR 401</h2>	<p>Problem accessing /api/v2/devices. Reason:	<pre>    Unauthorized</pre></p>	</body>	</html>		I also thought it should be post. but the documentation says get."
