thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
42596589,42596589,null,1,1,Sat Mar 04 13:28:00 EST 2017,656912,"<p>I have a Python Lambda function that processes triggers from IoT Things.</p>		<p>Is there a way to read the <code>context</code> handed to the handler function (with Boto 3) to identify which the name of the triggering Thing -- e.g. as expected in <code>thingName</code> supplied to <code>get_thing_shadow</code>?</p>	"
42596589,42981342,42596589,2,7,Thu Mar 23 16:08:00 EDT 2017,656912,"<p>AWS IoT allow to associate multiple certificates to the same Thing and multiple Things to the same certificate. That makes detecting Things name quite challenging unless you adopted approach one certificate per Thing.</p>		<p>IoT clients do not invoke Lambda functions directly. Rather it is in effect a <em>Rule</em> that invokes a function. A Rule takes a JSON formatted message from the topic it is listening to, possibly modifying the data available to the Rule using SQL syntax and passes the result to the Lambda function as <code>event</code> parameter of your handler. By default Rule passes message to the Lambda exactly as it was published by the client without adding or removing any data, hence if the message has no data about "name" this data won't be available by Lambda function as well.</p>		<p>Your Lambda function can get the Thing name out of <code>event</code> parameter only if that data was specified inside an MQTT message or added by Rule's SQL to the result passed to the Lambda function. </p>		<p>Simplified message workflow looks like this:</p>		<ul>	<li>Client → (message) → </li>	<li>Topic → (message) →</li>	<li>Rule → SQL message modification → (result) →</li>	<li>Lambda function</li>	</ul>		<p><a href="http://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-functions.html" rel="noreferrer">SQL functions</a> can be used to add some additional data to the result if Thing name doesn't exist in message. Unfortunately there is not special SQL function exist which returns Thing name, however in some circumstances Thing name can be found using three following approaches:</p>		<ol>	<li><p>You can use principal() SQL function <a href="http://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-functions.html" rel="noreferrer">1</a> to add principal ID to the result, and then inside your Lambda function you can use that principal ID to get the list of Things associated to this principal using boto3 method <a href="http://boto3.readthedocs.io/en/latest/reference/services/iot.html#IoT.Client.list_principal_things" rel="noreferrer"><code>list_principal_things()</code></a>.</p></li>	<li><p>If your Thing is updating its shadow or sending message to the topic which includes Things name, you can use <code>topic()</code> SQL function to add the topic part with Things name to the result before sending it to the Lambda, with something like</p>		<pre><code>SELECT *, topic(3) as thingName FROM '$aws/things/+/shadow/update/accepted'	</code></pre></li>	<li><p>You can, possibly, specify Things name inside message from your Thing, and this data will be available by Lambda unless you remove it from the result using SQL.</p></li>	</ol>	"
42596589,46895853,42596589,2,0,Mon Oct 23 18:10:00 EDT 2017,5855733,"<p>The Lambda function passes a parameter called <strong>event</strong>. </p>		<p>It is JSON object. What object you get depends on which methods you use.</p>		<p>Refer for more details: <a href="http://docs.amazonaws.cn/en_us/iot/latest/developerguide/thing-shadow-mqtt.html" rel="nofollow noreferrer">http://docs.amazonaws.cn/en_us/iot/latest/developerguide/thing-shadow-mqtt.html</a></p>		<pre><code>exports.handler = (event, context, callback) =&gt; {	}	</code></pre>		<p>I suggest you print the <strong>event</strong>, so you can see the JSON object. It contains state of the <strong>Thing</strong>,  that triggered it.</p>		<p>However you can't get the name of the <strong>thing</strong>, you only can get the attributes.</p>	"
42596589,80738800,46895853,3,0,Mon Oct 23 18:13:00 EDT 2017,656912,"Did you read [this](https://stackoverflow.com/a/42981342/656912)?"
