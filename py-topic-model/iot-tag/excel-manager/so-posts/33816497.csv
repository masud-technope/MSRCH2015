thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
33816497,33816497,null,1,2,Thu Nov 19 23:46:00 EST 2015,5583670,"<p>I have a lwm2m wakaama client working with a leshan server. When I try to send a huge hexbinary string via the write option on Package resource for Firmware update object 5, I get the following error message on the client side 	"Block1 NOT IMPLEMENTED".</p>		<p>I understand that block1 was not implemented on the wakaama client and only block2 was implemented, does anyone know why ?</p>		<p>Also, How can I make firmware update with package resource work with the Leshan Server and Wakaama Client ? </p>		<p>I believe I can either change the Leshan Server to send a request of type BLOCK2 (which I dont know how to do from the limited UI?) or add support for BLOCK1 on wakaama LWM2M client.</p>		<p>Has anyone tried this ?  </p>	"
33816497,33831294,33816497,2,0,Fri Nov 20 16:16:00 EST 2015,660374,"<p>Does the version of wakaama you use is up-to-date? the last master is supposed to support block transfer</p>	"
33816497,55432452,33831294,3,0,Fri Nov 20 18:32:00 EST 2015,5583670,"Yes its the latest version. The problem seems to be in the functions lwm2m_handle_packet in [Paket.c](https://github.com/eclipse/wakaama/blob/master/core/packet.c) ~ line 245. `if ( IS_OPTION(message, COAP_OPTION_BLOCK1) && response->code<BAD_REQUEST_4_00 && !IS_OPTION(response, COAP_OPTION_BLOCK1) )	                {	                    LOG("Block1 NOT IMPLEMENTED\n");	... .  `  I could see there is some implementation for BLOCK2 payload, but I dont have a way to specift that in the Leshan server UI."
33816497,34601998,33816497,2,0,Mon Jan 04 23:53:00 EST 2016,5583670,"<p>Added Block1 support by doing the following changes in the function lwm2m_handle_packet in Paket.c ~ line 234-263:</p>		<pre><code>       /* get offset for blockwise transfers */	        if (coap_get_header_block2(message, &amp;block_num, NULL, &amp;block_size, &amp;block_offset))	        {	            LOG("Blockwise2: block request %u (%u/%u) @ %u bytes\n", block_num, block_size, REST_MAX_CHUNK_SIZE, block_offset);	            block_size = MIN(block_size, REST_MAX_CHUNK_SIZE);	            new_offset = block_offset;	        }	        ++else if (coap_get_header_block1(message, &amp;block_num, NULL, &amp;block_size, &amp;block_offset))	        ++{	            ++LOG("Blockwise1: block request %u (%u/%u) @ %u bytes\n", block_num, block_size, REST_MAX_CHUNK_SIZE, block_offset);	            ++block_size = MIN(block_size, REST_MAX_CHUNK_SIZE);	            ++new_offset = block_offset;	        ++}	        coap_error_code = handle_request(contextP, fromSessionH, message, response);	        if (coap_error_code==NO_ERROR)	        {	            /* Apply blockwise transfers. */	            if ( IS_OPTION(message, COAP_OPTION_BLOCK1) &amp;&amp; response-&gt;code&lt;BAD_REQUEST_4_00 &amp;&amp; !IS_OPTION(response, COAP_OPTION_BLOCK1) )	            {	                ++//LOG("Block1 NOT IMPLEMENTED\n");		                ++//coap_error_code = NOT_IMPLEMENTED_5_01;	                ++//coap_error_message = "NoBlock1Support";	                ++LOG("Block1 IMPLEMENTED\n");	                ++coap_set_header_block1(response, block_num, 0, block_size);		            }	            else if ( IS_OPTION(message, COAP_OPTION_BLOCK2) )	</code></pre>	"
