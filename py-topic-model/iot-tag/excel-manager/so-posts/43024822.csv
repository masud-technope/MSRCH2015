thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
43024822,43024822,null,1,3,Sun Mar 26 03:56:00 EDT 2017,1183607,"<p>I keep receiving a 403 when trying to connect via Websocket to AWS IoT. I have a Cognito federated pool setup, which connects fine and returns credentials. It's after that step when I update the websocket credentials that I start getting 403's.</p>		<p>I've done the following steps:</p>		<ol>	<li>I've setup IoT and have a certificate and policy setup.</li>	<li>I created a Cognito Federated Identity Pool that allows unauthenticated users.</li>	<li>The unauthenticated role has full access to IoT (policy below)</li>	</ol>		<p>Here's the unauthenticated role policy:</p>		<pre><code>{	"Version": "2012-10-17",	"Statement": [	    {	        "Effect": "Allow",	        "Action": [	            "mobileanalytics:PutEvents",	            "cognito-sync:*",	            "iot:*"	        ],	        "Resource": [	            "*"	        ]	    }	]	}	</code></pre>		<p>Any ideas? Am I missing a step?</p>	"
43024822,73137490,43024822,3,0,Sun Mar 26 05:36:00 EDT 2017,780097,"How are you connecting with WebSockets? AWS IoT Device SDK? Hand crafting SigV4 request? There is a sample AWS IoT over WS via Device SDK (feat. Cognito) project here: https://github.com/awslabs/aws-iot-examples/pull/2"
43024822,45227246,43024822,2,2,Fri Jul 21 00:43:00 EDT 2017,1200678,"<p>I know this is a bit old, But we had the same issue today, however it only seemed to happen to one companies users. So after a little digging I discovered their computers time were off by about 8 minutes. This was causing the certificate to be expired or invalid. simply changing the computers times to the correct time, or as we did get the difference of the correct time from the server and the local machine and account for the difference when sending the request fixed the issue.</p>	"
