thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
54659949,54659949,null,1,0,Tue Feb 12 22:59:00 EST 2019,3116573,"<p>I have an IoT system with about 2000 devices. I would like each of the devices to upload data to a MongoDB instance.</p>		<p>Each device connects every 8-12 seconds and makes a single entry. The actual entry writing takes about 50ms.</p>		<p>My MongoDB has a maximum connection count of 100. Even though it's unlikely, there's always the chance that all 2000 devices will simultaneously connect and be rejected by the db due to max connection count.</p>		<p>Is there a pre-existing queuing service that all my devices can send data to? I don't want to have to write a middle-man server to collect all the data from IoT devices and forward it onto the db.</p>		<p>So basically instead of:</p>		<p>|device| --------> Database</p>		<p>I need:</p>		<p>|device|-------> service ------> Database</p>		<p>I'm just not sure what this 'service' is. Does such a thing exist? What should i be looking for? I tried using AWS SQS but I couldn't quite figure out how to make entries to the mongo db from the AWS SQS. Is this the right tool or is there another service out there?</p>	"
54659949,55026187,54659949,2,0,Wed Mar 06 15:03:00 EST 2019,10062782,"<p>You can try using Message Queues.</p>		<p>Rabbit MQ is a good option as it supports MQTT (which is great for device to cloud communication) as well as AMQP (0.9.1) (which is great for cloud to cloud communication) </p>		<p>You can also use any standard MQTT broker (EMQTT, Mosquito, Hive etc) and implement an MQTT to MongoDB client in between. Setting the MQTT clean_session flag to false will make the broker act as a cache. </p>	"
