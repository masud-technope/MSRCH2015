thread_ID, Id, ParentId, PostType, Score, CreationDate, OwnerID, Body
38139088,38139088,null,1,0,Fri Jul 01 07:04:00 EDT 2016,3309311,"<p>I just started playing with my fresh Raspberry Pi 3 and Win10 IOT.</p>		<p>I tried a little project but encountered some problems with async/await statements.</p>		<p>I am not new to C#, nor with await/async, but it is my first time with UWP so I may miss some tricks for this platform compairing to the WinForms/WPF environment.</p>		<p><em>(FYI, I haven't access to a Win10 developpement machine for the moment, so below snippets may not compile right away)</em></p>		<hr>		<p>Here is the standard template for a headless application on the Rpi :</p>		<pre><code>public async void Run(IBackgroundTaskInstance taskInstance)	{	    taskInstance.GetDeferral();		    await DoSomethingAsync();		    // Other irrevelant stuff then...		    defferal.Complete();	}	</code></pre>		<p>And then an async method :</p>		<pre><code>private async Task DoSomethingAsync()	{	    // Something done async	    await Task.Delay(1000);	} // &lt;--- Hangs here	</code></pre>		<p>When deploying the app to the Pi, it enters the <code>DoSomethingAsync</code> method and execute its content without problem.</p>		<p><strong>My issue is that the app hangs at the exiting semicolon.</strong></p>		<p>Do we need to use the <a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx" rel="nofollow">CoreDispatcher</a>, the <a href="https://msdn.microsoft.com/en-us/library/0ka9477y(v=vs.110).aspx" rel="nofollow">ThreadPool</a>, or a simple <code>new TaskFactory().StartNew(async () =&gt; { await DoSomethingAsync(); });</code> ?</p>		<p>What I don't understand is the use of the await/async should execute my method on an other thread, but it hangs the same way as if it was waiting for UI to process messages queue (WinForms/WPF background here :) )</p>		<p>Thank you in advance.</p>		<p><strong>EDIT :</strong> This snippet works if I remove all the async stuff to make it synchronously running.</p>	"
38139088,63712163,38139088,3,1,Fri Jul 01 08:56:00 EDT 2016,3729695,"`What I don't understand is the use of the await/async should execute my method on an other thread` if you need the work to be done at another thread you shouldn't use `await`. `await` will wait the call to finish."
38139088,63710920,38139088,3,0,Fri Jul 01 08:19:00 EDT 2016,134204,"What do you mean "hangs" and what exiting semicolon? You *don't* need to provide anything extra, by the way. In any case, `await` *awaits* the completion of an asynchronous method, it doesn't make something asynchronous automagically"
38139088,63717859,38139088,3,0,Fri Jul 01 11:22:00 EDT 2016,3309311,"@PanagiotisKanavos, I edited my question with a comment on which closing bracket it hangs. By hangs I mean when I do some step-by-step, it doesn't go further."
38139088,63717976,38139088,3,0,Fri Jul 01 11:25:00 EDT 2016,3309311,"@jackjop `await` will wait the call to finish, but since the method is `async`, the execution runs asynchronously of the "main thread" so shouldn't block any it."
38139088,63781877,38139088,3,0,Mon Jul 04 05:23:00 EDT 2016,5730046,"This does not seem to be an issue on Windows 10 Destktop."
38139088,38141001,38139088,2,0,Fri Jul 01 08:49:00 EDT 2016,5857392,"<p>I don't see Complete() method on defferal in your code, try this:</p>		<pre><code>public async void Run(IBackgroundTaskInstance taskInstance)	{	    BackgroudTaskDefferal defferal = taskInstance.GetDeferral();		    await DoSomethingAsync();		    // Other irrevelant stuff then...		    defferal.Complete();	}	</code></pre>		<p>That could be problem with hanging, application's waiting for signal that async operations are completed.</p>	"
38139088,63717822,38141001,3,0,Fri Jul 01 11:21:00 EDT 2016,3309311,"I edited my question, I didn't included the `defferal.Complete();` because it hangs prior this."
38139088,63718989,38141001,3,0,Fri Jul 01 11:52:00 EDT 2016,5857392,"Interesting, now it looks good, I've almost the same code in my app. Do you receive some error or it just 'freezes'? Isn't in your async code something very long lasting?"
38139088,63719093,38141001,3,0,Fri Jul 01 11:55:00 EDT 2016,3309311,"No error (but I didn't waited more than 10 seconds). It's a UWP so I'll try it this a evening on the PC and not deployed on the Rpi. The real async code only write a `DateTime.Now.ToString()` into a file."
38139088,38179776,38139088,2,0,Mon Jul 04 08:13:00 EDT 2016,5730046,"<p>If you remove all the breakpoints, add debugging logs like</p>		<pre><code>`System.Diagnostics.Debug.WriteLine`	</code></pre>		<p>The debug message would show everything is working all fine.</p>		<p>The hang only happens when you do the remote debugging with VS.</p>		<p>I suggest you open an user voice request.</p>	"
38139088,63787442,38179776,3,0,Mon Jul 04 08:51:00 EDT 2016,3309311,"Right, I haven't tried without breakpoint/debugger attached yet. I'll try this."
38139088,63872427,38179776,3,0,Wed Jul 06 13:31:00 EDT 2016,3309311,"I haven't got time to test it (more like a side hobby project than a professional one :) )"
38139088,63869510,38179776,3,0,Wed Jul 06 12:17:00 EDT 2016,5730046,"How is it going?"
